{"version":3,"file":"wysiwyg-editor.es.js","sources":["../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/jsx-runtime.js","../src/components/AdvancedToolbar.tsx","../src/utils/selectionUtils.ts","../src/utils/contentSanitizer.ts","../src/components/EditableArea.tsx","../src/components/ImageCropModal.tsx","../src/components/FileUploadModal.tsx","../src/components/ImageManager.tsx","../src/components/TableInsertModal.tsx","../src/components/SpecialCharModal.tsx","../src/components/UrlInputModal.tsx","../src/components/FindReplaceModal.tsx","../src/components/NotificationModal.tsx","../src/components/LinkPreviewPopup.tsx","../src/utils/commandSystem.ts","../src/components/WYSIWYGEditor.tsx","../src/components/Toolbar.tsx","../src/types/index.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { ToolbarProps } from '../types';\n\ninterface ToolbarGroup {\n  name: string;\n  buttons: ToolbarButton[];\n}\n\ninterface ToolbarButton {\n  command: string;\n  value?: string;\n  icon: string;\n  title: string;\n  type?: 'button' | 'dropdown' | 'color' | 'separator';\n  options?: { value: string; label: string; icon?: string }[];\n}\n\nconst toolbarGroups: ToolbarGroup[] = [\n  {\n    name: 'clipboard',\n    buttons: [\n      { command: 'undo', icon: '↶', title: 'Undo' },\n      { command: 'redo', icon: '↷', title: 'Redo' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'editing',\n    buttons: [\n      { command: 'findReplace', icon: '🔍', title: 'Find & Replace' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'basicstyles',\n    buttons: [\n      { command: 'bold', icon: 'B', title: 'Bold' },\n      { command: 'italic', icon: 'I', title: 'Italic' },\n      { command: 'underline', icon: 'U', title: 'Underline' },\n      { command: 'strikethrough', icon: 'S̶', title: 'Strikethrough' },\n      { command: 'subscript', icon: 'X₂', title: 'Subscript' },\n      { command: 'superscript', icon: 'X²', title: 'Superscript' },\n      { command: 'removeFormat', icon: '🧹', title: 'Clear Formatting' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'paragraph',\n    buttons: [\n      // Individual heading buttons for test compatibility\n      { command: 'formatBlock', value: 'H1', icon: 'H1', title: 'Heading 1' },\n      { command: 'formatBlock', value: 'H2', icon: 'H2', title: 'Heading 2' },\n      { command: 'formatBlock', value: 'H3', icon: 'H3', title: 'Heading 3' },\n      {\n        command: 'formatBlock',\n        icon: '¶',\n        title: 'Format',\n        type: 'dropdown',\n        options: [\n          { value: 'P', label: 'Normal', icon: '¶' },\n          { value: 'H1', label: 'Heading 1', icon: 'H1' },\n          { value: 'H2', label: 'Heading 2', icon: 'H2' },\n          { value: 'H3', label: 'Heading 3', icon: 'H3' },\n          { value: 'H4', label: 'Heading 4', icon: 'H4' },\n          { value: 'H5', label: 'Heading 5', icon: 'H5' },\n          { value: 'H6', label: 'Heading 6', icon: 'H6' },\n          { value: 'BLOCKQUOTE', label: 'Quote', icon: '\"' },\n          { value: 'PRE', label: 'Code Block', icon: '</>' }\n        ]\n      },\n      {\n        command: 'fontSize',\n        icon: '🔤',\n        title: 'Font Size',\n        type: 'dropdown',\n        options: [\n          { value: '1', label: '8pt' },\n          { value: '2', label: '10pt' },\n          { value: '3', label: '12pt' },\n          { value: '4', label: '14pt' },\n          { value: '5', label: '18pt' },\n          { value: '6', label: '24pt' },\n          { value: '7', label: '36pt' }\n        ]\n      },\n      {\n        command: 'fontName',\n        icon: 'Aa',\n        title: 'Font Family',\n        type: 'dropdown',\n        options: [\n          { value: 'Arial', label: 'Arial' },\n          { value: 'Georgia', label: 'Georgia' },\n          { value: 'Times New Roman', label: 'Times New Roman' },\n          { value: 'Courier New', label: 'Courier New' },\n          { value: 'Verdana', label: 'Verdana' },\n          { value: 'Helvetica', label: 'Helvetica' }\n        ]\n      },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'colors',\n    buttons: [\n      { command: 'fontColor', icon: 'A', title: 'Text Color', type: 'color' },\n      { command: 'backgroundColor', icon: '🎨', title: 'Background Color', type: 'color' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'list',\n    buttons: [\n      { command: 'insertUnorderedList', icon: '•', title: 'Bullet List' },\n      { command: 'insertOrderedList', icon: '1.', title: 'Numbered List' },\n      { command: 'outdent', icon: '⇤', title: 'Decrease Indent' },\n      { command: 'indent', icon: '⇥', title: 'Increase Indent' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'align',\n    buttons: [\n      { command: 'justifyLeft', icon: '⬅', title: 'Align Left' },\n      { command: 'justifyCenter', icon: '⬌', title: 'Align Center' },\n      { command: 'justifyRight', icon: '➡', title: 'Align Right' },\n      { command: 'justifyFull', icon: '⬌', title: 'Justify' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'links',\n    buttons: [\n      { command: 'createLink', icon: '🔗', title: 'Insert Link' },\n      { command: 'unlink', icon: '🔗✕', title: 'Remove Link' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'insert',\n    buttons: [\n      { command: 'insertImage', icon: '🖼️', title: 'Insert Image' },\n      { command: 'insertTable', icon: '⊞', title: 'Insert Table' },\n      { command: 'insertHorizontalRule', icon: '―', title: 'Horizontal Rule' },\n      { command: 'insertSpecialChar', icon: 'Ω', title: 'Special Characters' },\n      { command: 'uploadFile', icon: '📎', title: 'Upload File' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'tools',\n    buttons: [\n      { command: 'sourceCode', icon: '</>', title: 'Source Code' },\n      { command: 'fullscreen', icon: '⛶', title: 'Fullscreen' },\n      { command: 'print', icon: '🖨️', title: 'Print' },\n      { command: 'spellCheck', icon: '✓', title: 'Spell Check' }\n    ]\n  }\n];\n\nconst colorPalette = [\n  // Black / Grayscale\n  '#ffffff', '#e6e6e6', '#999999', '#4d4d4d', '#1a1a1a', '#000000',\n\n  // Red\n  '#ffebee', '#ef9a9a', '#ef5350', '#f44336', '#d32f2f', '#b71c1c',\n\n  // Blue\n  '#e3f2fd', '#90caf9', '#42a5f5', '#2196f3', '#1976d2', '#0d47a1',\n\n  // Green\n  '#e8f5e9', '#a5d6a7', '#66bb6a', '#4caf50', '#388e3c', '#1b5e20',\n\n  // Orange\n  '#fff3e0', '#ffcc80', '#ffa726', '#ff9800', '#f57c00', '#e65100',\n\n  // Grey\n  '#fafafa', '#eeeeee', '#bdbdbd', '#9e9e9e', '#616161', '#212121'\n];\n\nexport const AdvancedToolbar: React.FC<ToolbarProps> = ({\n  onCommand,\n  activeFormats,\n  canUndo,\n  canRedo\n}) => {\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [openColorPicker, setOpenColorPicker] = useState<string | null>(null);\n  const dropdownRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('.toolbar-dropdown') &&\n        !target.closest('.toolbar-color-picker') &&\n        !target.closest('.toolbar-button')) {\n        setOpenDropdown(null);\n        setOpenColorPicker(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleButtonClick = (button: ToolbarButton) => {\n    if (button.type === 'dropdown') {\n      setOpenDropdown(openDropdown === button.command ? null : button.command);\n      setOpenColorPicker(null);\n    } else if (button.type === 'color') {\n      setOpenColorPicker(openColorPicker === button.command ? null : button.command);\n      setOpenDropdown(null);\n    } else {\n      onCommand(button.command, button.value);\n      setOpenDropdown(null);\n      setOpenColorPicker(null);\n    }\n  };\n\n  const handleDropdownSelect = (command: string, value: string) => {\n    onCommand(command, value);\n    setOpenDropdown(null);\n  };\n\n  const handleColorSelect = (command: string, color: string) => {\n    onCommand(command, color);\n    setOpenColorPicker(null);\n  };\n\n  const isButtonActive = (command: string, value?: string): boolean => {\n    const formatMap: Record<string, string> = {\n      'bold': 'BOLD',\n      'italic': 'ITALIC',\n      'underline': 'UNDERLINE',\n      'strikethrough': 'STRIKETHROUGH',\n      'subscript': 'SUBSCRIPT',\n      'superscript': 'SUPERSCRIPT',\n      'insertUnorderedList': 'INSERT_UNORDERED_LIST',\n      'insertOrderedList': 'INSERT_ORDERED_LIST',\n      'justifyLeft': 'JUSTIFY_LEFT',\n      'justifyCenter': 'JUSTIFY_CENTER',\n      'justifyRight': 'JUSTIFY_RIGHT',\n      'justifyFull': 'JUSTIFY_FULL',\n      'createLink': 'CREATE_LINK'\n    };\n\n    if (command === 'formatBlock' && value) {\n      const formatKey = `FORMAT_${value}`;\n      return activeFormats.has(formatKey);\n    }\n\n    const formatKey = formatMap[command];\n    return formatKey ? activeFormats.has(formatKey) : false;\n  };\n\n  const isButtonDisabled = (command: string): boolean => {\n    if (command === 'undo') return !canUndo;\n    if (command === 'redo') return !canRedo;\n    return false;\n  };\n\n  const renderButton = (button: ToolbarButton, groupName: string, index: number) => {\n    if (button.type === 'separator') {\n      return <div key={`${groupName}-sep-${index}`} className=\"toolbar-separator\" />;\n    }\n\n    const isActive = isButtonActive(button.command, button.value);\n    const isDisabled = isButtonDisabled(button.command);\n    const buttonId = `${groupName}-${button.command}-${index}`;\n\n    return (\n      <div key={buttonId} className=\"relative\">\n        <button\n          className={`toolbar-button ${isActive ? 'active' : ''} ${button.type === 'dropdown' || button.type === 'color' ? 'dropdown' : ''\n            }`}\n          title={button.title}\n          aria-label={button.title}\n          disabled={isDisabled}\n          onClick={() => handleButtonClick(button)}\n          onMouseDown={(e) => e.preventDefault()}\n        >\n          <span className=\"button-icon\" aria-hidden=\"true\">\n            {button.icon}\n          </span>\n          {(button.type === 'dropdown' || button.type === 'color') && (\n            <span className=\"dropdown-arrow\">▼</span>\n          )}\n        </button>\n\n        {/* Dropdown Menu */}\n        {button.type === 'dropdown' && openDropdown === button.command && (\n          <div\n            ref={(el) => (dropdownRefs.current[button.command] = el)}\n            className=\"toolbar-dropdown\"\n          >\n            {button.options?.map((option) => (\n              <button\n                key={option.value}\n                className=\"dropdown-item\"\n                onClick={() => handleDropdownSelect(button.command, option.value)}\n              >\n                {option.icon && <span className=\"option-icon\">{option.icon}</span>}\n                <span className=\"option-label\">{option.label}</span>\n              </button>\n            ))}\n          </div>\n        )}\n\n        {/* Color Picker */}\n        {button.type === 'color' && openColorPicker === button.command && (\n          <div\n            ref={(el) => (dropdownRefs.current[button.command] = el)}\n            className=\"toolbar-color-picker\"\n          >\n            <div className=\"color-picker-header\">\n              <h4 className=\"color-picker-title\">\n                {button.command === 'fontColor' ? 'Text Color' : 'Background Color'}\n              </h4>\n              <button\n                className=\"color-picker-close\"\n                onClick={() => setOpenColorPicker(null)}\n                aria-label=\"Close color picker\"\n              >\n                ×\n              </button>\n            </div>\n\n            <div className=\"color-grid\">\n              {colorPalette.map((color) => (\n                <button\n                  key={color}\n                  className=\"color-swatch\"\n                  style={{ backgroundColor: color }}\n                  onClick={() => handleColorSelect(button.command, color)}\n                  title={color}\n                  aria-label={`Select color ${color}`}\n                />\n              ))}\n            </div>\n\n            <div className=\"color-input-section\">\n              <input\n                type=\"color\"\n                className=\"color-input\"\n                onChange={(e) => handleColorSelect(button.command, e.target.value)}\n                title=\"Choose custom color\"\n              />\n              <span className=\"color-input-label\">Custom Color</span>\n              <button\n                className=\"color-remove-btn\"\n                onClick={() => handleColorSelect(button.command, button.command === 'fontColor' ? 'inherit' : 'transparent')}\n                title=\"Remove color\"\n              >\n                Remove\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"advanced-toolbar toolbar\" role=\"toolbar\" aria-label=\"Rich text formatting toolbar\">\n      {toolbarGroups.map((group) => (\n        <div key={group.name} className=\"toolbar-group\">\n          {group.buttons.map((button, index) => renderButton(button, group.name, index))}\n        </div>\n      ))}\n    </div>\n  );\n};","import { SelectionState } from '../types';\n\n/**\n * Gets the current selection state from the browser\n */\nexport const getCurrentSelection = (): SelectionState => {\n  const selection = window.getSelection();\n  \n  if (!selection || selection.rangeCount === 0) {\n    return {\n      range: null,\n      isCollapsed: true,\n      activeFormats: new Set(),\n      currentBlockFormat: 'div'\n    };\n  }\n\n  const range = selection.getRangeAt(0);\n  const activeFormats = getActiveFormats();\n  const currentBlockFormat = getCurrentBlockFormat();\n\n  return {\n    range: range.cloneRange(),\n    isCollapsed: selection.isCollapsed,\n    activeFormats,\n    currentBlockFormat\n  };\n};\n\n/**\n * Restores a previously saved selection\n */\nexport const restoreSelection = (selectionState: SelectionState): void => {\n  if (!selectionState.range) {\n    return;\n  }\n\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  try {\n    selection.removeAllRanges();\n    selection.addRange(selectionState.range);\n  } catch (error) {\n    // Range might be invalid, ignore silently\n    console.warn('Failed to restore selection:', error);\n  }\n};\n\n/**\n * Saves the current selection and returns a restore function\n */\nexport const saveSelection = (): (() => void) => {\n  const selectionState = getCurrentSelection();\n  \n  return () => {\n    restoreSelection(selectionState);\n  };\n};\n\n/**\n * Gets the currently active text formatting\n */\nexport const getActiveFormats = (): Set<string> => {\n  const activeFormats = new Set<string>();\n  \n  try {\n    if (document.queryCommandState('bold')) {\n      activeFormats.add('bold');\n    }\n    if (document.queryCommandState('italic')) {\n      activeFormats.add('italic');\n    }\n    if (document.queryCommandState('underline')) {\n      activeFormats.add('underline');\n    }\n    if (document.queryCommandState('insertUnorderedList')) {\n      activeFormats.add('insertUnorderedList');\n    }\n    if (document.queryCommandState('insertOrderedList')) {\n      activeFormats.add('insertOrderedList');\n    }\n    if (document.queryCommandState('justifyLeft')) {\n      activeFormats.add('justifyLeft');\n    }\n    if (document.queryCommandState('justifyCenter')) {\n      activeFormats.add('justifyCenter');\n    }\n    if (document.queryCommandState('justifyRight')) {\n      activeFormats.add('justifyRight');\n    }\n  } catch (error) {\n    // Some browsers might not support all commands\n    console.warn('Error checking command state:', error);\n  }\n\n  return activeFormats;\n};\n\n/**\n * Gets the current block format (heading level, etc.)\n */\nexport const getCurrentBlockFormat = (): string => {\n  try {\n    const formatBlock = document.queryCommandValue('formatBlock');\n    if (formatBlock) {\n      return formatBlock.toLowerCase();\n    }\n  } catch (error) {\n    console.warn('Error getting block format:', error);\n  }\n\n  // Fallback: check the current element\n  const selection = window.getSelection();\n  if (selection && selection.rangeCount > 0) {\n    const range = selection.getRangeAt(0);\n    let element = range.commonAncestorContainer;\n    \n    if (element.nodeType === Node.TEXT_NODE) {\n      element = element.parentElement || element;\n    }\n    \n    const tagName = (element as Element).tagName?.toLowerCase();\n    if (['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'div'].includes(tagName)) {\n      return tagName;\n    }\n  }\n\n  return 'div';\n};\n\n/**\n * Checks if the current selection is within the specified editor element\n */\nexport const isSelectionInEditor = (editorElement: HTMLElement): boolean => {\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return false;\n  }\n\n  const range = selection.getRangeAt(0);\n  return editorElement.contains(range.commonAncestorContainer);\n};\n\n/**\n * Focuses the editor and places cursor at the end\n */\nexport const focusEditor = (editorElement: HTMLElement): void => {\n  editorElement.focus();\n  \n  // Place cursor at the end\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(editorElement);\n    range.collapse(false);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\n/**\n * Focuses the editor and restores the last known selection\n */\nexport const focusEditorWithSelection = (\n  editorElement: HTMLElement, \n  selectionState?: SelectionState\n): void => {\n  editorElement.focus();\n  \n  if (selectionState) {\n    restoreSelection(selectionState);\n  }\n};","export interface SanitizationConfig {\n  allowedTags: string[];\n  allowedAttributes: Record<string, string[]>;\n  allowedProtocols: string[];\n}\n\nexport const DEFAULT_SANITIZATION_CONFIG: SanitizationConfig = {\n  allowedTags: [\n    'p', 'br', 'strong', 'em', 'u', 'b', 'i',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n    'ul', 'ol', 'li',\n    'a', 'span', 'div'\n  ],\n  allowedAttributes: {\n    'a': ['href', 'title'],\n    'span': ['style'],\n    'div': ['style'],\n    'p': ['style'],\n    'h1': ['style'],\n    'h2': ['style'],\n    'h3': ['style'],\n    'h4': ['style'],\n    'h5': ['style'],\n    'h6': ['style']\n  },\n  allowedProtocols: ['http:', 'https:', 'mailto:']\n};\n\nexport class ContentSanitizer {\n  private config: SanitizationConfig;\n\n  constructor(config: SanitizationConfig = DEFAULT_SANITIZATION_CONFIG) {\n    this.config = config;\n  }\n\n  /**\n   * Sanitize HTML content by removing dangerous elements and attributes\n   */\n  public sanitizeHtml(html: string): string {\n    if (!html || typeof html !== 'string') {\n      return '';\n    }\n\n    // Create a temporary DOM element to parse the HTML\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n\n    // Recursively sanitize all elements\n    this.sanitizeElement(tempDiv);\n\n    return tempDiv.innerHTML;\n  }\n\n  /**\n   * Sanitize pasted content specifically for the editor\n   */\n  public sanitizePastedContent(html: string): string {\n    // First, clean up common paste artifacts (before sanitization)\n    let cleaned = this.cleanPasteArtifacts(html);\n\n    // Then perform basic HTML sanitization\n    let sanitized = this.sanitizeHtml(cleaned);\n\n    // Normalize whitespace and line breaks\n    sanitized = this.normalizeWhitespace(sanitized);\n\n    return sanitized;\n  }\n\n  /**\n   * Recursively sanitize a DOM element and its children\n   */\n  private sanitizeElement(element: Element): void {\n    const children = Array.from(element.children);\n\n    for (const child of children) {\n      const tagName = child.tagName.toLowerCase();\n\n      // Remove disallowed tags\n      if (!this.config.allowedTags.includes(tagName)) {\n        // Special handling for dangerous tags - remove completely including content\n        if (this.isDangerousTag(tagName)) {\n          child.remove();\n          continue;\n        }\n\n        // For other disallowed tags, preserve text content but remove the tag\n        const textContent = child.textContent || '';\n        if (textContent.trim()) {\n          const textNode = document.createTextNode(textContent);\n          child.parentNode?.replaceChild(textNode, child);\n        } else {\n          child.remove();\n        }\n        continue;\n      }\n\n      // Sanitize attributes\n      this.sanitizeAttributes(child);\n\n      // Recursively sanitize children\n      this.sanitizeElement(child);\n    }\n  }\n\n  /**\n   * Check if a tag is dangerous and should be removed completely\n   */\n  private isDangerousTag(tagName: string): boolean {\n    const dangerousTags = [\n      'script', 'iframe', 'object', 'embed', 'form', 'input', \n      'button', 'textarea', 'select', 'option', 'style', 'link',\n      'meta', 'base', 'applet', 'frame', 'frameset'\n    ];\n    return dangerousTags.includes(tagName);\n  }\n\n  /**\n   * Sanitize attributes of an element\n   */\n  private sanitizeAttributes(element: Element): void {\n    const tagName = element.tagName.toLowerCase();\n    const allowedAttrs = this.config.allowedAttributes[tagName] || [];\n    const attributes = Array.from(element.attributes);\n\n    for (const attr of attributes) {\n      const attrName = attr.name.toLowerCase();\n\n      // Remove disallowed attributes\n      if (!allowedAttrs.includes(attrName)) {\n        element.removeAttribute(attr.name);\n        continue;\n      }\n\n      // Special handling for href attributes\n      if (attrName === 'href') {\n        const sanitizedHref = this.sanitizeUrl(attr.value);\n        if (sanitizedHref) {\n          element.setAttribute('href', sanitizedHref);\n        } else {\n          element.removeAttribute('href');\n        }\n        continue;\n      }\n\n      // Special handling for style attributes\n      if (attrName === 'style') {\n        const sanitizedStyle = this.sanitizeStyle(attr.value);\n        if (sanitizedStyle) {\n          element.setAttribute('style', sanitizedStyle);\n        } else {\n          element.removeAttribute('style');\n        }\n        continue;\n      }\n\n      // For other attributes, ensure they don't contain scripts\n      if (this.containsScript(attr.value)) {\n        element.removeAttribute(attr.name);\n      }\n    }\n  }\n\n  /**\n   * Sanitize URL to ensure it uses allowed protocols\n   */\n  private sanitizeUrl(url: string): string | null {\n    if (!url || typeof url !== 'string') {\n      return null;\n    }\n\n    const trimmedUrl = url.trim();\n\n    // Check for javascript: or data: protocols and other dangerous schemes\n    if (/^(javascript|data|vbscript|file|ftp):/i.test(trimmedUrl)) {\n      return null;\n    }\n\n    // Allow relative URLs\n    if (trimmedUrl.startsWith('/') || trimmedUrl.startsWith('./') || trimmedUrl.startsWith('../')) {\n      return trimmedUrl;\n    }\n\n    // Allow fragment identifiers\n    if (trimmedUrl.startsWith('#')) {\n      return trimmedUrl;\n    }\n\n    // Check for allowed protocols\n    try {\n      const urlObj = new URL(trimmedUrl);\n      if (this.config.allowedProtocols.includes(urlObj.protocol)) {\n        return trimmedUrl;\n      }\n    } catch (error) {\n      // If URL parsing fails, try to add http:// prefix\n      try {\n        const urlWithProtocol = `http://${trimmedUrl}`;\n        const urlObj = new URL(urlWithProtocol);\n        if (this.config.allowedProtocols.includes(urlObj.protocol)) {\n          return urlWithProtocol;\n        }\n      } catch (error) {\n        // If still fails, return null\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Sanitize CSS style attribute\n   */\n  private sanitizeStyle(style: string): string | null {\n    if (!style || typeof style !== 'string') {\n      return null;\n    }\n\n    // Remove dangerous CSS properties and values\n    const dangerousPatterns = [\n      /expression\\s*\\(/i,\n      /javascript\\s*:/i,\n      /vbscript\\s*:/i,\n      /data\\s*:/i,\n      /import\\s*['\"]/i,\n      /@import/i,\n      /binding\\s*:/i,\n      /behavior\\s*:/i,\n      /position\\s*:\\s*fixed/i,\n      /position\\s*:\\s*absolute/i\n    ];\n\n    for (const pattern of dangerousPatterns) {\n      if (pattern.test(style)) {\n        return null;\n      }\n    }\n\n    // Allow only basic text formatting styles\n    const allowedStyleProperties = [\n      'color', 'background-color', 'font-size', 'font-weight', 'font-style',\n      'text-decoration', 'text-align', 'margin', 'padding', 'border',\n      'font-family'\n    ];\n\n    // Parse and filter CSS properties\n    const styleDeclarations = style.split(';').filter(decl => decl.trim());\n    const sanitizedDeclarations: string[] = [];\n\n    for (const declaration of styleDeclarations) {\n      const [property, value] = declaration.split(':').map(s => s.trim());\n      \n      if (property && value && allowedStyleProperties.includes(property.toLowerCase())) {\n        // Additional check to ensure value doesn't contain dangerous content\n        if (!this.containsScript(value)) {\n          sanitizedDeclarations.push(`${property}: ${value}`);\n        }\n      }\n    }\n\n    return sanitizedDeclarations.length > 0 ? sanitizedDeclarations.join('; ') : null;\n  }\n\n  /**\n   * Check if a string contains potentially dangerous script content\n   */\n  private containsScript(value: string): boolean {\n    if (!value || typeof value !== 'string') {\n      return false;\n    }\n\n    const dangerousPatterns = [\n      /javascript\\s*:/i,\n      /vbscript\\s*:/i,\n      /data\\s*:/i,\n      /on\\w+\\s*=/i, // Event handlers like onclick, onload, etc.\n      /<script/i,\n      /<\\/script/i,\n      /expression\\s*\\(/i,\n      /eval\\s*\\(/i,\n      /setTimeout\\s*\\(/i,\n      /setInterval\\s*\\(/i\n    ];\n\n    return dangerousPatterns.some(pattern => pattern.test(value));\n  }\n\n  /**\n   * Clean up common artifacts from pasted content\n   */\n  private cleanPasteArtifacts(html: string): string {\n    let cleaned = html;\n\n    // Remove Microsoft Word specific tags and attributes\n    cleaned = cleaned.replace(/<o:p\\s*\\/?>/gi, '');\n    cleaned = cleaned.replace(/<\\/o:p>/gi, '');\n    cleaned = cleaned.replace(/\\s*mso-[^:]+:[^;\"]+;?/gi, '');\n    cleaned = cleaned.replace(/\\s*class=\"?Mso[^\"]*\"?/gi, '');\n\n    // Remove empty paragraphs and divs\n    cleaned = cleaned.replace(/<p[^>]*>\\s*<\\/p>/gi, '');\n    cleaned = cleaned.replace(/<div[^>]*>\\s*<\\/div>/gi, '');\n\n    // Remove font tags and replace with spans\n    cleaned = cleaned.replace(/<font[^>]*>/gi, '<span>');\n    cleaned = cleaned.replace(/<\\/font>/gi, '</span>');\n\n    // Remove comments\n    cleaned = cleaned.replace(/<!--[\\s\\S]*?-->/g, '');\n\n    // Clean up excessive whitespace\n    cleaned = cleaned.replace(/\\s+/g, ' ');\n    cleaned = cleaned.replace(/>\\s+</g, '><');\n\n    return cleaned.trim();\n  }\n\n  /**\n   * Normalize whitespace and line breaks\n   */\n  private normalizeWhitespace(html: string): string {\n    let normalized = html;\n\n    // Convert multiple consecutive <br> tags to paragraph breaks\n    normalized = normalized.replace(/(<br\\s*\\/?>){2,}/gi, '</p><p>');\n\n    // Ensure content is wrapped in paragraphs if it's not already\n    if (normalized && !normalized.match(/^<(p|h[1-6]|ul|ol|div)/i)) {\n      normalized = `<p>${normalized}</p>`;\n    }\n\n    // Clean up empty paragraphs that might have been created\n    normalized = normalized.replace(/<p>\\s*<\\/p>/gi, '');\n\n    return normalized;\n  }\n\n  /**\n   * Extract plain text from HTML content\n   */\n  public extractPlainText(html: string): string {\n    if (!html || typeof html !== 'string') {\n      return '';\n    }\n\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n    return tempDiv.textContent || tempDiv.innerText || '';\n  }\n\n  /**\n   * Check if content is safe (contains no dangerous elements)\n   */\n  public isContentSafe(html: string): boolean {\n    if (!html || typeof html !== 'string') {\n      return true;\n    }\n\n    // Quick check for obviously dangerous content\n    const dangerousPatterns = [\n      /<script/i,\n      /javascript\\s*:/i,\n      /vbscript\\s*:/i,\n      /on\\w+\\s*=/i,\n      /<iframe/i,\n      /<object/i,\n      /<embed/i,\n      /<form/i,\n      /<input/i,\n      /<button/i\n    ];\n\n    return !dangerousPatterns.some(pattern => pattern.test(html));\n  }\n}\n\n// Export singleton instance\nexport const contentSanitizer = new ContentSanitizer();","import React, { useEffect, useState, useCallback } from 'react';\nimport { EditableAreaProps, SelectionState } from '../types';\nimport { \n  getCurrentSelection, \n  isSelectionInEditor,\n  focusEditorWithSelection \n} from '../utils/selectionUtils';\nimport { contentSanitizer } from '../utils/contentSanitizer';\n\nexport const EditableArea: React.FC<EditableAreaProps> = ({\n  content,\n  placeholder,\n  onContentChange,\n  onFocus,\n  onBlur,\n  editorRef,\n  onSelectionChange,\n  onLinkClick\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [lastSelection, setLastSelection] = useState<SelectionState | null>(null);\n\n  // Handle selection changes to track cursor position\n  const handleSelectionChange = useCallback(() => {\n    if (editorRef.current && isSelectionInEditor(editorRef.current)) {\n      const currentSelection = getCurrentSelection();\n      setLastSelection(currentSelection);\n      \n      // Notify parent component of selection change\n      if (onSelectionChange) {\n        onSelectionChange(currentSelection);\n      }\n    }\n  }, [editorRef, onSelectionChange]);\n\n  // Restore focus and selection after toolbar interactions\n  const restoreFocus = useCallback(() => {\n    if (editorRef.current && lastSelection) {\n      focusEditorWithSelection(editorRef.current, lastSelection);\n    }\n  }, [editorRef, lastSelection]);\n\n  // Handle input events and content changes\n  const handleInput = (event: React.FormEvent<HTMLDivElement>) => {\n    const target = event.currentTarget;\n    const newContent = target.innerHTML;\n    \n    // Process the content to handle edge cases\n    const processedContent = processContent(newContent);\n    onContentChange(processedContent);\n  };\n\n  // Process content to handle browser inconsistencies and edge cases\n  const processContent = (rawContent: string): string => {\n    // Handle empty content cases\n    if (!rawContent || rawContent === '<br>' || rawContent === '<div><br></div>') {\n      return '';\n    }\n    \n    // Clean up unnecessary wrapper divs that some browsers add\n    let processed = rawContent.replace(/^<div><br><\\/div>$/, '');\n    processed = processed.replace(/^<div>(.*)<\\/div>$/, '$1');\n    \n    return processed;\n  };\n\n  // Handle focus events\n  const handleFocus = (_event: React.FocusEvent<HTMLDivElement>) => {\n    setIsFocused(true);\n    onFocus();\n  };\n\n  // Handle blur events\n  const handleBlur = (_event: React.FocusEvent<HTMLDivElement>) => {\n    setIsFocused(false);\n    onBlur();\n  };\n\n  // Handle paste events with content sanitization\n  const handlePaste = (event: React.ClipboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    // Get clipboard data\n    const clipboardData = event.clipboardData;\n    if (!clipboardData) {\n      return;\n    }\n\n    // Try to get HTML content first, fall back to plain text\n    let pastedContent = clipboardData.getData('text/html');\n    \n    if (!pastedContent) {\n      // If no HTML, get plain text and wrap in paragraph\n      const plainText = clipboardData.getData('text/plain');\n      if (plainText) {\n        pastedContent = `<p>${plainText.replace(/\\n/g, '<br>')}</p>`;\n      }\n    }\n\n    if (!pastedContent) {\n      return;\n    }\n\n    // Sanitize the pasted content\n    const sanitizedContent = contentSanitizer.sanitizePastedContent(pastedContent);\n\n    // Insert the sanitized content at the current cursor position\n    insertContentAtCursor(sanitizedContent);\n  };\n\n  // Insert content at the current cursor position\n  const insertContentAtCursor = (content: string) => {\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) {\n      return;\n    }\n\n    const range = selection.getRangeAt(0);\n    \n    // Delete any selected content first\n    range.deleteContents();\n\n    // Create a temporary container to hold the new content\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = content;\n\n    // Insert each child node from the temporary container\n    const fragment = document.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n\n    range.insertNode(fragment);\n\n    // Move cursor to the end of inserted content\n    range.collapse(false);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    // Trigger content change\n    if (editorRef.current) {\n      const newContent = editorRef.current.innerHTML;\n      onContentChange(processContent(newContent));\n    }\n  };\n\n  // Handle click events to show link preview popup\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const target = event.target as HTMLElement;\n    \n    // Check if the clicked element is a link or inside a link\n    const linkElement = target.closest('a[href]') as HTMLAnchorElement;\n    \n    if (linkElement && linkElement.href) {\n      // Prevent the contentEditable from handling this click\n      event.preventDefault();\n      event.stopPropagation();\n      \n      // Trigger the link preview popup via parent component\n      if (onLinkClick) {\n        onLinkClick(event.nativeEvent, linkElement);\n      }\n      return;\n    }\n  };\n\n  // Handle keydown events for special key processing\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    // Handle Enter key for list management\n    if (event.key === 'Enter' && !event.shiftKey) {\n      const handled = handleEnterInList(event);\n      if (handled) {\n        return; // Event was handled, don't let browser process it\n      }\n      // Let the browser handle Enter key naturally for non-list cases\n    }\n  };\n\n  // Handle Enter key behavior within lists\n  const handleEnterInList = (event: React.KeyboardEvent<HTMLDivElement>): boolean => {\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) {\n      return false;\n    }\n\n    const range = selection.getRangeAt(0);\n    const currentElement = range.startContainer.nodeType === Node.TEXT_NODE \n      ? range.startContainer.parentElement \n      : range.startContainer as Element;\n\n    // Find the closest list item\n    const listItem = currentElement?.closest('li');\n    if (!listItem) {\n      return false; // Not in a list\n    }\n\n    const list = listItem.closest('ul, ol');\n    if (!list) {\n      return false; // List item not in a list (shouldn't happen)\n    }\n\n    // Check if the list item is empty or cursor is at the beginning of an empty item\n    const isEmptyListItem = listItem.textContent?.trim() === '' || \n                           (range.startOffset === 0 && listItem.textContent?.trim() === '');\n\n    if (isEmptyListItem) {\n      // Double Enter behavior: exit the list\n      event.preventDefault();\n      exitList(listItem, list);\n      return true;\n    } else {\n      // Single Enter behavior: create new list item\n      // Let the browser handle this naturally as it works well\n      return false;\n    }\n  };\n\n  // Exit list by removing empty list item and placing cursor after the list\n  const exitList = (listItem: Element, list: Element) => {\n    // Remove the empty list item\n    listItem.remove();\n\n    // Create a new paragraph after the list\n    const newParagraph = document.createElement('p');\n    newParagraph.innerHTML = '<br>'; // Ensure paragraph has content for cursor placement\n    \n    // Insert the paragraph after the list\n    if (list.nextSibling) {\n      list.parentNode?.insertBefore(newParagraph, list.nextSibling);\n    } else {\n      list.parentNode?.appendChild(newParagraph);\n    }\n\n    // Place cursor in the new paragraph\n    const selection = window.getSelection();\n    if (selection) {\n      const range = document.createRange();\n      range.setStart(newParagraph, 0);\n      range.collapse(true);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n\n    // Trigger content change\n    if (editorRef.current) {\n      const newContent = editorRef.current.innerHTML;\n      onContentChange(processContent(newContent));\n    }\n  };\n\n  // Determine if placeholder should be shown\n  const shouldShowPlaceholder = (): boolean => {\n    if (isFocused) return false;\n    \n    // Check if content is empty or contains only whitespace/br tags\n    const isEmpty = !content || \n                   content === '' || \n                   content === '<br>' || \n                   content === '<div><br></div>' ||\n                   content.replace(/<[^>]*>/g, '').trim() === '';\n    \n    return isEmpty;\n  };\n\n  // Update content when prop changes\n  useEffect(() => {\n    if (editorRef.current && editorRef.current.innerHTML !== content) {\n      editorRef.current.innerHTML = content || '';\n    }\n  }, [content, editorRef]);\n\n  // Set up selection change event listener\n  useEffect(() => {\n    document.addEventListener('selectionchange', handleSelectionChange);\n    \n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n    };\n  }, [handleSelectionChange]);\n\n  // Expose restoreFocus function through ref\n  useEffect(() => {\n    if (editorRef.current) {\n      // Add restoreFocus method to the editor element for external access\n      (editorRef.current as any).restoreFocus = restoreFocus;\n    }\n  }, [editorRef, restoreFocus]);\n\n  return (\n    <div className=\"editable-area-container\">\n      <div\n        ref={editorRef}\n        className=\"editable-area\"\n        contentEditable={true}\n        onInput={handleInput}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        onPaste={handlePaste}\n        onClick={handleClick}\n        suppressContentEditableWarning={true}\n        role=\"textbox\"\n        aria-label=\"Rich text editor content area\"\n        aria-multiline=\"true\"\n        aria-describedby=\"keyboard-shortcuts-help\"\n        data-placeholder={placeholder}\n      />\n      {shouldShowPlaceholder() && (\n        <div className=\"placeholder\" aria-hidden=\"true\">\n          {placeholder}\n        </div>\n      )}\n    </div>\n  );\n};","import React, { useState, useRef, useCallback } from 'react';\nimport ReactCrop, { Crop, PixelCrop, centerCrop, makeAspectCrop } from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\ninterface ImageCropModalProps {\n  isOpen: boolean;\n  imageUrl: string;\n  onClose: () => void;\n  onCropComplete: (croppedImageUrl: string) => void;\n}\n\nfunction centerAspectCrop(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number,\n) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: '%',\n        width: 90,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight,\n    ),\n    mediaWidth,\n    mediaHeight,\n  )\n}\n\nexport const ImageCropModal: React.FC<ImageCropModalProps> = ({\n  isOpen,\n  imageUrl,\n  onClose,\n  onCropComplete\n}) => {\n  const [crop, setCrop] = useState<Crop>();\n  const [completedCrop, setCompletedCrop] = useState<PixelCrop>();\n  const [aspect, setAspect] = useState<number | undefined>(undefined);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const onImageLoad = useCallback((e: React.SyntheticEvent<HTMLImageElement>) => {\n    const { width, height } = e.currentTarget;\n    setCrop(centerAspectCrop(width, height, aspect || width / height));\n  }, [aspect]);\n\n  const getCroppedImg = useCallback(async () => {\n    if (!completedCrop || !imgRef.current || !canvasRef.current) {\n      return null;\n    }\n\n    const image = imgRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx) {\n      return null;\n    }\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n\n    canvas.width = completedCrop.width;\n    canvas.height = completedCrop.height;\n\n    ctx.drawImage(\n      image,\n      completedCrop.x * scaleX,\n      completedCrop.y * scaleY,\n      completedCrop.width * scaleX,\n      completedCrop.height * scaleY,\n      0,\n      0,\n      completedCrop.width,\n      completedCrop.height,\n    );\n\n    return new Promise<string>((resolve) => {\n      canvas.toBlob((blob) => {\n        if (blob) {\n          const url = URL.createObjectURL(blob);\n          resolve(url);\n        }\n      }, 'image/jpeg', 0.9);\n    });\n  }, [completedCrop]);\n\n  const handleCropComplete = async () => {\n    setIsProcessing(true);\n    try {\n      const croppedImageUrl = await getCroppedImg();\n      if (croppedImageUrl) {\n        onCropComplete(croppedImageUrl);\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error cropping image:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleAspectChange = (newAspect: number | undefined) => {\n    setAspect(newAspect);\n    if (imgRef.current) {\n      const { width, height } = imgRef.current;\n      setCrop(centerAspectCrop(width, height, newAspect || width / height));\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-75\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl max-h-[90vh] w-full mx-4 overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Crop Image</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Aspect Ratio Controls */}\n        <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center gap-4\">\n            <span className=\"text-sm font-medium text-gray-700\">Aspect Ratio:</span>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => handleAspectChange(undefined)}\n                className={`px-3 py-1 text-sm rounded ${\n                  aspect === undefined\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                } transition-colors`}\n              >\n                Free\n              </button>\n              <button\n                onClick={() => handleAspectChange(1)}\n                className={`px-3 py-1 text-sm rounded ${\n                  aspect === 1\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                } transition-colors`}\n              >\n                1:1\n              </button>\n              <button\n                onClick={() => handleAspectChange(16 / 9)}\n                className={`px-3 py-1 text-sm rounded ${\n                  aspect === 16 / 9\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                } transition-colors`}\n              >\n                16:9\n              </button>\n              <button\n                onClick={() => handleAspectChange(4 / 3)}\n                className={`px-3 py-1 text-sm rounded ${\n                  aspect === 4 / 3\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                } transition-colors`}\n              >\n                4:3\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Crop Area */}\n        <div className=\"p-4 max-h-96 overflow-auto\">\n          <div className=\"flex justify-center\">\n            <ReactCrop\n              crop={crop}\n              onChange={(_, percentCrop) => setCrop(percentCrop)}\n              onComplete={(c) => setCompletedCrop(c)}\n              aspect={aspect}\n              minWidth={50}\n              minHeight={50}\n            >\n              <img\n                ref={imgRef}\n                alt=\"Crop preview\"\n                src={imageUrl}\n                style={{ maxHeight: '400px', maxWidth: '100%' }}\n                onLoad={onImageLoad}\n              />\n            </ReactCrop>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between p-4 border-t border-gray-200 bg-gray-50\">\n          <div className=\"text-sm text-gray-600\">\n            Drag to select the area you want to crop\n          </div>\n          <div className=\"flex gap-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleCropComplete}\n              disabled={!completedCrop || isProcessing}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {isProcessing ? 'Processing...' : 'Apply Crop'}\n            </button>\n          </div>\n        </div>\n\n        {/* Hidden canvas for cropping */}\n        <canvas\n          ref={canvasRef}\n          style={{ display: 'none' }}\n        />\n      </div>\n    </div>\n  );\n};","import React, { useState, useRef, useCallback } from 'react';\n\ninterface FileUploadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onFileSelect: (file: File) => void;\n  accept?: string;\n  maxSize?: number; // in bytes\n  title?: string;\n  description?: string;\n}\n\nexport const FileUploadModal: React.FC<FileUploadModalProps> = ({\n  isOpen,\n  onClose,\n  onFileSelect,\n  accept = '*/*',\n  maxSize = 10 * 1024 * 1024, // 10MB default\n  title = 'Upload File',\n  description = 'Select a file to upload'\n}) => {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const validateFile = useCallback((file: File): string | null => {\n    // Check file size\n    if (file.size > maxSize) {\n      const maxSizeMB = Math.round(maxSize / (1024 * 1024));\n      return `File size exceeds ${maxSizeMB}MB limit`;\n    }\n\n    // Check file type if accept is specified and not wildcard\n    if (accept !== '*/*') {\n      const acceptedTypes = accept.split(',').map(type => type.trim());\n      const isAccepted = acceptedTypes.some(acceptedType => {\n        if (acceptedType.startsWith('.')) {\n          // File extension check\n          return file.name.toLowerCase().endsWith(acceptedType.toLowerCase());\n        } else if (acceptedType.includes('/*')) {\n          // MIME type wildcard check (e.g., image/*)\n          const baseType = acceptedType.split('/')[0];\n          return file.type.startsWith(baseType + '/');\n        } else {\n          // Exact MIME type check\n          return file.type === acceptedType;\n        }\n      });\n\n      if (!isAccepted) {\n        return `File type not supported. Accepted types: ${accept}`;\n      }\n    }\n\n    return null;\n  }, [accept, maxSize]);\n\n  const handleFileSelect = useCallback((file: File) => {\n    const validationError = validateFile(file);\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n\n    setError(null);\n    onFileSelect(file);\n    onClose();\n  }, [validateFile, onFileSelect, onClose]);\n\n  const handleFileInputChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      handleFileSelect(file);\n    }\n  }, [handleFileSelect]);\n\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n\n    const files = Array.from(event.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, [handleFileSelect]);\n\n  const handleBrowseClick = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  const formatFileSize = useCallback((bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }, []);\n\n  const getAcceptedTypesDisplay = useCallback((): string => {\n    if (accept === '*/*') return 'All files';\n    if (accept.includes('image/*')) return 'Images';\n    if (accept.includes('video/*')) return 'Videos';\n    if (accept.includes('audio/*')) return 'Audio files';\n    return accept.replace(/,/g, ', ');\n  }, [accept]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">{title}</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          <p className=\"text-sm text-gray-600 mb-4\">{description}</p>\n\n          {/* Drag and Drop Area */}\n          <div\n            className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n              isDragOver\n                ? 'border-blue-400 bg-blue-50'\n                : 'border-gray-300 hover:border-gray-400'\n            }`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            <div className=\"flex flex-col items-center\">\n              <svg\n                className={`w-12 h-12 mb-4 ${\n                  isDragOver ? 'text-blue-500' : 'text-gray-400'\n                }`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                />\n              </svg>\n              \n              <p className=\"text-sm text-gray-600 mb-2\">\n                Drag and drop your file here, or\n              </p>\n              \n              <button\n                onClick={handleBrowseClick}\n                className=\"px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 transition-colors\"\n              >\n                Browse Files\n              </button>\n            </div>\n          </div>\n\n          {/* File Info */}\n          <div className=\"mt-4 text-xs text-gray-500 space-y-1\">\n            <p>Accepted types: {getAcceptedTypesDisplay()}</p>\n            <p>Maximum size: {formatFileSize(maxSize)}</p>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n              <div className=\"flex\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end p-4 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n          >\n            Cancel\n          </button>\n        </div>\n\n        {/* Hidden file input */}\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept={accept}\n          onChange={handleFileInputChange}\n          className=\"hidden\"\n        />\n      </div>\n    </div>\n  );\n};","import React, { useState, useRef, useEffect, useCallback } from 'react';\n\ninterface ImageManagerProps {\n  imageElement: HTMLImageElement;\n  onUpdate: () => void;\n  onRemove: () => void;\n}\n\nexport const ImageManager: React.FC<ImageManagerProps> = ({\n  imageElement,\n  onUpdate,\n  onRemove\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [alignment, setAlignment] = useState<'left' | 'center' | 'right' | 'none'>('none');\n  const [_isResizing, _setIsResizing] = useState(false);\n  const managerRef = useRef<HTMLDivElement>(null);\n\n  // Update position and size when image element changes\n  useEffect(() => {\n    if (imageElement) {\n      const rect = imageElement.getBoundingClientRect();\n      const editorRect = imageElement.closest('.editable-area')?.getBoundingClientRect();\n      \n      if (editorRect) {\n        setPosition({\n          x: rect.left - editorRect.left,\n          y: rect.top - editorRect.top\n        });\n      }\n      \n      setImageSize({\n        width: imageElement.offsetWidth,\n        height: imageElement.offsetHeight\n      });\n\n      // Detect current alignment\n      const computedStyle = window.getComputedStyle(imageElement);\n      const display = computedStyle.display;\n      const marginLeft = computedStyle.marginLeft;\n      const marginRight = computedStyle.marginRight;\n      \n      if (display === 'block') {\n        if (marginLeft === 'auto' && marginRight === 'auto') {\n          setAlignment('center');\n        } else if (marginLeft === 'auto') {\n          setAlignment('right');\n        } else {\n          setAlignment('left');\n        }\n      } else {\n        setAlignment('none');\n      }\n    }\n  }, [imageElement]);\n\n  // Handle image alignment\n  const handleAlignment = useCallback((newAlignment: 'left' | 'center' | 'right' | 'none') => {\n    if (!imageElement) return;\n\n    setAlignment(newAlignment);\n\n    switch (newAlignment) {\n      case 'left':\n        imageElement.style.display = 'block';\n        imageElement.style.marginLeft = '0';\n        imageElement.style.marginRight = 'auto';\n        imageElement.style.float = 'none';\n        break;\n      case 'center':\n        imageElement.style.display = 'block';\n        imageElement.style.marginLeft = 'auto';\n        imageElement.style.marginRight = 'auto';\n        imageElement.style.float = 'none';\n        break;\n      case 'right':\n        imageElement.style.display = 'block';\n        imageElement.style.marginLeft = 'auto';\n        imageElement.style.marginRight = '0';\n        imageElement.style.float = 'none';\n        break;\n      case 'none':\n        imageElement.style.display = 'inline-block';\n        imageElement.style.marginLeft = '';\n        imageElement.style.marginRight = '';\n        imageElement.style.float = '';\n        break;\n    }\n    \n    onUpdate();\n  }, [imageElement, onUpdate]);\n\n  // Handle image resizing\n  const handleResize = useCallback((newWidth: number) => {\n    if (!imageElement) return;\n\n    const aspectRatio = imageElement.naturalHeight / imageElement.naturalWidth;\n    const newHeight = newWidth * aspectRatio;\n\n    imageElement.style.width = `${newWidth}px`;\n    imageElement.style.height = `${newHeight}px`;\n    \n    setImageSize({ width: newWidth, height: newHeight });\n    onUpdate();\n  }, [imageElement, onUpdate]);\n\n  // Handle image wrapping (float)\n  const handleFloat = useCallback((floatDirection: 'left' | 'right' | 'none') => {\n    if (!imageElement) return;\n\n    switch (floatDirection) {\n      case 'left':\n        imageElement.style.float = 'left';\n        imageElement.style.marginRight = '15px';\n        imageElement.style.marginBottom = '10px';\n        imageElement.style.display = 'block';\n        break;\n      case 'right':\n        imageElement.style.float = 'right';\n        imageElement.style.marginLeft = '15px';\n        imageElement.style.marginBottom = '10px';\n        imageElement.style.display = 'block';\n        break;\n      case 'none':\n        imageElement.style.float = 'none';\n        imageElement.style.marginLeft = '';\n        imageElement.style.marginRight = '';\n        imageElement.style.marginBottom = '';\n        break;\n    }\n    \n    onUpdate();\n  }, [imageElement, onUpdate]);\n\n  // Handle alt text update\n  const handleAltText = useCallback(() => {\n    if (!imageElement) return;\n\n    const currentAlt = imageElement.alt || '';\n    // For now, we'll use a simple approach - in a full implementation, \n    // this would open a proper modal dialog\n    const newAlt = window.prompt('Enter alt text for the image (for accessibility):', currentAlt);\n    \n    if (newAlt !== null) {\n      imageElement.alt = newAlt;\n      onUpdate();\n    }\n  }, [imageElement, onUpdate]);\n\n  // Handle image removal\n  const handleRemove = useCallback(() => {\n    if (confirm('Are you sure you want to remove this image?')) {\n      onRemove();\n      setIsVisible(false);\n    }\n  }, [onRemove]);\n\n  // Show/hide manager on image click\n  useEffect(() => {\n    const handleImageClick = (e: Event) => {\n      e.stopPropagation();\n      setIsVisible(true);\n    };\n\n    const handleDocumentClick = (e: Event) => {\n      if (managerRef.current && !managerRef.current.contains(e.target as Node)) {\n        setIsVisible(false);\n      }\n    };\n\n    if (imageElement) {\n      imageElement.addEventListener('click', handleImageClick);\n      document.addEventListener('click', handleDocumentClick);\n    }\n\n    return () => {\n      if (imageElement) {\n        imageElement.removeEventListener('click', handleImageClick);\n      }\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [imageElement]);\n\n  if (!isVisible || !imageElement) return null;\n\n  return (\n    <div\n      ref={managerRef}\n      className=\"absolute z-50 bg-white border border-gray-300 rounded-lg shadow-lg p-3 min-w-64\"\n      style={{\n        left: position.x + imageSize.width + 10,\n        top: position.y,\n        maxWidth: '300px'\n      }}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-3 pb-2 border-b border-gray-200\">\n        <h3 className=\"text-sm font-semibold text-gray-900\">Image Settings</h3>\n        <button\n          onClick={() => setIsVisible(false)}\n          className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          aria-label=\"Close\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Size Controls */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n          Width: {Math.round(imageSize.width)}px\n        </label>\n        <input\n          type=\"range\"\n          min=\"50\"\n          max=\"800\"\n          value={imageSize.width}\n          onChange={(e) => handleResize(parseInt(e.target.value))}\n          className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n        />\n        <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n          <span>50px</span>\n          <span>800px</span>\n        </div>\n      </div>\n\n      {/* Alignment Controls */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-2\">Alignment</label>\n        <div className=\"flex gap-1\">\n          <button\n            onClick={() => handleAlignment('left')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'left'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Left\n          </button>\n          <button\n            onClick={() => handleAlignment('center')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'center'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Center\n          </button>\n          <button\n            onClick={() => handleAlignment('right')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'right'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Right\n          </button>\n          <button\n            onClick={() => handleAlignment('none')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'none'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Inline\n          </button>\n        </div>\n      </div>\n\n      {/* Text Wrapping Controls */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-2\">Text Wrapping</label>\n        <div className=\"flex gap-1\">\n          <button\n            onClick={() => handleFloat('left')}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Wrap Left\n          </button>\n          <button\n            onClick={() => handleFloat('right')}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Wrap Right\n          </button>\n          <button\n            onClick={() => handleFloat('none')}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            No Wrap\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Size Presets */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-2\">Quick Sizes</label>\n        <div className=\"flex gap-1\">\n          <button\n            onClick={() => handleResize(150)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Small\n          </button>\n          <button\n            onClick={() => handleResize(300)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Medium\n          </button>\n          <button\n            onClick={() => handleResize(500)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Large\n          </button>\n          <button\n            onClick={() => handleResize(imageElement.naturalWidth)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Original\n          </button>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-2 pt-2 border-t border-gray-200\">\n        <button\n          onClick={handleAltText}\n          className=\"flex-1 px-2 py-1 text-xs bg-blue-50 text-blue-700 hover:bg-blue-100 rounded transition-colors\"\n        >\n          Alt Text\n        </button>\n        <button\n          onClick={handleRemove}\n          className=\"flex-1 px-2 py-1 text-xs bg-red-50 text-red-700 hover:bg-red-100 rounded transition-colors\"\n        >\n          Remove\n        </button>\n      </div>\n    </div>\n  );\n};","import React, { useState } from 'react';\n\ninterface TableInsertModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsert: (rows: number, cols: number, hasHeaders: boolean) => void;\n}\n\nexport const TableInsertModal: React.FC<TableInsertModalProps> = ({\n  isOpen,\n  onClose,\n  onInsert\n}) => {\n  const [rows, setRows] = useState(3);\n  const [cols, setCols] = useState(3);\n  const [hasHeaders, setHasHeaders] = useState(true);\n  const [previewRows] = useState(3);\n  const [previewCols] = useState(3);\n\n  const handleInsert = () => {\n    onInsert(rows, cols, hasHeaders);\n    onClose();\n  };\n\n\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Insert Table</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {/* Grid Selector */}\n          <div className=\"mb-6\">\n            <div className=\"mt-2 text-sm text-gray-600\">\n              {previewRows} × {previewCols} table\n            </div>\n          </div>\n\n          {/* Manual Input */}\n          <div className=\"grid grid-cols-2 gap-4 mb-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Rows\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"20\"\n                value={rows}\n                onChange={(e) => setRows(Math.max(1, parseInt(e.target.value) || 1))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Columns\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"20\"\n                value={cols}\n                onChange={(e) => setCols(Math.max(1, parseInt(e.target.value) || 1))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n\n          {/* Options */}\n          <div className=\"mb-6\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={hasHeaders}\n                onChange={(e) => setHasHeaders(e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Include header row</span>\n            </label>\n          </div>\n\n          {/* Preview */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Preview:\n            </label>\n            <div className=\"border border-gray-300 rounded overflow-hidden\">\n              <table className=\"w-full text-xs\">\n                <tbody>\n                  {Array.from({ length: Math.min(rows, 4) }, (_, rowIndex) => (\n                    <tr key={rowIndex}>\n                      {Array.from({ length: Math.min(cols, 6) }, (_, colIndex) => (\n                        <td\n                          key={colIndex}\n                          className={`border border-gray-200 p-1 text-center ${hasHeaders && rowIndex === 0\n                              ? 'bg-gray-100 font-medium'\n                              : 'bg-white'\n                            }`}\n                        >\n                          {hasHeaders && rowIndex === 0\n                            ? `Header ${colIndex + 1}`\n                            : `Cell ${rowIndex + 1},${colIndex + 1}`}\n                        </td>\n                      ))}\n                      {cols > 6 && (\n                        <td className=\"border border-gray-200 p-1 text-center bg-gray-50\">\n                          ...\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                  {rows > 4 && (\n                    <tr>\n                      {Array.from({ length: Math.min(cols + (cols > 6 ? 1 : 0), 7) }, (_, colIndex) => (\n                        <td key={colIndex} className=\"border border-gray-200 p-1 text-center bg-gray-50\">\n                          ...\n                        </td>\n                      ))}\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end gap-3 p-4 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleInsert}\n            className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Insert Table\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState } from 'react';\n\ninterface SpecialCharModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsert: (char: string) => void;\n}\n\nconst specialCharCategories = {\n  General: [\n    '©', '®', '™', '§', '¶', '†', '‡', '•', '‰', '′', '″', '‴', '‹', '›', '«', '»',\n    '–', '—', '…', '¡', '¿'\n  ],\n  Currency: [\n    '$', '¢', '£', '¤', '¥', '€', '₹', '₽', '₩', '₪', '₫', '₦', '₡', '₨', '₱', '₵'\n  ],\n  Math: [\n    '±', '×', '÷', '=', '≠', '≈', '≡', '≤', '≥', '<', '>', '∞', '∑', '∏', '∂', '∆',\n    '∇', '∈', '∉', '∋', '∌', '∩', '∪', '⊂', '⊃', '⊆', '⊇', '⊕', '⊗', '⊥', '∥', '∠'\n  ],\n  Greek: [\n    'Α', 'Β', 'Γ', 'Δ', 'Ε', 'Ζ', 'Η', 'Θ', 'Ι', 'Κ', 'Λ', 'Μ', 'Ν', 'Ξ', 'Ο', 'Π',\n    'Ρ', 'Σ', 'Τ', 'Υ', 'Φ', 'Χ', 'Ψ', 'Ω', 'α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ',\n    'ι', 'κ', 'λ', 'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'\n  ],\n  Arrows: [\n    '←', '↑', '→', '↓', '↔', '↕', '↖', '↗', '↘', '↙', '↚', '↛', '↜', '↝', '↞', '↟',\n    '↠', '↡', '↢', '↣', '↤', '↥', '↦', '↧', '↨', '↩', '↪', '↫', '↬', '↭', '↮', '↯'\n  ],\n  Symbols: [\n    '☀', '☁', '☂', '☃', '☄', '★', '☆', '☇', '☈', '☉', '☊', '☋', '☌', '☍', '☎', '☏',\n    '☐', '☑', '☒', '☓', '☔', '☕', '☖', '☗', '☘', '☙', '☚', '☛', '☜', '☝', '☞', '☟'\n  ],\n  Fractions: [\n    '½', '⅓', '⅔', '¼', '¾', '⅕', '⅖', '⅗', '⅘', '⅙', '⅚', '⅛', '⅜', '⅝', '⅞', '⅟'\n  ]\n};\n\nexport const SpecialCharModal: React.FC<SpecialCharModalProps> = ({\n  isOpen,\n  onClose,\n  onInsert\n}) => {\n  const [activeCategory, setActiveCategory] = useState('General');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleCharClick = (char: string) => {\n    onInsert(char);\n    onClose();\n  };\n\n  const filteredChars = searchTerm\n    ? Object.values(specialCharCategories)\n        .flat()\n        .filter(char => \n          char.includes(searchTerm) || \n          char.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n    : specialCharCategories[activeCategory as keyof typeof specialCharCategories];\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[80vh] overflow-hidden\">\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Special Characters</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"p-4 border-b border-gray-200\">\n          <input\n            type=\"text\"\n            placeholder=\"Search characters...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div className=\"flex h-96\">\n          {!searchTerm && (\n            <div className=\"w-1/3 border-r border-gray-200 overflow-y-auto\">\n              <div className=\"p-2\">\n                {Object.keys(specialCharCategories).map((category) => (\n                  <button\n                    key={category}\n                    onClick={() => setActiveCategory(category)}\n                    className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${\n                      activeCategory === category\n                        ? 'bg-blue-100 text-blue-700'\n                        : 'text-gray-700 hover:bg-gray-100'\n                    }`}\n                  >\n                    {category}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className={`${searchTerm ? 'w-full' : 'w-2/3'} overflow-y-auto`}>\n            <div className=\"p-4\">\n              <div className=\"grid grid-cols-8 gap-2\">\n                {filteredChars.map((char, index) => (\n                  <button\n                    key={`${char}-${index}`}\n                    onClick={() => handleCharClick(char)}\n                    className=\"w-10 h-10 flex items-center justify-center text-lg border border-gray-300 rounded hover:bg-blue-50 hover:border-blue-300 transition-colors\"\n                    title={`Insert ${char}`}\n                  >\n                    {char}\n                  </button>\n                ))}\n              </div>\n              {filteredChars.length === 0 && (\n                <div className=\"text-center text-gray-500 py-8\">\n                  No characters found matching \"{searchTerm}\"\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end p-4 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\n\ninterface UrlInputModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (url: string) => void;\n  title: string;\n  placeholder?: string;\n  initialValue?: string;\n  description?: string;\n}\n\nexport const UrlInputModal: React.FC<UrlInputModalProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  title,\n  placeholder = 'Enter URL...',\n  initialValue = '',\n  description\n}) => {\n  const [url, setUrl] = useState(initialValue);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isOpen) {\n      setUrl(initialValue);\n      setError('');\n    }\n  }, [isOpen, initialValue]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!url.trim()) {\n      setError('URL is required');\n      return;\n    }\n\n    // Basic URL validation\n    try {\n      if (url.trim().startsWith('http://') || url.trim().startsWith('https://') || url.trim().startsWith('/')) {\n        onSubmit(url.trim());\n        onClose();\n      } else {\n        // Try to add https:// prefix\n        const urlWithProtocol = `https://${url.trim()}`;\n        new URL(urlWithProtocol); // This will throw if invalid\n        onSubmit(urlWithProtocol);\n        onClose();\n      }\n    } catch {\n      setError('Please enter a valid URL');\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div \n      className=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        animation: 'fadeIn 0.2s ease-out'\n      }}\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div \n        className=\"modal-content\"\n        style={{\n          backgroundColor: 'white',\n          borderRadius: '12px',\n          padding: '24px',\n          width: '90%',\n          maxWidth: '500px',\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n          animation: 'slideIn 0.3s ease-out'\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div style={{ marginBottom: '20px' }}>\n          <h3 style={{ \n            margin: '0 0 8px 0', \n            fontSize: '18px', \n            fontWeight: '600', \n            color: '#1f2937' \n          }}>\n            {title}\n          </h3>\n          {description && (\n            <p style={{ \n              margin: 0, \n              fontSize: '14px', \n              color: '#6b7280',\n              lineHeight: '1.5'\n            }}>\n              {description}\n            </p>\n          )}\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '16px' }}>\n            <input\n              type=\"text\"\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n                setError('');\n              }}\n              placeholder={placeholder}\n              autoFocus\n              style={{\n                width: '100%',\n                padding: '12px',\n                border: `2px solid ${error ? '#ef4444' : '#e5e7eb'}`,\n                borderRadius: '8px',\n                fontSize: '16px',\n                outline: 'none',\n                transition: 'border-color 0.2s ease',\n                boxSizing: 'border-box'\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = '#3b82f6';\n              }}\n              onBlur={(e) => {\n                if (!error) {\n                  e.target.style.borderColor = '#e5e7eb';\n                }\n              }}\n            />\n            {error && (\n              <p style={{ \n                margin: '8px 0 0 0', \n                fontSize: '14px', \n                color: '#ef4444' \n              }}>\n                {error}\n              </p>\n            )}\n          </div>\n\n          <div style={{ \n            display: 'flex', \n            gap: '12px', \n            justifyContent: 'flex-end' \n          }}>\n            <button\n              type=\"button\"\n              onClick={onClose}\n              style={{\n                padding: '10px 20px',\n                border: '1px solid #d1d5db',\n                borderRadius: '8px',\n                backgroundColor: 'white',\n                color: '#374151',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#f9fafb';\n                e.currentTarget.style.borderColor = '#9ca3af';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = 'white';\n                e.currentTarget.style.borderColor = '#d1d5db';\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              style={{\n                padding: '10px 20px',\n                border: 'none',\n                borderRadius: '8px',\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#2563eb';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = '#3b82f6';\n              }}\n            >\n              {initialValue ? 'Update' : 'Add'} Link\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\n\ninterface FindReplaceModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onFindReplace: (findText: string, replaceText: string) => void;\n}\n\nexport const FindReplaceModal: React.FC<FindReplaceModalProps> = ({\n  isOpen,\n  onClose,\n  onFindReplace\n}) => {\n  const [findText, setFindText] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isOpen) {\n      setFindText('');\n      setReplaceText('');\n      setError('');\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!findText.trim()) {\n      setError('Find text is required');\n      return;\n    }\n\n    onFindReplace(findText.trim(), replaceText.trim());\n    onClose();\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div \n      className=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        animation: 'fadeIn 0.2s ease-out'\n      }}\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div \n        className=\"modal-content\"\n        style={{\n          backgroundColor: 'white',\n          borderRadius: '12px',\n          padding: '24px',\n          width: '90%',\n          maxWidth: '500px',\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n          animation: 'slideIn 0.3s ease-out'\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div style={{ marginBottom: '20px' }}>\n          <h3 style={{ \n            margin: '0 0 8px 0', \n            fontSize: '18px', \n            fontWeight: '600', \n            color: '#1f2937' \n          }}>\n            🔍 Find & Replace\n          </h3>\n          <p style={{ \n            margin: 0, \n            fontSize: '14px', \n            color: '#6b7280',\n            lineHeight: '1.5'\n          }}>\n            Search for text in your document and replace it with new text.\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '16px' }}>\n            <label style={{ \n              display: 'block', \n              marginBottom: '6px', \n              fontSize: '14px', \n              fontWeight: '500', \n              color: '#374151' \n            }}>\n              Find:\n            </label>\n            <input\n              type=\"text\"\n              value={findText}\n              onChange={(e) => {\n                setFindText(e.target.value);\n                setError('');\n              }}\n              placeholder=\"Enter text to find...\"\n              autoFocus\n              style={{\n                width: '100%',\n                padding: '12px',\n                border: `2px solid ${error ? '#ef4444' : '#e5e7eb'}`,\n                borderRadius: '8px',\n                fontSize: '16px',\n                outline: 'none',\n                transition: 'border-color 0.2s ease',\n                boxSizing: 'border-box'\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = '#3b82f6';\n              }}\n              onBlur={(e) => {\n                if (!error) {\n                  e.target.style.borderColor = '#e5e7eb';\n                }\n              }}\n            />\n            {error && (\n              <p style={{ \n                margin: '8px 0 0 0', \n                fontSize: '14px', \n                color: '#ef4444' \n              }}>\n                {error}\n              </p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: '20px' }}>\n            <label style={{ \n              display: 'block', \n              marginBottom: '6px', \n              fontSize: '14px', \n              fontWeight: '500', \n              color: '#374151' \n            }}>\n              Replace with:\n            </label>\n            <input\n              type=\"text\"\n              value={replaceText}\n              onChange={(e) => setReplaceText(e.target.value)}\n              placeholder=\"Enter replacement text...\"\n              style={{\n                width: '100%',\n                padding: '12px',\n                border: '2px solid #e5e7eb',\n                borderRadius: '8px',\n                fontSize: '16px',\n                outline: 'none',\n                transition: 'border-color 0.2s ease',\n                boxSizing: 'border-box'\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = '#3b82f6';\n              }}\n              onBlur={(e) => {\n                e.target.style.borderColor = '#e5e7eb';\n              }}\n            />\n          </div>\n\n          <div style={{ \n            display: 'flex', \n            gap: '12px', \n            justifyContent: 'flex-end' \n          }}>\n            <button\n              type=\"button\"\n              onClick={onClose}\n              style={{\n                padding: '10px 20px',\n                border: '1px solid #d1d5db',\n                borderRadius: '8px',\n                backgroundColor: 'white',\n                color: '#374151',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#f9fafb';\n                e.currentTarget.style.borderColor = '#9ca3af';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = 'white';\n                e.currentTarget.style.borderColor = '#d1d5db';\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              style={{\n                padding: '10px 20px',\n                border: 'none',\n                borderRadius: '8px',\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#2563eb';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = '#3b82f6';\n              }}\n            >\n              Replace All\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};","import React, { useEffect } from 'react';\n\ninterface NotificationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  message: string;\n  type?: 'info' | 'success' | 'warning' | 'error';\n  autoClose?: boolean;\n  autoCloseDelay?: number;\n}\n\nexport const NotificationModal: React.FC<NotificationModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  message,\n  type = 'info',\n  autoClose = false,\n  autoCloseDelay = 3000\n}) => {\n  useEffect(() => {\n    if (isOpen && autoClose) {\n      const timer = setTimeout(() => {\n        onClose();\n      }, autoCloseDelay);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen, autoClose, autoCloseDelay, onClose]);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const getTypeStyles = () => {\n    switch (type) {\n      case 'success':\n        return {\n          icon: '✅',\n          iconColor: '#10b981',\n          borderColor: '#10b981',\n          backgroundColor: '#f0fdf4'\n        };\n      case 'warning':\n        return {\n          icon: '⚠️',\n          iconColor: '#f59e0b',\n          borderColor: '#f59e0b',\n          backgroundColor: '#fffbeb'\n        };\n      case 'error':\n        return {\n          icon: '❌',\n          iconColor: '#ef4444',\n          borderColor: '#ef4444',\n          backgroundColor: '#fef2f2'\n        };\n      default:\n        return {\n          icon: 'ℹ️',\n          iconColor: '#3b82f6',\n          borderColor: '#3b82f6',\n          backgroundColor: '#eff6ff'\n        };\n    }\n  };\n\n  const typeStyles = getTypeStyles();\n\n  return (\n    <div \n      className=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        animation: 'fadeIn 0.2s ease-out'\n      }}\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div \n        className=\"modal-content\"\n        style={{\n          backgroundColor: 'white',\n          borderRadius: '12px',\n          padding: '24px',\n          width: '90%',\n          maxWidth: '400px',\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n          animation: 'slideIn 0.3s ease-out',\n          border: `2px solid ${typeStyles.borderColor}`\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div style={{ \n          display: 'flex', \n          alignItems: 'flex-start', \n          gap: '12px',\n          marginBottom: '20px'\n        }}>\n          <div style={{ \n            fontSize: '24px',\n            flexShrink: 0\n          }}>\n            {typeStyles.icon}\n          </div>\n          <div style={{ flex: 1 }}>\n            <h3 style={{ \n              margin: '0 0 8px 0', \n              fontSize: '18px', \n              fontWeight: '600', \n              color: '#1f2937' \n            }}>\n              {title}\n            </h3>\n            <p style={{ \n              margin: 0, \n              fontSize: '14px', \n              color: '#6b7280',\n              lineHeight: '1.5'\n            }}>\n              {message}\n            </p>\n          </div>\n        </div>\n\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'flex-end' \n        }}>\n          <button\n            onClick={onClose}\n            autoFocus\n            style={{\n              padding: '10px 20px',\n              border: 'none',\n              borderRadius: '8px',\n              backgroundColor: typeStyles.iconColor,\n              color: 'white',\n              fontSize: '14px',\n              fontWeight: '500',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.opacity = '0.9';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.opacity = '1';\n            }}\n          >\n            OK\n          </button>\n        </div>\n\n        {autoClose && (\n          <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: '3px',\n            backgroundColor: typeStyles.backgroundColor,\n            borderBottomLeftRadius: '12px',\n            borderBottomRightRadius: '12px',\n            overflow: 'hidden'\n          }}>\n            <div style={{\n              height: '100%',\n              backgroundColor: typeStyles.iconColor,\n              animation: `shrink ${autoCloseDelay}ms linear`,\n              transformOrigin: 'left'\n            }} />\n          </div>\n        )}\n      </div>\n\n      <style>{`\n        @keyframes shrink {\n          from { transform: scaleX(1); }\n          to { transform: scaleX(0); }\n        }\n      `}</style>\n    </div>\n  );\n};","import React from 'react';\n\ninterface LinkPreviewPopupProps {\n  isOpen: boolean;\n  linkUrl: string;\n  linkText: string;\n  position: { x: number; y: number };\n  onEdit: () => void;\n  onRemove: () => void;\n  onGoToLink: () => void;\n  onClose: () => void;\n}\n\nexport const LinkPreviewPopup: React.FC<LinkPreviewPopupProps> = ({\n  isOpen,\n  linkUrl,\n  linkText: _linkText,\n  position,\n  onEdit,\n  onRemove,\n  onGoToLink,\n  onClose\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Backdrop to close popup when clicking outside */}\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: 999,\n          background: 'transparent'\n        }}\n        onClick={onClose}\n      />\n      \n      {/* Popup */}\n      <div\n        style={{\n          position: 'fixed',\n          left: `${position.x}px`,\n          top: `${position.y}px`,\n          zIndex: 1000,\n          background: 'white',\n          border: '1px solid #d1d5db',\n          borderRadius: '8px',\n          boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15)',\n          padding: '12px 16px',\n          minWidth: '300px',\n          maxWidth: '400px',\n          fontSize: '14px',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Helvetica Neue\", Arial, sans-serif'\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Link preview */}\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '8px',\n          marginBottom: '8px'\n        }}>\n          <span style={{ \n            color: '#374151',\n            fontWeight: '500'\n          }}>\n            Go to link:\n          </span>\n          <button\n            onClick={onGoToLink}\n            style={{\n              color: '#2563eb',\n              textDecoration: 'underline',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              padding: '0',\n              maxWidth: '200px',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap'\n            }}\n            title={linkUrl}\n          >\n            {linkUrl}\n          </button>\n        </div>\n\n        {/* Action buttons */}\n        <div style={{ \n          display: 'flex', \n          gap: '12px',\n          alignItems: 'center'\n        }}>\n          <button\n            onClick={onEdit}\n            style={{\n              color: '#2563eb',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              transition: 'background-color 0.2s'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.backgroundColor = '#eff6ff';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            }}\n          >\n            Change\n          </button>\n          \n          <span style={{ color: '#d1d5db' }}>|</span>\n          \n          <button\n            onClick={onRemove}\n            style={{\n              color: '#dc2626',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              transition: 'background-color 0.2s'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.backgroundColor = '#fef2f2';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            }}\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};","export interface EditorCommand {\n  type: 'execCommand' | 'custom';\n  command: string;\n  value?: string;\n  requiresSelection?: boolean;\n  description: string;\n}\n\nexport const COMMANDS: Record<string, EditorCommand> = {\n  BOLD: {\n    type: 'execCommand',\n    command: 'bold',\n    description: 'Toggle bold formatting'\n  },\n  ITALIC: {\n    type: 'execCommand',\n    command: 'italic',\n    description: 'Toggle italic formatting'\n  },\n  UNDERLINE: {\n    type: 'execCommand',\n    command: 'underline',\n    description: 'Toggle underline formatting'\n  },\n  STRIKETHROUGH: {\n    type: 'execCommand',\n    command: 'strikeThrough',\n    description: 'Toggle strikethrough formatting'\n  },\n  SUBSCRIPT: {\n    type: 'execCommand',\n    command: 'subscript',\n    description: 'Toggle subscript formatting'\n  },\n  SUPERSCRIPT: {\n    type: 'execCommand',\n    command: 'superscript',\n    description: 'Toggle superscript formatting'\n  },\n  FORMAT_H1: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H1',\n    description: 'Format as heading 1'\n  },\n  FORMAT_H2: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H2',\n    description: 'Format as heading 2'\n  },\n  FORMAT_H3: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H3',\n    description: 'Format as heading 3'\n  },\n  FORMAT_H4: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H4',\n    description: 'Format as heading 4'\n  },\n  FORMAT_H5: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H5',\n    description: 'Format as heading 5'\n  },\n  FORMAT_H6: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H6',\n    description: 'Format as heading 6'\n  },\n  FORMAT_PARAGRAPH: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'P',\n    description: 'Format as paragraph'\n  },\n  FORMAT_BLOCKQUOTE: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'BLOCKQUOTE',\n    description: 'Format as blockquote'\n  },\n  FORMAT_PRE: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'PRE',\n    description: 'Format as preformatted text'\n  },\n  INSERT_UNORDERED_LIST: {\n    type: 'execCommand',\n    command: 'insertUnorderedList',\n    description: 'Create bullet list'\n  },\n  INSERT_ORDERED_LIST: {\n    type: 'execCommand',\n    command: 'insertOrderedList',\n    description: 'Create numbered list'\n  },\n  JUSTIFY_LEFT: {\n    type: 'execCommand',\n    command: 'justifyLeft',\n    description: 'Align text left'\n  },\n  JUSTIFY_CENTER: {\n    type: 'execCommand',\n    command: 'justifyCenter',\n    description: 'Center align text'\n  },\n  JUSTIFY_RIGHT: {\n    type: 'execCommand',\n    command: 'justifyRight',\n    description: 'Align text right'\n  },\n  JUSTIFY_FULL: {\n    type: 'execCommand',\n    command: 'justifyFull',\n    description: 'Justify text'\n  },\n  INDENT: {\n    type: 'execCommand',\n    command: 'indent',\n    description: 'Increase indent'\n  },\n  OUTDENT: {\n    type: 'execCommand',\n    command: 'outdent',\n    description: 'Decrease indent'\n  },\n  FONT_COLOR: {\n    type: 'custom',\n    command: 'foreColor',\n    description: 'Change text color'\n  },\n  BACKGROUND_COLOR: {\n    type: 'custom',\n    command: 'backColor',\n    description: 'Change background color'\n  },\n  FONT_NAME: {\n    type: 'execCommand',\n    command: 'fontName',\n    description: 'Change font family'\n  },\n  FONT_SIZE: {\n    type: 'execCommand',\n    command: 'fontSize',\n    description: 'Change font size'\n  },\n  INSERT_HORIZONTAL_RULE: {\n    type: 'execCommand',\n    command: 'insertHorizontalRule',\n    description: 'Insert horizontal rule'\n  },\n  CREATE_LINK: {\n    type: 'custom',\n    command: 'createLink',\n    description: 'Create hyperlink'\n  },\n  EDIT_LINK: {\n    type: 'custom',\n    command: 'editLink',\n    description: 'Edit existing hyperlink'\n  },\n  UNLINK: {\n    type: 'execCommand',\n    command: 'unlink',\n    description: 'Remove hyperlink'\n  },\n  UNDO: {\n    type: 'execCommand',\n    command: 'undo',\n    description: 'Undo last action'\n  },\n  REDO: {\n    type: 'execCommand',\n    command: 'redo',\n    description: 'Redo last undone action'\n  },\n  REMOVE_FORMAT: {\n    type: 'execCommand',\n    command: 'removeFormat',\n    description: 'Clear all formatting'\n  },\n  INSERT_IMAGE: {\n    type: 'custom',\n    command: 'insertImage',\n    description: 'Insert image'\n  },\n  UPLOAD_FILE: {\n    type: 'custom',\n    command: 'uploadFile',\n    description: 'Upload and insert file'\n  },\n  INSERT_TABLE: {\n    type: 'custom',\n    command: 'insertTable',\n    description: 'Insert table'\n  },\n  INSERT_SPECIAL_CHAR: {\n    type: 'custom',\n    command: 'insertSpecialChar',\n    description: 'Insert special character'\n  },\n  FIND_REPLACE: {\n    type: 'custom',\n    command: 'findReplace',\n    description: 'Find and replace text'\n  },\n  SOURCE_CODE: {\n    type: 'custom',\n    command: 'sourceCode',\n    description: 'Edit HTML source code'\n  },\n  FULLSCREEN: {\n    type: 'custom',\n    command: 'fullscreen',\n    description: 'Toggle fullscreen mode'\n  },\n  PRINT: {\n    type: 'custom',\n    command: 'print',\n    description: 'Print document'\n  },\n  SPELL_CHECK: {\n    type: 'custom',\n    command: 'spellCheck',\n    description: 'Toggle spell check'\n  }\n};\n\nexport interface CommandExecutionResult {\n  success: boolean;\n  error?: string;\n  command: string;\n  value?: string;\n}\n\nexport class CommandExecutor {\n  private static instance: CommandExecutor;\n\n  private constructor() { }\n\n  public static getInstance(): CommandExecutor {\n    if (!CommandExecutor.instance) {\n      CommandExecutor.instance = new CommandExecutor();\n    }\n    return CommandExecutor.instance;\n  }\n\n  /**\n   * Execute a command using document.execCommand with error handling\n   */\n  public executeCommand(\n    commandKey: string,\n    value?: string,\n    editorElement?: HTMLElement,\n    _savedSelection?: Range | null\n  ): CommandExecutionResult {\n    const command = COMMANDS[commandKey];\n\n    if (!command) {\n      return {\n        success: false,\n        error: `Unknown command: ${commandKey}`,\n        command: commandKey\n      };\n    }\n\n    // Handle custom commands\n    if (command.type === 'custom') {\n      return this.executeCustomCommand(commandKey, value, editorElement);\n    }\n\n    // Check if command requires selection and none exists\n    if (command.requiresSelection && this.isSelectionEmpty()) {\n      return {\n        success: false,\n        error: `Command ${commandKey} requires text selection`,\n        command: commandKey\n      };\n    }\n\n    try {\n      // Ensure editor has focus before executing command\n      if (editorElement && document.activeElement !== editorElement) {\n        editorElement.focus();\n      }\n\n      const commandValue = value || command.value || '';\n      const result = document.execCommand(command.command, false, commandValue);\n\n      if (!result) {\n        return {\n          success: false,\n          error: `Command execution failed: ${command.command}`,\n          command: commandKey,\n          value: commandValue\n        };\n      }\n\n      return {\n        success: true,\n        command: commandKey,\n        value: commandValue\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Command execution error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: commandKey,\n        value: value || command.value || ''\n      };\n    }\n  }\n\n  /**\n   * Execute custom commands that require special handling\n   */\n  private executeCustomCommand(\n    commandKey: string,\n    value?: string,\n    editorElement?: HTMLElement\n  ): CommandExecutionResult {\n    try {\n      // Ensure editor has focus before executing command\n      if (editorElement && document.activeElement !== editorElement) {\n        editorElement.focus();\n      }\n\n      switch (commandKey) {\n        case 'FONT_COLOR':\n          return this.setFontColor(value);\n        case 'BACKGROUND_COLOR':\n          return this.setBackgroundColor(value);\n        case 'CREATE_LINK':\n          return this.createLink(value);\n        case 'EDIT_LINK':\n          return this.editLink(value);\n        case 'INSERT_IMAGE':\n          if (!value) {\n            return this.triggerImageUpload();\n          }\n          return this.insertImage(value as string);\n        case 'UPLOAD_FILE':\n          return this.uploadFile(value);\n        case 'INSERT_TABLE':\n          return this.insertTable(value);\n        case 'INSERT_SPECIAL_CHAR':\n          return this.insertSpecialChar(value);\n        case 'FIND_REPLACE':\n          return this.findReplace();\n        case 'SOURCE_CODE':\n          return this.toggleSourceCode();\n        case 'FULLSCREEN':\n          return this.toggleFullscreen();\n        case 'PRINT':\n          return this.printDocument();\n        case 'SPELL_CHECK':\n          return this.toggleSpellCheck();\n        default:\n          return {\n            success: false,\n            error: `Unknown custom command: ${commandKey}`,\n            command: commandKey\n          };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: `Custom command execution error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: commandKey,\n        value: value || ''\n      };\n    }\n  }\n\n  /**\n   * Check if the current selection is empty\n   */\n  private isSelectionEmpty(): boolean {\n    const selection = window.getSelection();\n    return !selection || selection.isCollapsed;\n  }\n\n  /**\n   * Get the current active formatting states\n   */\n  public getActiveFormats(): Set<string> {\n    const activeFormats = new Set<string>();\n\n    try {\n      // Check basic formatting states\n      if (document.queryCommandState('bold')) {\n        activeFormats.add('BOLD');\n      }\n      if (document.queryCommandState('italic')) {\n        activeFormats.add('ITALIC');\n      }\n      if (document.queryCommandState('underline')) {\n        activeFormats.add('UNDERLINE');\n      }\n      if (document.queryCommandState('strikeThrough')) {\n        activeFormats.add('STRIKETHROUGH');\n      }\n      if (document.queryCommandState('subscript')) {\n        activeFormats.add('SUBSCRIPT');\n      }\n      if (document.queryCommandState('superscript')) {\n        activeFormats.add('SUPERSCRIPT');\n      }\n\n      // Check heading format states\n      const currentBlockFormat = this.getCurrentBlockFormat();\n      if (currentBlockFormat === 'H1') {\n        activeFormats.add('FORMAT_H1');\n      } else if (currentBlockFormat === 'H2') {\n        activeFormats.add('FORMAT_H2');\n      } else if (currentBlockFormat === 'H3') {\n        activeFormats.add('FORMAT_H3');\n      } else if (currentBlockFormat === 'H4') {\n        activeFormats.add('FORMAT_H4');\n      } else if (currentBlockFormat === 'H5') {\n        activeFormats.add('FORMAT_H5');\n      } else if (currentBlockFormat === 'H6') {\n        activeFormats.add('FORMAT_H6');\n      } else if (currentBlockFormat === 'BLOCKQUOTE') {\n        activeFormats.add('FORMAT_BLOCKQUOTE');\n      } else if (currentBlockFormat === 'PRE') {\n        activeFormats.add('FORMAT_PRE');\n      }\n\n      // Check alignment states\n      if (document.queryCommandState('justifyLeft')) {\n        activeFormats.add('JUSTIFY_LEFT');\n      }\n      if (document.queryCommandState('justifyCenter')) {\n        activeFormats.add('JUSTIFY_CENTER');\n      }\n      if (document.queryCommandState('justifyRight')) {\n        activeFormats.add('JUSTIFY_RIGHT');\n      }\n      if (document.queryCommandState('justifyFull')) {\n        activeFormats.add('JUSTIFY_FULL');\n      }\n\n      // Check list states\n      if (document.queryCommandState('insertUnorderedList')) {\n        activeFormats.add('INSERT_UNORDERED_LIST');\n      }\n      if (document.queryCommandState('insertOrderedList')) {\n        activeFormats.add('INSERT_ORDERED_LIST');\n      }\n\n      // Check link state\n      if (this.isInLink()) {\n        activeFormats.add('CREATE_LINK');\n        activeFormats.add('EDIT_LINK');\n      }\n    } catch (error) {\n      console.warn('Error checking command states:', error);\n    }\n\n    return activeFormats;\n  }\n\n  /**\n   * Check if undo is available\n   */\n  public canUndo(): boolean {\n    try {\n      return document.queryCommandEnabled('undo');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if redo is available\n   */\n  public canRedo(): boolean {\n    try {\n      return document.queryCommandEnabled('redo');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Get current block format (heading level, etc.)\n   */\n  public getCurrentBlockFormat(): string {\n    try {\n      const value = document.queryCommandValue('formatBlock');\n      return value.toUpperCase();\n    } catch (error) {\n      return '';\n    }\n  }\n\n  /**\n   * Create a hyperlink from selected text or insert new link\n   */\n  private createLink(url?: string): CommandExecutionResult {\n    const selection = window.getSelection();\n\n    // If no URL provided, return error (should be handled by modal)\n    if (!url) {\n      return {\n        success: false,\n        error: 'URL is required to create a link',\n        command: 'CREATE_LINK'\n      };\n    }\n\n    // Validate and normalize URL\n    const normalizedUrl = this.normalizeUrl(url);\n    if (!normalizedUrl) {\n      return {\n        success: false,\n        error: 'Invalid URL provided',\n        command: 'CREATE_LINK',\n        value: url\n      };\n    }\n\n    try {\n      if (!selection || selection.isCollapsed) {\n        // No text selected - insert new link with URL as text\n        const linkElement = document.createElement('a');\n        linkElement.href = normalizedUrl;\n        linkElement.textContent = url; // Use original URL as display text\n        linkElement.target = '_blank';\n        linkElement.rel = 'noopener noreferrer';\n\n        // Insert the link at cursor position\n        if (selection && selection.rangeCount > 0) {\n          const range = selection.getRangeAt(0);\n          range.insertNode(linkElement);\n          \n          // Move cursor after the link\n          range.setStartAfter(linkElement);\n          range.setEndAfter(linkElement);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        } else {\n          // No cursor position, append to editor\n          const editorElement = document.querySelector('.editable-area');\n          if (editorElement) {\n            editorElement.appendChild(linkElement);\n          } else {\n            return {\n              success: false,\n              error: 'No cursor position found and no editor element',\n              command: 'CREATE_LINK'\n            };\n          }\n        }\n\n        return {\n          success: true,\n          command: 'CREATE_LINK',\n          value: normalizedUrl\n        };\n      } else {\n        // Text is selected - use document.execCommand to create link\n        const result = document.execCommand('createLink', false, normalizedUrl);\n\n        if (!result) {\n          return {\n            success: false,\n            error: 'Failed to create link',\n            command: 'CREATE_LINK',\n            value: normalizedUrl\n          };\n        }\n\n        // Find the newly created link and add target and rel attributes\n        // We need to do this immediately after the execCommand\n        setTimeout(() => {\n          const currentSelection = window.getSelection();\n          if (currentSelection && currentSelection.rangeCount > 0) {\n            const linkElement = this.findLinkInSelection(currentSelection);\n            \n            if (linkElement) {\n              linkElement.setAttribute('target', '_blank');\n              linkElement.setAttribute('rel', 'noopener noreferrer');\n            } else {\n              // Fallback: find all links with the URL we just created\n              const editorElement = document.querySelector('.editable-area');\n              if (editorElement) {\n                const links = editorElement.querySelectorAll(`a[href=\"${normalizedUrl}\"]`);\n                links.forEach(link => {\n                  if (!link.hasAttribute('target')) {\n                    link.setAttribute('target', '_blank');\n                    link.setAttribute('rel', 'noopener noreferrer');\n                  }\n                });\n              }\n            }\n          }\n        }, 0);\n\n        return {\n          success: true,\n          command: 'CREATE_LINK',\n          value: normalizedUrl\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: `Link creation error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'CREATE_LINK',\n        value: normalizedUrl\n      };\n    }\n  }\n\n\n\n  /**\n   * Edit an existing hyperlink\n   */\n  private editLink(url?: string): CommandExecutionResult {\n    const selection = window.getSelection();\n\n    if (!selection || !selection.rangeCount) {\n      return {\n        success: false,\n        error: 'No selection available',\n        command: 'EDIT_LINK'\n      };\n    }\n\n    // Find the link element in the current selection\n    const linkElement = this.findLinkInSelection(selection);\n\n    if (!linkElement) {\n      return {\n        success: false,\n        error: 'No link found in current selection or cursor position',\n        command: 'EDIT_LINK'\n      };\n    }\n\n    // If no URL provided, return error (should be handled by modal)\n    let newUrl = url;\n    if (!newUrl) {\n      return {\n        success: false,\n        error: 'URL is required to edit the link',\n        command: 'EDIT_LINK'\n      };\n    }\n\n    // If empty URL provided, remove the link\n    if (!newUrl || newUrl.trim() === '') {\n      return this.removeLinkElement(linkElement);\n    }\n\n    // Validate and normalize URL\n    const normalizedUrl = this.normalizeUrl(newUrl);\n    if (!normalizedUrl) {\n      return {\n        success: false,\n        error: 'Invalid URL provided',\n        command: 'EDIT_LINK',\n        value: newUrl\n      };\n    }\n\n    try {\n      // Update the href attribute\n      linkElement.setAttribute('href', normalizedUrl);\n      \n      // Ensure the link has proper target and rel attributes\n      if (!linkElement.hasAttribute('target')) {\n        linkElement.setAttribute('target', '_blank');\n      }\n      if (!linkElement.hasAttribute('rel')) {\n        linkElement.setAttribute('rel', 'noopener noreferrer');\n      }\n\n      return {\n        success: true,\n        command: 'EDIT_LINK',\n        value: normalizedUrl\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Link editing error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'EDIT_LINK',\n        value: normalizedUrl\n      };\n    }\n  }\n\n  /**\n   * Find a link element in the current selection or cursor position\n   */\n  private findLinkInSelection(selection: Selection): HTMLAnchorElement | null {\n    if (!selection.rangeCount) return null;\n\n    const range = selection.getRangeAt(0);\n    let element = range.commonAncestorContainer;\n\n    // If the common ancestor is a text node, get its parent element\n    if (element.nodeType === Node.TEXT_NODE) {\n      element = element.parentElement!;\n    }\n\n    // Check if the element itself is a link\n    if (element instanceof HTMLAnchorElement) {\n      return element;\n    }\n\n    // Check if the element is inside a link\n    const linkElement = (element as Element).closest('a');\n    if (linkElement instanceof HTMLAnchorElement) {\n      return linkElement;\n    }\n\n    // Check if the selection contains a link\n    const selectedContent = range.cloneContents();\n    const linkInSelection = selectedContent.querySelector('a');\n    if (linkInSelection) {\n      // Find the corresponding link in the actual document\n      const walker = document.createTreeWalker(\n        range.commonAncestorContainer,\n        NodeFilter.SHOW_ELEMENT,\n        {\n          acceptNode: (node) => {\n            return node instanceof HTMLAnchorElement ?\n              NodeFilter.FILTER_ACCEPT :\n              NodeFilter.FILTER_SKIP;\n          }\n        }\n      );\n\n      let currentLink = walker.nextNode();\n      while (currentLink) {\n        if (range.intersectsNode(currentLink)) {\n          return currentLink as HTMLAnchorElement;\n        }\n        currentLink = walker.nextNode();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Remove a link element while preserving its text content\n   */\n  private removeLinkElement(linkElement: HTMLAnchorElement): CommandExecutionResult {\n    try {\n      const textContent = linkElement.textContent || '';\n      const textNode = document.createTextNode(textContent);\n\n      // Replace the link element with its text content\n      linkElement.parentNode?.replaceChild(textNode, linkElement);\n\n      return {\n        success: true,\n        command: 'EDIT_LINK',\n        value: 'Link removed'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Error removing link: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'EDIT_LINK'\n      };\n    }\n  }\n\n  /**\n   * Check if the current selection or cursor is within a link\n   */\n  private isInLink(): boolean {\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) {\n      return false;\n    }\n\n    return this.findLinkInSelection(selection) !== null;\n  }\n\n  /**\n   * Insert an image into the editor with enhanced positioning\n   */\n  public insertImage(imageUrl: string, options?: {\n    width?: number;\n    height?: number;\n    alignment?: 'left' | 'center' | 'right' | 'none';\n    float?: 'left' | 'right' | 'none';\n    alt?: string;\n  }): CommandExecutionResult {\n    // Validate image URL\n    if (!this.isValidImageUrl(imageUrl)) {\n      return {\n        success: false,\n        error: 'Invalid image URL provided',\n        command: 'INSERT_IMAGE',\n        value: imageUrl\n      };\n    }\n\n    try {\n      // Create image element with enhanced attributes\n      const img = document.createElement('img');\n      img.src = imageUrl;\n      img.alt = options?.alt || 'Inserted image';\n      img.className = 'editor-image';\n      img.draggable = true;\n\n      // Set initial styling\n      img.style.maxWidth = '100%';\n      img.style.height = 'auto';\n      img.style.cursor = 'pointer';\n      img.style.border = '2px solid transparent';\n      img.style.borderRadius = '4px';\n      img.style.transition = 'all 0.2s ease';\n\n      // Apply custom dimensions if provided\n      if (options?.width) {\n        img.style.width = `${options.width}px`;\n      }\n      if (options?.height) {\n        img.style.height = `${options.height}px`;\n      }\n\n      // Apply alignment\n      if (options?.alignment) {\n        this.applyImageAlignment(img, options.alignment);\n      }\n\n      // Apply float\n      if (options?.float && options.float !== 'none') {\n        this.applyImageFloat(img, options.float);\n      }\n\n      // Add hover effects\n      img.addEventListener('mouseenter', () => {\n        img.style.borderColor = '#3b82f6';\n        img.style.boxShadow = '0 4px 12px rgba(59, 130, 246, 0.15)';\n      });\n\n      img.addEventListener('mouseleave', () => {\n        img.style.borderColor = 'transparent';\n        img.style.boxShadow = 'none';\n      });\n\n      // Insert the image at cursor position or at the end\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n\n        // If we're inside a text node, we might want to create a new paragraph\n        const container = range.commonAncestorContainer;\n        if (container.nodeType === Node.TEXT_NODE && container.textContent?.trim()) {\n          // Split the text node and insert image in between\n          const textNode = container as Text;\n          const beforeText = textNode.textContent?.substring(0, range.startOffset) || '';\n          const afterText = textNode.textContent?.substring(range.endOffset) || '';\n\n          if (beforeText || afterText) {\n            // Create paragraph structure\n            const beforeP = document.createElement('p');\n            const afterP = document.createElement('p');\n            const imgP = document.createElement('p');\n\n            if (beforeText) beforeP.textContent = beforeText;\n            imgP.appendChild(img);\n            if (afterText) afterP.textContent = afterText;\n\n            // Replace the text node with the new structure\n            const parent = textNode.parentNode;\n            if (parent) {\n              parent.insertBefore(beforeText ? beforeP : imgP, textNode);\n              if (beforeText) parent.insertBefore(imgP, textNode);\n              if (afterText) parent.insertBefore(afterP, textNode);\n              parent.removeChild(textNode);\n            }\n          } else {\n            range.deleteContents();\n            range.insertNode(img);\n          }\n        } else {\n          range.deleteContents();\n          range.insertNode(img);\n        }\n\n        // Move cursor after the image\n        range.setStartAfter(img);\n        range.setEndAfter(img);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else {\n        // No selection, append to the end of the editor\n        const editorElement = document.querySelector('.editable-area');\n        if (editorElement) {\n          const p = document.createElement('p');\n          p.appendChild(img);\n          editorElement.appendChild(p);\n        } else {\n          return {\n            success: false,\n            error: 'No cursor position found and no editor element',\n            command: 'INSERT_IMAGE'\n          };\n        }\n      }\n\n      return {\n        success: true,\n        command: 'INSERT_IMAGE',\n        value: imageUrl\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Image insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_IMAGE',\n        value: imageUrl\n      };\n    }\n  }\n\n  /**\n   * Apply alignment to an image element\n   */\n  private applyImageAlignment(img: HTMLImageElement, alignment: 'left' | 'center' | 'right' | 'none') {\n    switch (alignment) {\n      case 'left':\n        img.style.display = 'block';\n        img.style.marginLeft = '0';\n        img.style.marginRight = 'auto';\n        break;\n      case 'center':\n        img.style.display = 'block';\n        img.style.marginLeft = 'auto';\n        img.style.marginRight = 'auto';\n        break;\n      case 'right':\n        img.style.display = 'block';\n        img.style.marginLeft = 'auto';\n        img.style.marginRight = '0';\n        break;\n      case 'none':\n        img.style.display = 'inline-block';\n        img.style.marginLeft = '';\n        img.style.marginRight = '';\n        break;\n    }\n  }\n\n  /**\n   * Apply float to an image element\n   */\n  private applyImageFloat(img: HTMLImageElement, float: 'left' | 'right') {\n    img.style.float = float;\n    img.style.margin = float === 'left' ? '0 15px 10px 0' : '0 0 10px 15px';\n  }\n\n  /**\n   * Trigger image file upload\n   */\n  private triggerImageUpload(): CommandExecutionResult {\n    try {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n      input.style.display = 'none';\n\n      input.onchange = (event) => {\n        const file = (event.target as HTMLInputElement).files?.[0];\n        if (!file) {\n          return;\n        }\n\n        // Validate file type\n        if (!file.type.startsWith('image/')) {\n          console.error('Selected file is not an image');\n          return;\n        }\n\n        // Validate file size (max 5MB)\n        const maxSize = 5 * 1024 * 1024; // 5MB\n        if (file.size > maxSize) {\n          console.error('Image file is too large (max 5MB)');\n          return;\n        }\n\n        // Convert to data URL\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const dataUrl = e.target?.result as string;\n          this.insertImage(dataUrl);\n        };\n        reader.onerror = () => {\n          console.error('Failed to read image file');\n        };\n        reader.readAsDataURL(file);\n      };\n\n      document.body.appendChild(input);\n      input.click();\n      document.body.removeChild(input);\n\n      return {\n        success: true,\n        command: 'INSERT_IMAGE',\n        value: 'File upload triggered'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `File upload error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_IMAGE'\n      };\n    }\n  }\n\n  /**\n   * Upload and insert a file\n   */\n  private uploadFile(fileUrl?: string): CommandExecutionResult {\n    if (fileUrl) {\n      // Insert file link directly\n      return this.insertFileLink(fileUrl);\n    }\n\n    try {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n\n      input.onchange = (event) => {\n        const file = (event.target as HTMLInputElement).files?.[0];\n        if (!file) {\n          return;\n        }\n\n        // Validate file size (max 10MB)\n        const maxSize = 10 * 1024 * 1024; // 10MB\n        if (file.size > maxSize) {\n          console.error('File is too large (max 10MB)');\n          return;\n        }\n\n        // For demo purposes, create a blob URL\n        // In a real application, you would upload to a server\n        const blobUrl = URL.createObjectURL(file);\n        this.insertFileLink(blobUrl, file.name, file.type);\n      };\n\n      document.body.appendChild(input);\n      input.click();\n      document.body.removeChild(input);\n\n      return {\n        success: true,\n        command: 'UPLOAD_FILE',\n        value: 'File upload triggered'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `File upload error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'UPLOAD_FILE'\n      };\n    }\n  }\n\n  /**\n   * Insert a file link into the editor\n   */\n  private insertFileLink(url: string, fileName?: string, fileType?: string): CommandExecutionResult {\n    try {\n      // Create file link element\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = fileName || 'download';\n      link.target = '_blank';\n      link.rel = 'noopener noreferrer';\n\n      // Set link text based on file type\n      const displayName = fileName || 'Download File';\n      const fileIcon = this.getFileIcon(fileType);\n      link.innerHTML = `${fileIcon} ${displayName}`;\n\n      // Style the file link\n      link.style.display = 'inline-block';\n      link.style.padding = '8px 12px';\n      link.style.margin = '4px';\n      link.style.backgroundColor = '#f0f0f0';\n      link.style.border = '1px solid #ccc';\n      link.style.borderRadius = '4px';\n      link.style.textDecoration = 'none';\n      link.style.color = '#333';\n\n      // Insert the link at cursor position\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(link);\n\n        // Move cursor after the link\n        range.setStartAfter(link);\n        range.setEndAfter(link);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else {\n        return {\n          success: false,\n          error: 'No cursor position found',\n          command: 'UPLOAD_FILE'\n        };\n      }\n\n      return {\n        success: true,\n        command: 'UPLOAD_FILE',\n        value: url\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `File insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'UPLOAD_FILE',\n        value: url\n      };\n    }\n  }\n\n  /**\n   * Get file icon based on file type\n   */\n  private getFileIcon(fileType?: string): string {\n    if (!fileType) return '📄';\n\n    if (fileType.startsWith('image/')) return '🖼️';\n    if (fileType.startsWith('video/')) return '🎥';\n    if (fileType.startsWith('audio/')) return '🎵';\n    if (fileType.includes('pdf')) return '📕';\n    if (fileType.includes('word') || fileType.includes('document')) return '📝';\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return '📊';\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return '📊';\n    if (fileType.includes('zip') || fileType.includes('archive')) return '🗜️';\n\n    return '📄';\n  }\n\n  /**\n   * Insert a table into the editor\n   */\n  private insertTable(tableConfig?: string): CommandExecutionResult {\n    try {\n      // Parse table configuration (rows,cols,hasHeaders)\n      const config = tableConfig ? tableConfig.split(',') : ['3', '3', 'true'];\n      const rows = parseInt(config[0]) || 3;\n      const cols = parseInt(config[1]) || 3;\n      const hasHeaders = config[2] === 'true';\n\n      // Create table element\n      const table = document.createElement('table');\n      table.className = 'editor-table';\n      table.style.borderCollapse = 'collapse';\n      table.style.width = '100%';\n      table.style.border = '1px solid #ccc';\n      table.style.margin = '10px 0';\n\n      const tbody = document.createElement('tbody');\n\n      for (let i = 0; i < rows; i++) {\n        const row = document.createElement('tr');\n\n        for (let j = 0; j < cols; j++) {\n          const cell = document.createElement(hasHeaders && i === 0 ? 'th' : 'td');\n          cell.style.border = '1px solid #ccc';\n          cell.style.padding = '8px';\n          cell.style.minWidth = '50px';\n          cell.style.minHeight = '20px';\n\n          if (hasHeaders && i === 0) {\n            cell.style.backgroundColor = '#f5f5f5';\n            cell.style.fontWeight = 'bold';\n            cell.textContent = `Header ${j + 1}`;\n          } else {\n            cell.innerHTML = '&nbsp;';\n          }\n\n          row.appendChild(cell);\n        }\n\n        tbody.appendChild(row);\n      }\n\n      table.appendChild(tbody);\n\n      // Insert table at cursor position\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(table);\n\n        // Move cursor to first cell\n        const firstCell = table.querySelector('td, th');\n        if (firstCell) {\n          range.selectNodeContents(firstCell);\n          range.collapse(true);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        }\n      } else {\n        return {\n          success: false,\n          error: 'No cursor position found',\n          command: 'INSERT_TABLE'\n        };\n      }\n\n      return {\n        success: true,\n        command: 'INSERT_TABLE',\n        value: `${rows}x${cols} table inserted`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Table insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_TABLE'\n      };\n    }\n  }\n\n  /**\n   * Insert a special character\n   */\n  private insertSpecialChar(char?: string): CommandExecutionResult {\n    if (!char) {\n      return {\n        success: false,\n        error: 'No character specified',\n        command: 'INSERT_SPECIAL_CHAR'\n      };\n    }\n\n    try {\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(document.createTextNode(char));\n\n        // Move cursor after the character\n        range.setStartAfter(range.endContainer);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else {\n        return {\n          success: false,\n          error: 'No cursor position found',\n          command: 'INSERT_SPECIAL_CHAR'\n        };\n      }\n\n      return {\n        success: true,\n        command: 'INSERT_SPECIAL_CHAR',\n        value: char\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Special character insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_SPECIAL_CHAR'\n      };\n    }\n  }\n\n  /**\n   * Find and replace functionality\n   * Note: This function should not be called directly anymore\n   * Find/replace is now handled by the modal system in the WYSIWYGEditor component\n   */\n  private findReplace(): CommandExecutionResult {\n    return {\n      success: false,\n      error: 'Find and replace should be handled by the modal system',\n      command: 'FIND_REPLACE'\n    };\n  }\n\n  /**\n   * Toggle source code view\n   */\n  private toggleSourceCode(): CommandExecutionResult {\n    try {\n      const editorElement = document.querySelector('.editable-area') as HTMLElement;\n      if (!editorElement) {\n        return {\n          success: false,\n          error: 'Editor element not found',\n          command: 'SOURCE_CODE'\n        };\n      }\n\n      // Check if we're currently in source mode\n      const isSourceMode = editorElement.getAttribute('data-source-mode') === 'true';\n\n      if (isSourceMode) {\n        // Switch back to WYSIWYG mode\n        const sourceContent = editorElement.textContent || '';\n        editorElement.innerHTML = sourceContent;\n        editorElement.contentEditable = 'true';\n        editorElement.removeAttribute('data-source-mode');\n        editorElement.style.fontFamily = '';\n        editorElement.style.whiteSpace = '';\n      } else {\n        // Switch to source mode\n        const htmlContent = editorElement.innerHTML;\n        editorElement.textContent = htmlContent;\n        editorElement.contentEditable = 'true';\n        editorElement.setAttribute('data-source-mode', 'true');\n        editorElement.style.fontFamily = 'monospace';\n        editorElement.style.whiteSpace = 'pre-wrap';\n      }\n\n      return {\n        success: true,\n        command: 'SOURCE_CODE',\n        value: isSourceMode ? 'WYSIWYG mode' : 'Source mode'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Source code toggle error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'SOURCE_CODE'\n      };\n    }\n  }\n\n  /**\n   * Toggle fullscreen mode\n   */\n  private toggleFullscreen(): CommandExecutionResult {\n    try {\n      const editorContainer = document.querySelector('.wysiwyg-editor') as HTMLElement;\n      if (!editorContainer) {\n        return {\n          success: false,\n          error: 'Editor container not found',\n          command: 'FULLSCREEN'\n        };\n      }\n\n      const isFullscreen = editorContainer.classList.contains('fullscreen');\n\n      if (isFullscreen) {\n        // Exit fullscreen\n        editorContainer.classList.remove('fullscreen');\n        document.body.style.overflow = '';\n      } else {\n        // Enter fullscreen\n        editorContainer.classList.add('fullscreen');\n        document.body.style.overflow = 'hidden';\n      }\n\n      return {\n        success: true,\n        command: 'FULLSCREEN',\n        value: isFullscreen ? 'Exited fullscreen' : 'Entered fullscreen'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Fullscreen toggle error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'FULLSCREEN'\n      };\n    }\n  }\n\n  /**\n   * Print document\n   */\n  private printDocument(): CommandExecutionResult {\n    try {\n      const editorElement = document.querySelector('.editable-area') as HTMLElement;\n      if (!editorElement) {\n        return {\n          success: false,\n          error: 'Editor element not found',\n          command: 'PRINT'\n        };\n      }\n\n      // Create a new window for printing\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        return {\n          success: false,\n          error: 'Could not open print window',\n          command: 'PRINT'\n        };\n      }\n\n      const content = editorElement.innerHTML;\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Print Document</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 20px; }\n            table { border-collapse: collapse; width: 100%; }\n            th, td { border: 1px solid #ccc; padding: 8px; }\n            th { background-color: #f5f5f5; font-weight: bold; }\n            img { max-width: 100%; height: auto; }\n          </style>\n        </head>\n        <body>\n          ${content}\n        </body>\n        </html>\n      `);\n\n      printWindow.document.close();\n      printWindow.focus();\n      printWindow.print();\n      printWindow.close();\n\n      return {\n        success: true,\n        command: 'PRINT',\n        value: 'Print dialog opened'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Print error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'PRINT'\n      };\n    }\n  }\n\n  /**\n   * Toggle spell check\n   */\n  private toggleSpellCheck(): CommandExecutionResult {\n    try {\n      const editorElement = document.querySelector('.editable-area') as HTMLElement;\n      if (!editorElement) {\n        return {\n          success: false,\n          error: 'Editor element not found',\n          command: 'SPELL_CHECK'\n        };\n      }\n\n      const currentSpellCheck = editorElement.spellcheck;\n      editorElement.spellcheck = !currentSpellCheck;\n\n      return {\n        success: true,\n        command: 'SPELL_CHECK',\n        value: currentSpellCheck ? 'Spell check disabled' : 'Spell check enabled'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Spell check toggle error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'SPELL_CHECK'\n      };\n    }\n  }\n\n  /**\n   * Validate if URL is a valid image URL\n   */\n  private isValidImageUrl(url: string): boolean {\n    if (!url || url.trim() === '') return false;\n\n    // Check for data URLs (base64 images)\n    if (url.startsWith('data:image/')) return true;\n\n    // Check for blob URLs\n    if (url.startsWith('blob:')) return true;\n\n    // Basic URL validation\n    try {\n      new URL(url);\n      // Check if URL ends with common image extensions\n      const imageExtensions = /\\.(jpg|jpeg|png|gif|bmp|webp|svg)(\\?.*)?$/i;\n      return imageExtensions.test(url);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Set font color for selected text or future text input\n   */\n  private setFontColor(color?: string): CommandExecutionResult {\n    if (!color) {\n      return {\n        success: false,\n        error: 'Color value is required',\n        command: 'FONT_COLOR'\n      };\n    }\n\n    try {\n      // Use document.execCommand for font color\n      const result = document.execCommand('foreColor', false, color);\n\n      if (!result) {\n        return {\n          success: false,\n          error: 'Failed to set font color',\n          command: 'FONT_COLOR',\n          value: color\n        };\n      }\n\n      return {\n        success: true,\n        command: 'FONT_COLOR',\n        value: color\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Font color error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'FONT_COLOR',\n        value: color\n      };\n    }\n  }\n\n  /**\n   * Set background color for selected text or future text input\n   */\n  private setBackgroundColor(color?: string): CommandExecutionResult {\n    if (!color) {\n      return {\n        success: false,\n        error: 'Color value is required',\n        command: 'BACKGROUND_COLOR'\n      };\n    }\n\n    try {\n      // Use document.execCommand for background color\n      const result = document.execCommand('backColor', false, color);\n\n      if (!result) {\n        return {\n          success: false,\n          error: 'Failed to set background color',\n          command: 'BACKGROUND_COLOR',\n          value: color\n        };\n      }\n\n      return {\n        success: true,\n        command: 'BACKGROUND_COLOR',\n        value: color\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Background color error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'BACKGROUND_COLOR',\n        value: color\n      };\n    }\n  }\n\n  /**\n   * Normalize and validate URL\n   */\n  private normalizeUrl(url: string): string | null {\n    if (!url || url.trim() === '') {\n      return null;\n    }\n\n    const trimmedUrl = url.trim();\n\n    // Basic URL validation\n    try {\n      // If URL doesn't have a protocol, assume http://\n      if (!/^https?:\\/\\//i.test(trimmedUrl)) {\n        // Check if it looks like an email\n        if (trimmedUrl.includes('@') && !trimmedUrl.includes(' ')) {\n          return `mailto:${trimmedUrl}`;\n        }\n        // Otherwise assume it's a web URL\n        return `http://${trimmedUrl}`;\n      }\n\n      // Validate the URL by creating a URL object\n      new URL(trimmedUrl);\n      return trimmedUrl;\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\n// Export singleton instance\nexport const commandExecutor = CommandExecutor.getInstance();","import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { AdvancedToolbar } from './AdvancedToolbar';\nimport { EditableArea } from './EditableArea';\nimport { ImageCropModal } from './ImageCropModal';\nimport { FileUploadModal } from './FileUploadModal';\nimport { ImageManager } from './ImageManager';\nimport { TableInsertModal } from './TableInsertModal';\nimport { SpecialCharModal } from './SpecialCharModal';\nimport { UrlInputModal } from './UrlInputModal';\nimport { FindReplaceModal } from './FindReplaceModal';\nimport { NotificationModal } from './NotificationModal';\nimport { LinkPreviewPopup } from './LinkPreviewPopup';\nimport { WYSIWYGEditorProps, SelectionState } from '../types';\nimport { commandExecutor } from '../utils/commandSystem';\n\nexport const WYSIWYGEditor: React.FC<WYSIWYGEditorProps> = ({\n  initialContent = '',\n  placeholder = 'Start typing...',\n  onChange,\n  onFocus,\n  onBlur\n}) => {\n  const [content, setContent] = useState(initialContent);\n  const [isEditorFocused, setIsEditorFocused] = useState(false);\n  const [activeFormats, setActiveFormats] = useState<Set<string>>(new Set());\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [isImageCropModalOpen, setIsImageCropModalOpen] = useState(false);\n  const [isFileUploadModalOpen, setIsFileUploadModalOpen] = useState(false);\n  const [selectedImageUrl, setSelectedImageUrl] = useState<string>('');\n  const [uploadType, setUploadType] = useState<'image' | 'file'>('image');\n  const [selectedImage, setSelectedImage] = useState<HTMLImageElement | null>(null);\n  const [_imageManagers, _setImageManagers] = useState<HTMLImageElement[]>([]);\n  const [isTableModalOpen, setIsTableModalOpen] = useState(false);\n  const [isSpecialCharModalOpen, setIsSpecialCharModalOpen] = useState(false);\n  const [isUrlInputModalOpen, setIsUrlInputModalOpen] = useState(false);\n  const [urlInputType, setUrlInputType] = useState<'create' | 'edit'>('create');\n  const [currentLinkUrl, setCurrentLinkUrl] = useState('');\n  const [isFindReplaceModalOpen, setIsFindReplaceModalOpen] = useState(false);\n  const [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n  const [notificationData, setNotificationData] = useState({\n    title: '',\n    message: '',\n    type: 'info' as 'info' | 'success' | 'warning' | 'error'\n  });\n  const [savedSelection, setSavedSelection] = useState<Range | null>(null);\n  const [isLinkPreviewOpen, setIsLinkPreviewOpen] = useState(false);\n  const [linkPreviewData, setLinkPreviewData] = useState({\n    url: '',\n    text: '',\n    position: { x: 0, y: 0 },\n    element: null as HTMLAnchorElement | null\n  });\n  const editorRef = useRef<HTMLDivElement>(null);\n  const announcementRef = useRef<HTMLDivElement>(null);\n\n  // Update format states based on current selection\n  const updateFormatStates = useCallback(() => {\n    if (!isEditorFocused || !editorRef.current) return;\n\n    const formats = commandExecutor.getActiveFormats();\n    setActiveFormats(formats);\n    setCanUndo(commandExecutor.canUndo());\n    setCanRedo(commandExecutor.canRedo());\n  }, [isEditorFocused]);\n\n  // Announce formatting changes to screen readers\n  const announceToScreenReader = useCallback((message: string) => {\n    if (announcementRef.current) {\n      announcementRef.current.textContent = message;\n      // Clear the announcement after a short delay to allow for repeated announcements\n      setTimeout(() => {\n        if (announcementRef.current) {\n          announcementRef.current.textContent = '';\n        }\n      }, 1000);\n    }\n  }, []);\n\n  // Get human-readable format name for announcements\n  const getFormatName = useCallback((command: string, value?: string): string => {\n    const formatNames: Record<string, string> = {\n      'bold': 'bold',\n      'italic': 'italic',\n      'underline': 'underline',\n      'insertUnorderedList': 'bullet list',\n      'insertOrderedList': 'numbered list',\n      'justifyLeft': 'left aligned',\n      'justifyCenter': 'center aligned',\n      'justifyRight': 'right aligned',\n      'createLink': 'link',\n      'unlink': 'link removed',\n      'insertImage': 'image inserted',\n      'uploadFile': 'file uploaded',\n      'undo': 'undone',\n      'redo': 'redone',\n      'removeFormat': 'formatting cleared'\n    };\n\n    if (command === 'formatBlock' && value) {\n      return `heading ${value.toLowerCase()}`;\n    }\n\n    return formatNames[command] || command;\n  }, []);\n\n  // Handle image upload and cropping\n  const handleImageUpload = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const imageUrl = e.target?.result as string;\n      setSelectedImageUrl(imageUrl);\n      setIsFileUploadModalOpen(false);\n      setIsImageCropModalOpen(true);\n    };\n    reader.readAsDataURL(file);\n  }, []);\n\n  // Handle cropped image insertion\n  const handleCroppedImage = useCallback((croppedImageUrl: string) => {\n    const result = commandExecutor.insertImage(croppedImageUrl);\n\n    if (result.success) {\n      announceToScreenReader('Image inserted');\n      // Update content after successful image insertion\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n          // Set up image management for the newly inserted image\n          setupImageManagement();\n        }\n      }, 0);\n    } else {\n      console.warn('Image insertion failed:', result.error);\n      announceToScreenReader('Image insertion failed');\n    }\n\n    setIsImageCropModalOpen(false);\n    setSelectedImageUrl('');\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Set up image management for all images in the editor\n  const setupImageManagement = useCallback(() => {\n    if (!editorRef.current) return;\n\n    const images = editorRef.current.querySelectorAll('img.editor-image');\n    const imageElements = Array.from(images) as HTMLImageElement[];\n\n    // Add click handlers to images for management\n    imageElements.forEach((img) => {\n      // Remove existing listeners to avoid duplicates\n      img.removeEventListener('click', handleImageClick);\n      img.addEventListener('click', handleImageClick);\n\n      // Add drag and drop functionality\n      img.addEventListener('dragstart', handleImageDragStart);\n      img.addEventListener('dragend', handleImageDragEnd);\n    });\n\n    _setImageManagers(imageElements);\n  }, []);\n\n  // Handle image click for management\n  const handleImageClick = useCallback((event: Event) => {\n    event.stopPropagation();\n    const img = event.target as HTMLImageElement;\n    setSelectedImage(img);\n  }, []);\n\n  // Handle image drag start\n  const handleImageDragStart = useCallback((event: DragEvent) => {\n    const img = event.target as HTMLImageElement;\n    if (event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/html', img.outerHTML);\n      img.style.opacity = '0.5';\n    }\n  }, []);\n\n  // Handle image drag end\n  const handleImageDragEnd = useCallback((event: DragEvent) => {\n    const img = event.target as HTMLImageElement;\n    img.style.opacity = '1';\n  }, []);\n\n  // Handle image update from ImageManager\n  const handleImageUpdate = useCallback(() => {\n    if (editorRef.current) {\n      const newContent = editorRef.current.innerHTML;\n      setContent(newContent);\n      onChange?.(newContent);\n    }\n  }, [onChange]);\n\n  // Handle image removal from ImageManager\n  const handleImageRemove = useCallback(() => {\n    if (selectedImage && selectedImage.parentNode) {\n      selectedImage.parentNode.removeChild(selectedImage);\n      setSelectedImage(null);\n\n      // Update content after image removal\n      if (editorRef.current) {\n        const newContent = editorRef.current.innerHTML;\n        setContent(newContent);\n        onChange?.(newContent);\n      }\n\n      announceToScreenReader('Image removed');\n    }\n  }, [selectedImage, onChange, announceToScreenReader]);\n\n  // Handle file upload\n  const handleFileUpload = useCallback((file: File) => {\n    // For demo purposes, create a blob URL\n    // In a real application, you would upload to a server\n    const blobUrl = URL.createObjectURL(file);\n\n    // Create file link element\n    const link = document.createElement('a');\n    link.href = blobUrl;\n    link.download = file.name;\n    link.target = '_blank';\n    link.rel = 'noopener noreferrer';\n\n    // Set link text based on file type\n    const fileIcon = getFileIcon(file.type);\n    link.innerHTML = `${fileIcon} ${file.name}`;\n\n    // Style the file link\n    link.style.display = 'inline-block';\n    link.style.padding = '8px 12px';\n    link.style.margin = '4px';\n    link.style.backgroundColor = '#f0f0f0';\n    link.style.border = '1px solid #ccc';\n    link.style.borderRadius = '4px';\n    link.style.textDecoration = 'none';\n    link.style.color = '#333';\n\n    // Insert the link at cursor position\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(link);\n\n      // Move cursor after the link\n      range.setStartAfter(link);\n      range.setEndAfter(link);\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      announceToScreenReader('File uploaded and inserted');\n\n      // Update content\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      announceToScreenReader('File upload failed - no cursor position');\n    }\n\n    setIsFileUploadModalOpen(false);\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Get file icon based on file type\n  const getFileIcon = useCallback((fileType: string): string => {\n    if (fileType.startsWith('image/')) return '🖼️';\n    if (fileType.startsWith('video/')) return '🎥';\n    if (fileType.startsWith('audio/')) return '🎵';\n    if (fileType.includes('pdf')) return '📕';\n    if (fileType.includes('word') || fileType.includes('document')) return '📝';\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return '📊';\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return '📊';\n    if (fileType.includes('zip') || fileType.includes('archive')) return '🗜️';\n    return '📄';\n  }, []);\n\n  // Handle table insertion\n  const handleTableInsert = useCallback((rows: number, cols: number, hasHeaders: boolean) => {\n    if (!editorRef.current) return;\n\n    const tableConfig = `${rows},${cols},${hasHeaders}`;\n    const result = commandExecutor.executeCommand('INSERT_TABLE', tableConfig, editorRef.current);\n\n    if (result.success) {\n      announceToScreenReader('Table inserted');\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      console.warn('Table insertion failed:', result.error);\n      announceToScreenReader('Table insertion failed');\n    }\n\n    setIsTableModalOpen(false);\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Handle special character insertion\n  const handleSpecialCharInsert = useCallback((char: string) => {\n    if (!editorRef.current) return;\n\n    const result = commandExecutor.executeCommand('INSERT_SPECIAL_CHAR', char, editorRef.current);\n\n    if (result.success) {\n      announceToScreenReader(`Special character ${char} inserted`);\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      console.warn('Special character insertion failed:', result.error);\n      announceToScreenReader('Special character insertion failed');\n    }\n\n    setIsSpecialCharModalOpen(false);\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Handle URL input for links\n  const handleUrlSubmit = useCallback((url: string) => {\n    if (!editorRef.current) return;\n\n    // Restore the saved selection before creating the link\n    if (savedSelection && urlInputType === 'create') {\n      const selection = window.getSelection();\n      if (selection) {\n        selection.removeAllRanges();\n        selection.addRange(savedSelection);\n\n        // Focus the editor to ensure the selection is active\n        editorRef.current.focus();\n      }\n    }\n\n    const commandKey = urlInputType === 'create' ? 'CREATE_LINK' : 'EDIT_LINK';\n    const result = commandExecutor.executeCommand(commandKey, url, editorRef.current);\n\n    if (result.success) {\n      const action = urlInputType === 'create' ? 'created' : 'updated';\n      announceToScreenReader(`Link ${action}`);\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      showNotification('Error', result.error || 'Failed to create link', 'error');\n    }\n\n    // Clear the saved selection and reset state\n    setSavedSelection(null);\n    setCurrentLinkUrl('');\n    setIsUrlInputModalOpen(false);\n  }, [urlInputType, savedSelection, onChange, updateFormatStates, announceToScreenReader]);\n\n  // Handle find and replace\n  const handleFindReplace = useCallback((findText: string, replaceText: string) => {\n    if (!editorRef.current) return;\n\n    // Simple find and replace implementation\n    const currentContent = editorRef.current.innerHTML;\n    const updatedContent = currentContent.replace(new RegExp(findText, 'gi'), replaceText);\n\n    if (currentContent !== updatedContent) {\n      editorRef.current.innerHTML = updatedContent;\n      setContent(updatedContent);\n      onChange?.(updatedContent);\n\n      const matches = (currentContent.match(new RegExp(findText, 'gi')) || []).length;\n      showNotification('Find & Replace', `Replaced ${matches} occurrence(s)`, 'success');\n      announceToScreenReader(`Replaced ${matches} occurrences`);\n    } else {\n      showNotification('Find & Replace', 'No matches found', 'info');\n    }\n  }, [onChange, announceToScreenReader]);\n\n  // Show notification helper\n  const showNotification = useCallback((title: string, message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info') => {\n    setNotificationData({ title, message, type });\n    setIsNotificationModalOpen(true);\n  }, []);\n\n  // Handle link preview popup\n  const handleLinkClick = useCallback((event: MouseEvent, linkElement: HTMLAnchorElement) => {\n    // Prevent default link navigation\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Calculate popup position\n    const rect = linkElement.getBoundingClientRect();\n    const position = {\n      x: rect.left,\n      y: rect.bottom + 5 // Position below the link\n    };\n\n    // Set link preview data\n    setLinkPreviewData({\n      url: linkElement.href,\n      text: linkElement.textContent || '',\n      position,\n      element: linkElement\n    });\n    setIsLinkPreviewOpen(true);\n  }, []);\n\n  // Handle link preview actions\n  const handleLinkPreviewEdit = useCallback(() => {\n    if (linkPreviewData.element) {\n      setCurrentLinkUrl(linkPreviewData.element.href);\n      setUrlInputType('edit');\n      setIsUrlInputModalOpen(true);\n      setIsLinkPreviewOpen(false);\n    }\n  }, [linkPreviewData.element]);\n\n  const handleLinkPreviewRemove = useCallback(() => {\n    if (linkPreviewData.element) {\n      // Remove the link but keep the text\n      const textContent = linkPreviewData.element.textContent || '';\n      const textNode = document.createTextNode(textContent);\n      linkPreviewData.element.parentNode?.replaceChild(textNode, linkPreviewData.element);\n      \n      // Update content\n      if (editorRef.current) {\n        const newContent = editorRef.current.innerHTML;\n        setContent(newContent);\n        onChange?.(newContent);\n      }\n      \n      announceToScreenReader('Link removed');\n      setIsLinkPreviewOpen(false);\n    }\n  }, [linkPreviewData.element, onChange, announceToScreenReader]);\n\n  const handleLinkPreviewGoTo = useCallback(() => {\n    if (linkPreviewData.url) {\n      window.open(linkPreviewData.url, '_blank', 'noopener,noreferrer');\n      setIsLinkPreviewOpen(false);\n    }\n  }, [linkPreviewData.url]);\n\n  const handleLinkPreviewClose = useCallback(() => {\n    setIsLinkPreviewOpen(false);\n  }, []);\n\n  // Handle command execution\n  const executeCommand = useCallback((command: string, value?: string, _fromKeyboard = false) => {\n    if (!editorRef.current) return;\n\n    // Save the current selection before executing commands that might open modals\n    const selection = window.getSelection();\n    let savedRange: Range | null = null;\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      // Check if cloneRange is available (for test environment compatibility)\n      if (typeof range.cloneRange === 'function') {\n        savedRange = range.cloneRange();\n      }\n    }\n\n    // Handle special commands that open modals\n    if (command === 'insertImage') {\n      setUploadType('image');\n      setIsFileUploadModalOpen(true);\n      return;\n    }\n\n    if (command === 'uploadFile') {\n      setUploadType('file');\n      setIsFileUploadModalOpen(true);\n      return;\n    }\n\n    if (command === 'insertTable') {\n      setIsTableModalOpen(true);\n      return;\n    }\n\n    if (command === 'insertSpecialChar') {\n      setIsSpecialCharModalOpen(true);\n      return;\n    }\n\n    if (command === 'createLink') {\n      // Save the current selection before opening the modal\n      setSavedSelection(savedRange);\n      setUrlInputType('create');\n      setCurrentLinkUrl('');\n      setIsUrlInputModalOpen(true);\n      return;\n    }\n\n    if (command === 'editLink') {\n      // Get current link URL if cursor is on a link\n      const selection = window.getSelection();\n      let linkElement: HTMLAnchorElement | null = null;\n\n      // Method 1: Try to find link from current selection/cursor position\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n\n        // Helper function to find link element from a node\n        const findLinkFromNode = (node: Node): HTMLAnchorElement | null => {\n          if (node.nodeType === Node.TEXT_NODE) {\n            return node.parentElement?.closest('a') as HTMLAnchorElement || null;\n          } else if (node.nodeType === Node.ELEMENT_NODE) {\n            const element = node as Element;\n            if (element.tagName === 'A') {\n              return element as HTMLAnchorElement;\n            }\n            return element.closest('a') as HTMLAnchorElement || null;\n          }\n          return null;\n        };\n\n        // Check start container first\n        linkElement = findLinkFromNode(range.startContainer);\n\n        // If not found and we have a selection, check end container too\n        if (!linkElement && !selection.isCollapsed) {\n          const endLink = findLinkFromNode(range.endContainer);\n          // Only use end link if it's the same as what we'd find from start\n          if (endLink) {\n            linkElement = endLink;\n          }\n        }\n\n        // If still not found, check the common ancestor\n        if (!linkElement) {\n          linkElement = findLinkFromNode(range.commonAncestorContainer);\n        }\n\n        // Last resort: check if the range intersects with any links\n        if (!linkElement && editorRef.current) {\n          const allLinks = editorRef.current.querySelectorAll('a[href]');\n          for (const link of Array.from(allLinks)) {\n            if (range.intersectsNode(link)) {\n              linkElement = link as HTMLAnchorElement;\n              break;\n            }\n          }\n        }\n      }\n\n      // Method 2: If still no link found, check if there's only one link in the editor\n      if (!linkElement && editorRef.current) {\n        const allLinks = editorRef.current.querySelectorAll('a[href]');\n        if (allLinks.length === 1) {\n          linkElement = allLinks[0] as HTMLAnchorElement;\n        }\n      }\n\n      if (linkElement && linkElement.href) {\n        // Set the current URL as the initial value for editing\n        setCurrentLinkUrl(linkElement.href);\n        setUrlInputType('edit');\n        setIsUrlInputModalOpen(true);\n        return;\n      }\n\n      showNotification('Edit Link', 'Please place your cursor on a link to edit it, or select the link text first', 'info');\n      return;\n    }\n\n    if (command === 'findReplace') {\n      setIsFindReplaceModalOpen(true);\n      return;\n    }\n\n    // Map toolbar commands to command system keys\n    const commandMap: Record<string, string> = {\n      'bold': 'BOLD',\n      'italic': 'ITALIC',\n      'underline': 'UNDERLINE',\n      'strikethrough': 'STRIKETHROUGH',\n      'subscript': 'SUBSCRIPT',\n      'superscript': 'SUPERSCRIPT',\n      'formatBlock': 'FORMAT_H1', // Will be handled specially\n      'fontSize': 'FONT_SIZE',\n      'fontName': 'FONT_NAME',\n      'fontColor': 'FONT_COLOR',\n      'backgroundColor': 'BACKGROUND_COLOR',\n      'insertUnorderedList': 'INSERT_UNORDERED_LIST',\n      'insertOrderedList': 'INSERT_ORDERED_LIST',\n      'indent': 'INDENT',\n      'outdent': 'OUTDENT',\n      'justifyLeft': 'JUSTIFY_LEFT',\n      'justifyCenter': 'JUSTIFY_CENTER',\n      'justifyRight': 'JUSTIFY_RIGHT',\n      'justifyFull': 'JUSTIFY_FULL',\n      'createLink': 'CREATE_LINK',\n      'editLink': 'EDIT_LINK',\n      'unlink': 'UNLINK',\n      'insertHorizontalRule': 'INSERT_HORIZONTAL_RULE',\n      'findReplace': 'FIND_REPLACE',\n      'sourceCode': 'SOURCE_CODE',\n      'fullscreen': 'FULLSCREEN',\n      'print': 'PRINT',\n      'spellCheck': 'SPELL_CHECK',\n      'undo': 'UNDO',\n      'redo': 'REDO',\n      'removeFormat': 'REMOVE_FORMAT'\n    };\n\n    // Handle special cases for formatBlock commands\n    let commandKey = commandMap[command];\n    if (command === 'formatBlock' && value) {\n      commandKey = `FORMAT_${value}`;\n    }\n\n    if (commandKey) {\n      const result = commandExecutor.executeCommand(commandKey, value, editorRef.current);\n\n      if (result.success) {\n        // Announce the formatting change to screen readers\n        const formatName = getFormatName(command, value);\n        const isActive = activeFormats.has(commandKey);\n        const action = isActive ? 'removed' : 'applied';\n        announceToScreenReader(`${formatName} ${action}`);\n\n        // Update content after successful command execution\n        setTimeout(() => {\n          if (editorRef.current) {\n            const newContent = editorRef.current.innerHTML;\n            setContent(newContent);\n            onChange?.(newContent);\n            updateFormatStates();\n          }\n        }, 0);\n      } else {\n        console.warn('Command execution failed:', result.error);\n        announceToScreenReader('Command failed');\n      }\n    }\n  }, [onChange, updateFormatStates, activeFormats, getFormatName, announceToScreenReader]);\n\n  // Handle keyboard shortcuts\n  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    // Only handle shortcuts when editor is focused\n    if (!isEditorFocused) return;\n\n    const { ctrlKey, metaKey, key, shiftKey } = event;\n    const isModifierPressed = ctrlKey || metaKey; // Support both Ctrl (Windows/Linux) and Cmd (Mac)\n\n    if (!isModifierPressed) return;\n\n    // Define keyboard shortcuts\n    const shortcuts: Record<string, { command: string; value?: string }> = {\n      'b': { command: 'bold' },\n      'i': { command: 'italic' },\n      'u': { command: 'underline' },\n      'k': { command: 'createLink' },\n      'z': { command: shiftKey ? 'redo' : 'undo' },\n      'y': { command: 'redo' },\n      '1': { command: 'formatBlock', value: 'H1' },\n      '2': { command: 'formatBlock', value: 'H2' },\n      '3': { command: 'formatBlock', value: 'H3' },\n      'l': { command: shiftKey ? 'insertOrderedList' : 'justifyLeft' },\n      'e': { command: 'justifyCenter' },\n      'r': { command: 'justifyRight' },\n      '\\\\': { command: 'removeFormat' }\n    };\n\n    const shortcut = shortcuts[key.toLowerCase()];\n    if (shortcut) {\n      event.preventDefault();\n      executeCommand(shortcut.command, shortcut.value, true);\n    }\n  }, [isEditorFocused, executeCommand]);\n\n  // Handle content changes from the editable area\n  const handleContentChange = useCallback((newContent: string) => {\n    setContent(newContent);\n    onChange?.(newContent);\n    // Update format states after content change\n    setTimeout(updateFormatStates, 0);\n  }, [onChange, updateFormatStates]);\n\n  // Handle selection changes from the editable area\n  const handleSelectionChange = useCallback((_selectionState: SelectionState) => {\n    // Update active formats based on current selection\n    updateFormatStates();\n  }, [updateFormatStates]);\n\n  const handleFocus = useCallback(() => {\n    setIsEditorFocused(true);\n    onFocus?.();\n    // Update format states when editor gains focus\n    setTimeout(updateFormatStates, 0);\n  }, [onFocus, updateFormatStates]);\n\n  const handleBlur = useCallback(() => {\n    setIsEditorFocused(false);\n    onBlur?.();\n  }, [onBlur]);\n\n  // Update format states when editor becomes focused\n  useEffect(() => {\n    if (isEditorFocused) {\n      updateFormatStates();\n    }\n  }, [isEditorFocused, updateFormatStates]);\n\n  // Set up image management when content changes\n  useEffect(() => {\n    setupImageManagement();\n    // Also ensure all links have proper attributes\n    ensureLinksHaveProperAttributes();\n  }, [content, setupImageManagement]);\n\n  // Ensure all links in the editor have target=\"_blank\" and rel=\"noopener noreferrer\"\n  const ensureLinksHaveProperAttributes = useCallback(() => {\n    if (!editorRef.current) return;\n\n    const links = editorRef.current.querySelectorAll('a[href]');\n    links.forEach((link) => {\n      const anchorElement = link as HTMLAnchorElement;\n      if (!anchorElement.hasAttribute('target')) {\n        anchorElement.setAttribute('target', '_blank');\n      }\n      if (!anchorElement.hasAttribute('rel')) {\n        anchorElement.setAttribute('rel', 'noopener noreferrer');\n      }\n    });\n  }, []);\n\n  // Handle clicks outside of images to deselect\n  useEffect(() => {\n    const handleDocumentClick = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('img.editor-image') && !target.closest('.image-manager')) {\n        setSelectedImage(null);\n      }\n    };\n\n    document.addEventListener('click', handleDocumentClick);\n    return () => document.removeEventListener('click', handleDocumentClick);\n  }, []);\n\n  // Set up drag and drop for the editor area\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    const editorElement = editorRef.current;\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault();\n      event.dataTransfer!.dropEffect = 'move';\n    };\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault();\n      const htmlData = event.dataTransfer?.getData('text/html');\n\n      if (htmlData && htmlData.includes('<img')) {\n        // Handle image repositioning\n        const selection = window.getSelection();\n        if (selection && selection.rangeCount > 0) {\n          const range = selection.getRangeAt(0);\n\n          // Create a temporary div to parse the HTML\n          const tempDiv = document.createElement('div');\n          tempDiv.innerHTML = htmlData;\n          const draggedImg = tempDiv.querySelector('img') as HTMLImageElement;\n\n          if (draggedImg) {\n            // Remove the original image if it exists\n            const existingImg = editorElement.querySelector(`img[src=\"${draggedImg.src}\"]`);\n            if (existingImg && existingImg !== draggedImg) {\n              existingImg.remove();\n            }\n\n            // Insert at new position\n            range.deleteContents();\n            range.insertNode(draggedImg);\n\n            // Update content\n            const newContent = editorElement.innerHTML;\n            setContent(newContent);\n            onChange?.(newContent);\n          }\n        }\n      }\n    };\n\n    editorElement.addEventListener('dragover', handleDragOver);\n    editorElement.addEventListener('drop', handleDrop);\n\n    return () => {\n      editorElement.removeEventListener('dragover', handleDragOver);\n      editorElement.removeEventListener('drop', handleDrop);\n    };\n  }, [onChange]);\n\n  return (\n    <div\n      className=\"wysiwyg-editor\"\n      onKeyDown={handleKeyDown}\n      role=\"application\"\n      aria-label=\"Rich text editor with keyboard shortcuts\"\n    >\n      <AdvancedToolbar\n        onCommand={executeCommand}\n        activeFormats={activeFormats}\n        canUndo={canUndo}\n        canRedo={canRedo}\n      />\n      <EditableArea\n        content={content}\n        placeholder={placeholder}\n        onContentChange={handleContentChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        editorRef={editorRef}\n        onSelectionChange={handleSelectionChange}\n        onLinkClick={handleLinkClick}\n      />\n      {/* Screen reader announcements */}\n      <div\n        ref={announcementRef}\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        role=\"status\"\n      />\n      {/* Keyboard shortcuts help (hidden but available to screen readers) */}\n      <div className=\"sr-only\" id=\"keyboard-shortcuts-help\">\n        Keyboard shortcuts: Ctrl+B for bold, Ctrl+I for italic, Ctrl+U for underline,\n        Ctrl+K for link, Ctrl+Z for undo, Ctrl+Y for redo, Ctrl+1/2/3 for headings,\n        Ctrl+L for left align, Ctrl+E for center align, Ctrl+R for right align,\n        Ctrl+Shift+L for numbered list, Ctrl+\\ for clear formatting\n      </div>\n\n      {/* File Upload Modal */}\n      <FileUploadModal\n        isOpen={isFileUploadModalOpen}\n        onClose={() => setIsFileUploadModalOpen(false)}\n        onFileSelect={uploadType === 'image' ? handleImageUpload : handleFileUpload}\n        accept={uploadType === 'image' ? 'image/*' : '*/*'}\n        maxSize={uploadType === 'image' ? 5 * 1024 * 1024 : 10 * 1024 * 1024} // 5MB for images, 10MB for files\n        title={uploadType === 'image' ? 'Upload Image' : 'Upload File'}\n        description={uploadType === 'image' ? 'Select an image to upload and crop' : 'Select a file to upload'}\n      />\n\n      {/* Image Crop Modal */}\n      <ImageCropModal\n        isOpen={isImageCropModalOpen}\n        imageUrl={selectedImageUrl}\n        onClose={() => {\n          setIsImageCropModalOpen(false);\n          setSelectedImageUrl('');\n        }}\n        onCropComplete={handleCroppedImage}\n      />\n\n      {/* Table Insert Modal */}\n      <TableInsertModal\n        isOpen={isTableModalOpen}\n        onClose={() => setIsTableModalOpen(false)}\n        onInsert={handleTableInsert}\n      />\n\n      {/* Special Character Modal */}\n      <SpecialCharModal\n        isOpen={isSpecialCharModalOpen}\n        onClose={() => setIsSpecialCharModalOpen(false)}\n        onInsert={handleSpecialCharInsert}\n      />\n\n      {/* URL Input Modal */}\n      <UrlInputModal\n        isOpen={isUrlInputModalOpen}\n        onClose={() => setIsUrlInputModalOpen(false)}\n        onSubmit={handleUrlSubmit}\n        title={urlInputType === 'create' ? 'Insert Link' : 'Edit Link'}\n        placeholder=\"https://example.com\"\n        initialValue={currentLinkUrl}\n        description={urlInputType === 'create' ? 'Enter the URL for the link' : 'Update the URL for this link'}\n      />\n\n      {/* Find Replace Modal */}\n      <FindReplaceModal\n        isOpen={isFindReplaceModalOpen}\n        onClose={() => setIsFindReplaceModalOpen(false)}\n        onFindReplace={handleFindReplace}\n      />\n\n      {/* Notification Modal */}\n      <NotificationModal\n        isOpen={isNotificationModalOpen}\n        onClose={() => setIsNotificationModalOpen(false)}\n        title={notificationData.title}\n        message={notificationData.message}\n        type={notificationData.type}\n      />\n\n      {/* Link Preview Popup */}\n      <LinkPreviewPopup\n        isOpen={isLinkPreviewOpen}\n        linkUrl={linkPreviewData.url}\n        linkText={linkPreviewData.text}\n        position={linkPreviewData.position}\n        onEdit={handleLinkPreviewEdit}\n        onRemove={handleLinkPreviewRemove}\n        onGoToLink={handleLinkPreviewGoTo}\n        onClose={handleLinkPreviewClose}\n      />\n\n      {/* Image Manager */}\n      {selectedImage && (\n        <ImageManager\n          imageElement={selectedImage}\n          onUpdate={handleImageUpdate}\n          onRemove={handleImageRemove}\n        />\n      )}\n    </div>\n  );\n};","import React from 'react';\nimport { ToolbarProps, ToolbarButton } from '../types';\n\nconst toolbarButtons: ToolbarButton[] = [\n  // Basic text formatting\n  { command: 'bold', icon: 'B', title: 'Bold' },\n  { command: 'italic', icon: 'I', title: 'Italic' },\n  { command: 'underline', icon: 'U', title: 'Underline' },\n  \n  // Heading formatting\n  { command: 'formatBlock', value: 'H1', icon: 'H1', title: 'Heading 1' },\n  { command: 'formatBlock', value: 'H2', icon: 'H2', title: 'Heading 2' },\n  { command: 'formatBlock', value: 'H3', icon: 'H3', title: 'Heading 3' },\n  \n  // List formatting\n  { command: 'insertUnorderedList', icon: '•', title: 'Bullet List' },\n  { command: 'insertOrderedList', icon: '1.', title: 'Numbered List' },\n  \n  // Text alignment\n  { command: 'justifyLeft', icon: '⬅', title: 'Align Left' },\n  { command: 'justifyCenter', icon: '⬌', title: 'Align Center' },\n  { command: 'justifyRight', icon: '➡', title: 'Align Right' },\n  \n  // Link management\n  { command: 'createLink', icon: '🔗', title: 'Insert Link' },\n  { command: 'editLink', icon: '✏️🔗', title: 'Edit Link' },\n  { command: 'unlink', icon: '🔗✕', title: 'Remove Link' },\n  \n  // Media insertion\n  { command: 'insertImage', icon: '🖼️', title: 'Insert Image' },\n  { command: 'uploadFile', icon: '📎', title: 'Upload File' },\n  \n  // History management\n  { command: 'undo', icon: '↶', title: 'Undo' },\n  { command: 'redo', icon: '↷', title: 'Redo' },\n  \n  // Format clearing\n  { command: 'removeFormat', icon: '✕', title: 'Clear Formatting' }\n];\n\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  onCommand,\n  activeFormats,\n  canUndo,\n  canRedo\n}) => {\n  const handleButtonClick = (button: ToolbarButton) => {\n    onCommand(button.command, button.value);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, button: ToolbarButton) => {\n    // Handle keyboard activation (Enter or Space)\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleButtonClick(button);\n    }\n  };\n\n  const isButtonActive = (command: string, value?: string): boolean => {\n    // Map toolbar commands to format keys used by command system\n    const formatMap: Record<string, string> = {\n      'bold': 'BOLD',\n      'italic': 'ITALIC',\n      'underline': 'UNDERLINE',\n      'insertUnorderedList': 'INSERT_UNORDERED_LIST',\n      'insertOrderedList': 'INSERT_ORDERED_LIST',\n      'justifyLeft': 'JUSTIFY_LEFT',\n      'justifyCenter': 'JUSTIFY_CENTER',\n      'justifyRight': 'JUSTIFY_RIGHT',\n      'createLink': 'CREATE_LINK',\n      'editLink': 'EDIT_LINK',\n      'unlink': 'UNLINK'\n    };\n    \n    // Handle formatBlock commands (headings)\n    if (command === 'formatBlock' && value) {\n      const formatKey = `FORMAT_${value}`;\n      return activeFormats.has(formatKey);\n    }\n    \n    const formatKey = formatMap[command];\n    return formatKey ? activeFormats.has(formatKey) : false;\n  };\n\n  const isButtonDisabled = (command: string): boolean => {\n    if (command === 'undo') return !canUndo;\n    if (command === 'redo') return !canRedo;\n    return false;\n  };\n\n  const getButtonAriaLabel = (button: ToolbarButton): string => {\n    const isActive = isButtonActive(button.command, button.value);\n    const isDisabled = isButtonDisabled(button.command);\n    \n    let label = button.title;\n    \n    // Add keyboard shortcut information to aria-label\n    const shortcuts: Record<string, string> = {\n      'bold': 'Ctrl+B',\n      'italic': 'Ctrl+I',\n      'underline': 'Ctrl+U',\n      'createLink': 'Ctrl+K',\n      'undo': 'Ctrl+Z',\n      'redo': 'Ctrl+Y',\n      'removeFormat': 'Ctrl+\\\\'\n    };\n    \n    // Add heading shortcuts\n    if (button.command === 'formatBlock' && button.value) {\n      const headingNum = button.value.replace('H', '');\n      shortcuts[`${button.command}-${button.value}`] = `Ctrl+${headingNum}`;\n    }\n    \n    // Add alignment shortcuts\n    if (button.command === 'justifyLeft') shortcuts[button.command] = 'Ctrl+L';\n    if (button.command === 'justifyCenter') shortcuts[button.command] = 'Ctrl+E';\n    if (button.command === 'justifyRight') shortcuts[button.command] = 'Ctrl+R';\n    if (button.command === 'insertOrderedList') shortcuts[button.command] = 'Ctrl+Shift+L';\n    \n    const shortcutKey = button.value ? `${button.command}-${button.value}` : button.command;\n    const shortcut = shortcuts[shortcutKey];\n    \n    if (shortcut) {\n      label += `, keyboard shortcut ${shortcut}`;\n    }\n    \n    if (isDisabled) {\n      label += ', disabled';\n    } else if (isActive) {\n      label += ', currently active';\n    }\n    \n    return label;\n  };\n\n  const getButtonId = (button: ToolbarButton, index: number): string => {\n    // Create unique ID for each button\n    const baseId = button.value ? `${button.command}-${button.value}` : button.command;\n    return `toolbar-${baseId}-${index}`;\n  };\n\n  return (\n    <div \n      className=\"toolbar\" \n      role=\"toolbar\" \n      aria-label=\"Text formatting toolbar\"\n    >\n      {toolbarButtons.map((button, index) => {\n        const isActive = isButtonActive(button.command, button.value);\n        const isDisabled = isButtonDisabled(button.command);\n        \n        return (\n          <button\n            key={getButtonId(button, index)}\n            id={getButtonId(button, index)}\n            className={`toolbar-button ${isActive ? 'active' : ''}`}\n            title={button.title}\n            aria-label={getButtonAriaLabel(button)}\n            aria-pressed={isActive}\n            disabled={isDisabled}\n            tabIndex={isDisabled ? -1 : 0}\n            onClick={() => handleButtonClick(button)}\n            onKeyDown={(event) => handleKeyDown(event, button)}\n            onMouseDown={(event) => {\n              // Prevent focus loss from editor when clicking toolbar buttons\n              event.preventDefault();\n            }}\n          >\n            <span aria-hidden=\"true\">{button.icon}</span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};","import React from 'react';\n\n// Main WYSIWYG Editor Props\nexport interface WYSIWYGEditorProps {\n  initialContent?: string;\n  placeholder?: string;\n  onChange?: (content: string) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\n// Toolbar Component Props\nexport interface ToolbarProps {\n  onCommand: (command: string, value?: string) => void;\n  activeFormats: Set<string>;\n  canUndo: boolean;\n  canRedo: boolean;\n}\n\n// Toolbar Button Configuration\nexport interface ToolbarButton {\n  command: string;\n  value?: string;\n  icon: string;\n  title: string;\n}\n\n// EditableArea Component Props\nexport interface EditableAreaProps {\n  content: string;\n  placeholder: string;\n  onContentChange: (content: string) => void;\n  onFocus: () => void;\n  onBlur: () => void;\n  editorRef: React.RefObject<HTMLDivElement>;\n  onSelectionChange?: (selectionState: SelectionState) => void;\n  onLinkClick?: (event: MouseEvent, linkElement: HTMLAnchorElement) => void;\n}\n\n// Selection State Management\nexport interface SelectionState {\n  range: Range | null;\n  isCollapsed: boolean;\n  activeFormats: Set<string>;\n  currentBlockFormat: string;\n}\n\n// Editor Command Configuration\nexport interface EditorCommand {\n  type: 'execCommand' | 'custom';\n  command: string;\n  value?: string;\n  requiresSelection?: boolean;\n}\n\n// Command Constants\nexport const COMMANDS = {\n  BOLD: { type: 'execCommand' as const, command: 'bold' },\n  ITALIC: { type: 'execCommand' as const, command: 'italic' },\n  UNDERLINE: { type: 'execCommand' as const, command: 'underline' },\n  CREATE_LINK: { type: 'execCommand' as const, command: 'createLink', requiresSelection: true },\n  FORMAT_H1: { type: 'execCommand' as const, command: 'formatBlock', value: 'H1' },\n  FORMAT_H2: { type: 'execCommand' as const, command: 'formatBlock', value: 'H2' },\n  FORMAT_H3: { type: 'execCommand' as const, command: 'formatBlock', value: 'H3' },\n  INSERT_UNORDERED_LIST: { type: 'execCommand' as const, command: 'insertUnorderedList' },\n  INSERT_ORDERED_LIST: { type: 'execCommand' as const, command: 'insertOrderedList' },\n  JUSTIFY_LEFT: { type: 'execCommand' as const, command: 'justifyLeft' },\n  JUSTIFY_CENTER: { type: 'execCommand' as const, command: 'justifyCenter' },\n  JUSTIFY_RIGHT: { type: 'execCommand' as const, command: 'justifyRight' },\n  UNDO: { type: 'execCommand' as const, command: 'undo' },\n  REDO: { type: 'execCommand' as const, command: 'redo' },\n  REMOVE_FORMAT: { type: 'execCommand' as const, command: 'removeFormat' }\n};\n\n// Content Sanitization Configuration\nexport interface SanitizationConfig {\n  allowedTags: string[];\n  allowedAttributes: Record<string, string[]>;\n}\n\nexport const DEFAULT_SANITIZATION_CONFIG: SanitizationConfig = {\n  allowedTags: ['p', 'br', 'strong', 'em', 'u', 'h1', 'h2', 'h3', 'ul', 'ol', 'li', 'a'],\n  allowedAttributes: {\n    'a': ['href', 'title'],\n    '*': ['style'] // Limited style attributes only\n  }\n};"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","React","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","error","format","_len2","args","_key2","printWarning","level","ReactDebugCurrentFrame","stack","argsWithFormat","item","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_MODULE_REFERENCE","isValidElementType","type","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","context","provider","outerName","lazyComponent","payload","init","assign","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","disableLogs","props","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","name","source","ownerFn","x","match","reentry","componentFrameCache","PossiblyWeakMap","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","previousDispatcher","Fake","sample","sampleLines","controlLines","s","_frame","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","prototype","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","checkPropTypes","typeSpecs","values","location","componentName","has","typeSpecName","error$1","err","ex","isArrayImpl","isArray","typeName","value","hasToStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","ReactCurrentOwner","RESERVED_PROPS","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","config","getter","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","key","ref","jsxDEV","maybeKey","propName","defaultProps","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","validateExplicitKey","currentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","iterator","step","validatePropTypes","propTypes","_name","validateFragmentProps","fragment","keys","didWarnAboutKeySpread","jsxWithValidation","isStaticChildren","validType","sourceInfo","typeString","children","beforeExample","afterExample","jsxWithValidationStatic","jsxWithValidationDynamic","jsx","jsxs","reactJsxRuntime_development","jsxRuntimeModule","require$$1","toolbarGroups","colorPalette","AdvancedToolbar","onCommand","activeFormats","canUndo","canRedo","openDropdown","setOpenDropdown","useState","openColorPicker","setOpenColorPicker","dropdownRefs","useRef","useEffect","handleClickOutside","event","target","handleButtonClick","button","handleDropdownSelect","command","handleColorSelect","color","isButtonActive","formatMap","formatKey","isButtonDisabled","renderButton","groupName","index","isActive","isDisabled","buttonId","el","_a","option","group","getCurrentSelection","selection","range","getActiveFormats","currentBlockFormat","getCurrentBlockFormat","restoreSelection","selectionState","saveSelection","formatBlock","tagName","isSelectionInEditor","editorElement","focusEditor","focusEditorWithSelection","DEFAULT_SANITIZATION_CONFIG","ContentSanitizer","__publicField","html","tempDiv","cleaned","sanitized","textContent","textNode","allowedAttrs","attributes","attr","attrName","sanitizedHref","sanitizedStyle","url","trimmedUrl","urlObj","urlWithProtocol","style","dangerousPatterns","pattern","allowedStyleProperties","styleDeclarations","decl","sanitizedDeclarations","declaration","property","normalized","contentSanitizer","EditableArea","content","placeholder","onContentChange","onFocus","onBlur","editorRef","onSelectionChange","onLinkClick","isFocused","setIsFocused","lastSelection","setLastSelection","handleSelectionChange","useCallback","currentSelection","restoreFocus","handleInput","newContent","processedContent","processContent","rawContent","processed","handleFocus","_event","handleBlur","handlePaste","clipboardData","pastedContent","plainText","sanitizedContent","insertContentAtCursor","handleClick","linkElement","handleKeyDown","handleEnterInList","currentElement","listItem","list","_b","exitList","newParagraph","shouldShowPlaceholder","centerAspectCrop","mediaWidth","mediaHeight","aspect","centerCrop","makeAspectCrop","ImageCropModal","isOpen","imageUrl","onClose","onCropComplete","crop","setCrop","completedCrop","setCompletedCrop","setAspect","isProcessing","setIsProcessing","imgRef","canvasRef","onImageLoad","width","height","getCroppedImg","image","canvas","ctx","scaleX","scaleY","resolve","blob","handleCropComplete","croppedImageUrl","handleAspectChange","newAspect","ReactCrop","_","percentCrop","FileUploadModal","onFileSelect","accept","maxSize","title","description","isDragOver","setIsDragOver","setError","fileInputRef","validateFile","file","acceptedType","baseType","handleFileSelect","validationError","handleFileInputChange","handleDragOver","handleDragLeave","handleDrop","files","handleBrowseClick","formatFileSize","bytes","sizes","getAcceptedTypesDisplay","ImageManager","imageElement","onUpdate","onRemove","isVisible","setIsVisible","position","setPosition","imageSize","setImageSize","alignment","setAlignment","_isResizing","_setIsResizing","managerRef","rect","editorRect","computedStyle","display","marginLeft","marginRight","handleAlignment","newAlignment","handleResize","newWidth","aspectRatio","newHeight","handleFloat","floatDirection","handleAltText","currentAlt","newAlt","handleRemove","handleImageClick","handleDocumentClick","TableInsertModal","onInsert","rows","setRows","cols","setCols","hasHeaders","setHasHeaders","previewRows","previewCols","handleInsert","rowIndex","colIndex","specialCharCategories","SpecialCharModal","activeCategory","setActiveCategory","searchTerm","setSearchTerm","handleCharClick","char","filteredChars","category","UrlInputModal","onSubmit","initialValue","setUrl","handleSubmit","FindReplaceModal","onFindReplace","findText","setFindText","replaceText","setReplaceText","NotificationModal","message","autoClose","autoCloseDelay","timer","typeStyles","LinkPreviewPopup","linkUrl","_linkText","onEdit","onGoToLink","Fragment","COMMANDS","_CommandExecutor","commandKey","_savedSelection","commandValue","normalizedUrl","link","newUrl","walker","currentLink","options","img","container","beforeText","afterText","_c","beforeP","afterP","imgP","parent","float","input","reader","dataUrl","fileUrl","blobUrl","fileName","fileType","fileIcon","tableConfig","table","tbody","row","j","cell","firstCell","isSourceMode","sourceContent","htmlContent","editorContainer","isFullscreen","printWindow","currentSpellCheck","CommandExecutor","commandExecutor","WYSIWYGEditor","initialContent","onChange","setContent","isEditorFocused","setIsEditorFocused","setActiveFormats","setCanUndo","setCanRedo","isImageCropModalOpen","setIsImageCropModalOpen","isFileUploadModalOpen","setIsFileUploadModalOpen","selectedImageUrl","setSelectedImageUrl","uploadType","setUploadType","selectedImage","setSelectedImage","_imageManagers","_setImageManagers","isTableModalOpen","setIsTableModalOpen","isSpecialCharModalOpen","setIsSpecialCharModalOpen","isUrlInputModalOpen","setIsUrlInputModalOpen","urlInputType","setUrlInputType","currentLinkUrl","setCurrentLinkUrl","isFindReplaceModalOpen","setIsFindReplaceModalOpen","isNotificationModalOpen","setIsNotificationModalOpen","notificationData","setNotificationData","savedSelection","setSavedSelection","isLinkPreviewOpen","setIsLinkPreviewOpen","linkPreviewData","setLinkPreviewData","announcementRef","updateFormatStates","formats","announceToScreenReader","getFormatName","formatNames","handleImageUpload","handleCroppedImage","result","setupImageManagement","images","imageElements","handleImageDragStart","handleImageDragEnd","handleImageUpdate","handleImageRemove","handleFileUpload","getFileIcon","handleTableInsert","handleSpecialCharInsert","handleUrlSubmit","showNotification","handleFindReplace","currentContent","updatedContent","matches","handleLinkClick","handleLinkPreviewEdit","handleLinkPreviewRemove","handleLinkPreviewGoTo","handleLinkPreviewClose","executeCommand","_fromKeyboard","savedRange","findLinkFromNode","endLink","allLinks","formatName","action","ctrlKey","metaKey","shiftKey","shortcut","handleContentChange","_selectionState","ensureLinksHaveProperAttributes","anchorElement","htmlData","draggedImg","existingImg","toolbarButtons","Toolbar","getButtonAriaLabel","label","shortcuts","headingNum","shortcutKey","getButtonId"],"mappings":"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","x_google_ignoreList":[0,1,2]}