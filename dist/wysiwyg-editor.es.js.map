{"version":3,"file":"wysiwyg-editor.es.js","sources":["../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/jsx-runtime.js","../src/components/AdvancedToolbar.tsx","../src/utils/selectionUtils.ts","../src/utils/contentSanitizer.ts","../src/components/EditableArea.tsx","../src/components/ImageUploadCropModal.tsx","../src/components/FileUploadModal.tsx","../src/components/ImageManager.tsx","../src/components/TableInsertModal.tsx","../src/components/SpecialCharModal.tsx","../src/components/UrlInputModal.tsx","../src/components/FindReplaceModal.tsx","../src/components/NotificationModal.tsx","../src/components/LinkPreviewPopup.tsx","../src/utils/commandSystem.ts","../src/utils/toolbarConfigResolver.ts","../src/components/WYSIWYGEditor.tsx","../src/components/Toolbar.tsx","../src/types/index.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import React, { useState, useRef, useEffect, useMemo, useCallback, memo } from 'react';\nimport { ToolbarProps, ToolbarButtonType } from '../types';\n\ninterface ToolbarGroup {\n  name: string;\n  buttons: ToolbarButton[];\n}\n\ninterface ToolbarButton {\n  command: string;\n  value?: string;\n  icon: string;\n  title: string;\n  type?: 'button' | 'dropdown' | 'color' | 'separator';\n  options?: { value: string; label: string; icon?: string }[];\n}\n\nconst toolbarGroups: ToolbarGroup[] = [\n  {\n    name: 'clipboard',\n    buttons: [\n      { command: 'undo', icon: '↶', title: 'Undo' },\n      { command: 'redo', icon: '↷', title: 'Redo' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'editing',\n    buttons: [\n      { command: 'findReplace', icon: '🔍', title: 'Find & Replace' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'basicstyles',\n    buttons: [\n      { command: 'bold', icon: 'B', title: 'Bold' },\n      { command: 'italic', icon: 'I', title: 'Italic' },\n      { command: 'underline', icon: 'U', title: 'Underline' },\n      { command: 'strikethrough', icon: 'S̶', title: 'Strikethrough' },\n      { command: 'subscript', icon: 'X₂', title: 'Subscript' },\n      { command: 'superscript', icon: 'X²', title: 'Superscript' },\n      { command: 'removeFormat', icon: '🧹', title: 'Clear Formatting' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'paragraph',\n    buttons: [\n      // Individual heading buttons for test compatibility\n      { command: 'formatBlock', value: 'H1', icon: 'H1', title: 'Heading 1' },\n      { command: 'formatBlock', value: 'H2', icon: 'H2', title: 'Heading 2' },\n      { command: 'formatBlock', value: 'H3', icon: 'H3', title: 'Heading 3' },\n      {\n        command: 'formatBlock',\n        icon: '¶',\n        title: 'Format',\n        type: 'dropdown',\n        options: [\n          { value: 'P', label: 'Normal', icon: '¶' },\n          { value: 'H1', label: 'Heading 1', icon: 'H1' },\n          { value: 'H2', label: 'Heading 2', icon: 'H2' },\n          { value: 'H3', label: 'Heading 3', icon: 'H3' },\n          { value: 'H4', label: 'Heading 4', icon: 'H4' },\n          { value: 'H5', label: 'Heading 5', icon: 'H5' },\n          { value: 'H6', label: 'Heading 6', icon: 'H6' },\n          { value: 'BLOCKQUOTE', label: 'Quote', icon: '\"' },\n          { value: 'PRE', label: 'Code Block', icon: '</>' }\n        ]\n      },\n      {\n        command: 'fontSize',\n        icon: '🔤',\n        title: 'Font Size',\n        type: 'dropdown',\n        options: [\n          { value: '1', label: '8pt' },\n          { value: '2', label: '10pt' },\n          { value: '3', label: '12pt' },\n          { value: '4', label: '14pt' },\n          { value: '5', label: '18pt' },\n          { value: '6', label: '24pt' },\n          { value: '7', label: '36pt' }\n        ]\n      },\n      {\n        command: 'fontName',\n        icon: 'Aa',\n        title: 'Font Family',\n        type: 'dropdown',\n        options: [\n          { value: 'Arial', label: 'Arial' },\n          { value: 'Georgia', label: 'Georgia' },\n          { value: 'Times New Roman', label: 'Times New Roman' },\n          { value: 'Courier New', label: 'Courier New' },\n          { value: 'Verdana', label: 'Verdana' },\n          { value: 'Helvetica', label: 'Helvetica' }\n        ]\n      },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'colors',\n    buttons: [\n      { command: 'fontColor', icon: 'A', title: 'Text Color', type: 'color' },\n      { command: 'backgroundColor', icon: '🎨', title: 'Background Color', type: 'color' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'list',\n    buttons: [\n      { command: 'insertUnorderedList', icon: '•', title: 'Bullet List' },\n      { command: 'insertOrderedList', icon: '1.', title: 'Numbered List' },\n      { command: 'outdent', icon: '⇤', title: 'Decrease Indent' },\n      { command: 'indent', icon: '⇥', title: 'Increase Indent' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'align',\n    buttons: [\n      { command: 'justifyLeft', icon: '⬅', title: 'Align Left' },\n      { command: 'justifyCenter', icon: '⬌', title: 'Align Center' },\n      { command: 'justifyRight', icon: '➡', title: 'Align Right' },\n      { command: 'justifyFull', icon: '⬌', title: 'Justify' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'links',\n    buttons: [\n      { command: 'createLink', icon: '🔗', title: 'Insert Link' },\n      { command: 'unlink', icon: '🔗✕', title: 'Remove Link' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'insert',\n    buttons: [\n      { command: 'insertImage', icon: '🖼️', title: 'Insert Image' },\n      { command: 'insertTable', icon: '⊞', title: 'Insert Table' },\n      { command: 'insertHorizontalRule', icon: '―', title: 'Horizontal Rule' },\n      { command: 'insertSpecialChar', icon: 'Ω', title: 'Special Characters' },\n      { command: 'uploadFile', icon: '📎', title: 'Upload File' },\n      { type: 'separator', command: '', icon: '', title: '' }\n    ]\n  },\n  {\n    name: 'tools',\n    buttons: [\n      { command: 'sourceCode', icon: '</>', title: 'Source Code' },\n      { command: 'fullscreen', icon: '⛶', title: 'Fullscreen' },\n      { command: 'print', icon: '🖨️', title: 'Print' },\n      { command: 'spellCheck', icon: '✓', title: 'Spell Check' }\n    ]\n  }\n];\n\nconst colorPalette = [\n  // Black / Grayscale\n  '#ffffff', '#e6e6e6', '#999999', '#4d4d4d', '#1a1a1a', '#000000',\n\n  // Red\n  '#ffebee', '#ef9a9a', '#ef5350', '#f44336', '#d32f2f', '#b71c1c',\n\n  // Blue\n  '#e3f2fd', '#90caf9', '#42a5f5', '#2196f3', '#1976d2', '#0d47a1',\n\n  // Green\n  '#e8f5e9', '#a5d6a7', '#66bb6a', '#4caf50', '#388e3c', '#1b5e20',\n\n  // Orange\n  '#fff3e0', '#ffcc80', '#ffa726', '#ff9800', '#f57c00', '#e65100',\n\n  // Grey\n  '#fafafa', '#eeeeee', '#bdbdbd', '#9e9e9e', '#616161', '#212121'\n];\n\n/**\n * Memoized toolbar button component for performance optimization\n */\nconst MemoizedToolbarButton = memo<{\n  button: ToolbarButton;\n  groupName: string;\n  index: number;\n  isActive: boolean;\n  isDisabled: boolean;\n  openDropdown: string | null;\n  openColorPicker: string | null;\n  onButtonClick: (button: ToolbarButton) => void;\n  onDropdownSelect: (command: string, value: string) => void;\n  onColorSelect: (command: string, color: string) => void;\n  setOpenColorPicker: (value: string | null) => void;\n  dropdownRefs: React.MutableRefObject<{ [key: string]: HTMLDivElement | null }>;\n}>(({\n  button,\n  groupName,\n  index,\n  isActive,\n  isDisabled,\n  openDropdown,\n  openColorPicker,\n  onButtonClick,\n  onDropdownSelect,\n  onColorSelect,\n  setOpenColorPicker,\n  dropdownRefs\n}) => {\n  if (button.type === 'separator') {\n    return <div key={`${groupName}-sep-${index}`} className=\"toolbar-separator\" />;\n  }\n\n  const buttonId = `${groupName}-${button.command}-${index}`;\n\n  return (\n    <div key={buttonId} className=\"relative\">\n      <button\n        className={`toolbar-button ${isActive ? 'active' : ''} ${button.type === 'dropdown' || button.type === 'color' ? 'dropdown' : ''\n          }`}\n        title={button.title}\n        aria-label={button.title}\n        disabled={isDisabled}\n        onClick={() => onButtonClick(button)}\n        onMouseDown={(e) => e.preventDefault()}\n      >\n        <span className=\"button-icon\" aria-hidden=\"true\">\n          {button.icon}\n        </span>\n        {(button.type === 'dropdown' || button.type === 'color') && (\n          <span className=\"dropdown-arrow\">▼</span>\n        )}\n      </button>\n\n      {/* Dropdown Menu */}\n      {button.type === 'dropdown' && openDropdown === button.command && (\n        <div\n          ref={(el) => (dropdownRefs.current[button.command] = el)}\n          className=\"toolbar-dropdown\"\n        >\n          {button.options?.map((option) => (\n            <button\n              key={option.value}\n              className=\"dropdown-item\"\n              onClick={() => onDropdownSelect(button.command, option.value)}\n            >\n              {option.icon && <span className=\"option-icon\">{option.icon}</span>}\n              <span className=\"option-label\">{option.label}</span>\n            </button>\n          ))}\n        </div>\n      )}\n\n      {/* Color Picker */}\n      {button.type === 'color' && openColorPicker === button.command && (\n        <div\n          ref={(el) => (dropdownRefs.current[button.command] = el)}\n          className=\"toolbar-color-picker\"\n        >\n          <div className=\"color-picker-header\">\n            <h4 className=\"color-picker-title\">\n              {button.command === 'fontColor' ? 'Text Color' : 'Background Color'}\n            </h4>\n            <button\n              className=\"color-picker-close\"\n              onClick={() => setOpenColorPicker(null)}\n              aria-label=\"Close color picker\"\n            >\n              ×\n            </button>\n          </div>\n\n          <div className=\"color-grid\">\n            {colorPalette.map((color) => (\n              <button\n                key={color}\n                className=\"color-swatch\"\n                style={{ backgroundColor: color }}\n                onClick={() => onColorSelect(button.command, color)}\n                title={color}\n                aria-label={`Select color ${color}`}\n              />\n            ))}\n          </div>\n\n          <div className=\"color-input-section\">\n            <input\n              type=\"color\"\n              className=\"color-input\"\n              onChange={(e) => onColorSelect(button.command, e.target.value)}\n              title=\"Choose custom color\"\n            />\n            <span className=\"color-input-label\">Custom Color</span>\n            <button\n              className=\"color-remove-btn\"\n              onClick={() => onColorSelect(button.command, button.command === 'fontColor' ? 'inherit' : 'transparent')}\n              title=\"Remove color\"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\n// Mapping from ToolbarButtonType to ToolbarButton configuration\nconst buttonTypeToConfig: Record<ToolbarButtonType, ToolbarButton> = {\n  // Basic formatting\n  bold: { command: 'bold', icon: 'B', title: 'Bold' },\n  italic: { command: 'italic', icon: 'I', title: 'Italic' },\n  underline: { command: 'underline', icon: 'U', title: 'Underline' },\n  strikethrough: { command: 'strikethrough', icon: 'S̶', title: 'Strikethrough' },\n  subscript: { command: 'subscript', icon: 'X₂', title: 'Subscript' },\n  superscript: { command: 'superscript', icon: 'X²', title: 'Superscript' },\n\n  // Headings\n  h1: { command: 'formatBlock', value: 'H1', icon: 'H1', title: 'Heading 1' },\n  h2: { command: 'formatBlock', value: 'H2', icon: 'H2', title: 'Heading 2' },\n  h3: { command: 'formatBlock', value: 'H3', icon: 'H3', title: 'Heading 3' },\n  h4: { command: 'formatBlock', value: 'H4', icon: 'H4', title: 'Heading 4' },\n  h5: { command: 'formatBlock', value: 'H5', icon: 'H5', title: 'Heading 5' },\n  h6: { command: 'formatBlock', value: 'H6', icon: 'H6', title: 'Heading 6' },\n\n  // Lists\n  bulletList: { command: 'insertUnorderedList', icon: '•', title: 'Bullet List' },\n  numberedList: { command: 'insertOrderedList', icon: '1.', title: 'Numbered List' },\n  indent: { command: 'indent', icon: '⇥', title: 'Increase Indent' },\n  outdent: { command: 'outdent', icon: '⇤', title: 'Decrease Indent' },\n\n  // Alignment\n  alignLeft: { command: 'justifyLeft', icon: '⬅', title: 'Align Left' },\n  alignCenter: { command: 'justifyCenter', icon: '⬌', title: 'Align Center' },\n  alignRight: { command: 'justifyRight', icon: '➡', title: 'Align Right' },\n  alignJustify: { command: 'justifyFull', icon: '⬌', title: 'Justify' },\n\n  // Media\n  image: { command: 'insertImage', icon: '🖼️', title: 'Insert Image' },\n  file: { command: 'uploadFile', icon: '📎', title: 'Upload File' },\n  table: { command: 'insertTable', icon: '⊞', title: 'Insert Table' },\n\n  // Links\n  link: { command: 'createLink', icon: '🔗', title: 'Insert Link' },\n  unlink: { command: 'unlink', icon: '🔗✕', title: 'Remove Link' },\n\n  // Advanced formatting\n  fontColor: { command: 'fontColor', icon: 'A', title: 'Text Color', type: 'color' },\n  backgroundColor: { command: 'backgroundColor', icon: '🎨', title: 'Background Color', type: 'color' },\n  fontSize: {\n    command: 'fontSize',\n    icon: '🔤',\n    title: 'Font Size',\n    type: 'dropdown',\n    options: [\n      { value: '1', label: '8pt' },\n      { value: '2', label: '10pt' },\n      { value: '3', label: '12pt' },\n      { value: '4', label: '14pt' },\n      { value: '5', label: '18pt' },\n      { value: '6', label: '24pt' },\n      { value: '7', label: '36pt' }\n    ]\n  },\n  fontFamily: {\n    command: 'fontName',\n    icon: 'Aa',\n    title: 'Font Family',\n    type: 'dropdown',\n    options: [\n      { value: 'Arial', label: 'Arial' },\n      { value: 'Georgia', label: 'Georgia' },\n      { value: 'Times New Roman', label: 'Times New Roman' },\n      { value: 'Courier New', label: 'Courier New' },\n      { value: 'Verdana', label: 'Verdana' },\n      { value: 'Helvetica', label: 'Helvetica' }\n    ]\n  },\n  specialChar: { command: 'insertSpecialChar', icon: 'Ω', title: 'Special Characters' },\n  horizontalRule: { command: 'insertHorizontalRule', icon: '―', title: 'Horizontal Rule' },\n\n  // Tools\n  findReplace: { command: 'findReplace', icon: '🔍', title: 'Find & Replace' },\n  sourceCode: { command: 'sourceCode', icon: '</>', title: 'Source Code' },\n  fullscreen: { command: 'fullscreen', icon: '⛶', title: 'Fullscreen' },\n  print: { command: 'print', icon: '🖨️', title: 'Print' },\n  undo: { command: 'undo', icon: '↶', title: 'Undo' },\n  redo: { command: 'redo', icon: '↷', title: 'Redo' },\n  removeFormat: { command: 'removeFormat', icon: '🧹', title: 'Clear Formatting' }\n};\n\nexport const AdvancedToolbar: React.FC<ToolbarProps> = ({\n  onCommand,\n  activeFormats,\n  canUndo,\n  canRedo,\n  toolbarConfig,\n  showConfigDropdown = false,\n  configOptions,\n  selectedConfigKey,\n  onConfigChange\n}) => {\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [openColorPicker, setOpenColorPicker] = useState<string | null>(null);\n  const dropdownRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});\n\n  // Convert resolved toolbar config to toolbar groups, or use default groups\n  const effectiveToolbarGroups = useMemo(() => {\n    if (toolbarConfig) {\n      // Use the resolved configuration groups and respect the order\n      // The buttons in groups are already filtered by the resolver, so no need to filter again\n      return toolbarConfig.groups.map(group => ({\n        name: group.name,\n        buttons: group.buttons\n          .map(buttonType => buttonTypeToConfig[buttonType])\n          .filter(Boolean) // Remove any undefined buttons\n      })).filter(group => group.buttons.length > 0); // Remove empty groups\n    }\n    return toolbarGroups;\n  }, [toolbarConfig]);\n\n  // Memoized callback functions for performance\n  const handleButtonClick = useCallback((button: ToolbarButton) => {\n    if (button.type === 'dropdown') {\n      setOpenDropdown(openDropdown === button.command ? null : button.command);\n      setOpenColorPicker(null);\n    } else if (button.type === 'color') {\n      setOpenColorPicker(openColorPicker === button.command ? null : button.command);\n      setOpenDropdown(null);\n    } else {\n      onCommand(button.command, button.value);\n      setOpenDropdown(null);\n      setOpenColorPicker(null);\n    }\n  }, [onCommand, openDropdown, openColorPicker]);\n\n  const handleDropdownSelect = useCallback((command: string, value: string) => {\n    onCommand(command, value);\n    setOpenDropdown(null);\n  }, [onCommand]);\n\n  const handleColorSelect = useCallback((command: string, color: string) => {\n    onCommand(command, color);\n    setOpenColorPicker(null);\n  }, [onCommand]);\n\n  // Memoized button state calculations\n  const isButtonActive = useCallback((command: string, value?: string): boolean => {\n    const formatMap: Record<string, string> = {\n      'bold': 'BOLD',\n      'italic': 'ITALIC',\n      'underline': 'UNDERLINE',\n      'strikethrough': 'STRIKETHROUGH',\n      'subscript': 'SUBSCRIPT',\n      'superscript': 'SUPERSCRIPT',\n      'insertUnorderedList': 'INSERT_UNORDERED_LIST',\n      'insertOrderedList': 'INSERT_ORDERED_LIST',\n      'justifyLeft': 'JUSTIFY_LEFT',\n      'justifyCenter': 'JUSTIFY_CENTER',\n      'justifyRight': 'JUSTIFY_RIGHT',\n      'justifyFull': 'JUSTIFY_FULL',\n      'createLink': 'CREATE_LINK'\n    };\n\n    if (command === 'formatBlock' && value) {\n      const formatKey = `FORMAT_${value}`;\n      return activeFormats.has(formatKey);\n    }\n\n    const formatKey = formatMap[command];\n    return formatKey ? activeFormats.has(formatKey) : false;\n  }, [activeFormats]);\n\n  const isButtonDisabled = useCallback((command: string): boolean => {\n    if (command === 'undo') return !canUndo;\n    if (command === 'redo') return !canRedo;\n    return false;\n  }, [canUndo, canRedo]);\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n\n      // Check if click is outside all dropdown-related elements\n      if (!target.closest('.toolbar-dropdown') &&\n        !target.closest('.toolbar-color-picker') &&\n        !target.closest('.toolbar-button')) {\n        setOpenDropdown(null);\n        setOpenColorPicker(null);\n      }\n    };\n\n    // Only add the listener if there's an open dropdown\n    if (openDropdown || openColorPicker) {\n      // Use a small delay to ensure the button click has been processed\n      const timeoutId = setTimeout(() => {\n        document.addEventListener('click', handleClickOutside);\n      }, 0);\n\n      return () => {\n        clearTimeout(timeoutId);\n        document.removeEventListener('click', handleClickOutside);\n      };\n    }\n  }, [openDropdown, openColorPicker]);\n\n  // Memoized render function for buttons with lazy rendering\n  const renderButton = useCallback((button: ToolbarButton, groupName: string, index: number) => {\n    // Early return for separators (no need to compute states)\n    if (button.type === 'separator') {\n      return <div key={`${groupName}-sep-${index}`} className=\"toolbar-separator\" />;\n    }\n\n    // Lazy computation of button states only when needed\n    const isActive = isButtonActive(button.command, button.value);\n    const isDisabled = isButtonDisabled(button.command);\n\n    return (\n      <MemoizedToolbarButton\n        key={`${groupName}-${button.command}-${index}`}\n        button={button}\n        groupName={groupName}\n        index={index}\n        isActive={isActive}\n        isDisabled={isDisabled}\n        openDropdown={openDropdown}\n        openColorPicker={openColorPicker}\n        onButtonClick={handleButtonClick}\n        onDropdownSelect={handleDropdownSelect}\n        onColorSelect={handleColorSelect}\n        setOpenColorPicker={setOpenColorPicker}\n        dropdownRefs={dropdownRefs}\n      />\n    );\n  }, [\n    isButtonActive,\n    isButtonDisabled,\n    openDropdown,\n    openColorPicker,\n    handleButtonClick,\n    handleDropdownSelect,\n    handleColorSelect\n  ]);\n\n  return (\n    <div className=\"advanced-toolbar toolbar\" role=\"toolbar\" aria-label=\"Rich text formatting toolbar\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n      <div className=\"toolbar-left\" style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n        {effectiveToolbarGroups.map((group) => (\n          <div key={group.name} className=\"toolbar-group\">\n            {group.buttons.map((button, index) => renderButton(button, group.name, index))}\n          </div>\n        ))}\n      </div>\n\n\n      {/* Configuration Dropdown */}\n      {showConfigDropdown && configOptions && (\n        <div className=\"toolbar-right\" style={{ marginLeft: 'auto' }}>\n          <div className=\"toolbar-group\">\n            <div className=\"relative\">\n              <button\n                className={`toolbar-button dropdown ${openDropdown === 'config' ? 'active' : ''}`}\n                title=\"Toolbar Configuration\"\n                aria-label=\"Change toolbar configuration\"\n                onClick={(e) => {\n                  e.stopPropagation(); // Prevent the click from bubbling up\n                  setOpenDropdown(openDropdown === 'config' ? null : 'config');\n                }}\n                onMouseDown={(e) => e.preventDefault()}\n              >\n                <span className=\"button-icon\" aria-hidden=\"true\">⚙️</span>\n                <span className=\"dropdown-arrow\">▼</span>\n              </button>\n\n              {/* Configuration Dropdown Menu */}\n              {openDropdown === 'config' && (\n                <div\n                  ref={(el) => (dropdownRefs.current['config'] = el)}\n                  className=\"toolbar-dropdown config-dropdown\"\n                  style={{\n                    position: 'absolute',\n                    top: '100%',\n                    right: 0,\n                    left: 'auto',\n                    minWidth: '280px',\n                    maxHeight: '300px',\n                    overflowY: 'auto',\n                    zIndex: 1000,\n                    backgroundColor: 'white',\n                    border: '1px solid #ccc',\n                    borderRadius: '4px',\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\n                  }}\n                >\n                  <div className=\"config-dropdown-header\">\n                    <h4 className=\"config-dropdown-title\">Toolbar Configuration</h4>\n                    <button\n                      className=\"config-dropdown-close\"\n                      onClick={() => setOpenDropdown(null)}\n                      aria-label=\"Close configuration menu\"\n                    >\n                      ×\n                    </button>\n                  </div>\n\n                  {Object.entries(configOptions).map(([key, config]) => (\n                    <button\n                      key={key}\n                      className={`config-dropdown-item ${selectedConfigKey === key ? 'active' : ''}`}\n                      onClick={() => {\n                        onConfigChange?.(key);\n                        setOpenDropdown(null);\n                      }}\n                    >\n                      <div className=\"config-item-name\">{config.name}</div>\n                      {config.description && (\n                        <div className=\"config-item-description\">{config.description}</div>\n                      )}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","import { SelectionState } from '../types';\n\n/**\n * Gets the current selection state from the browser\n */\nexport const getCurrentSelection = (): SelectionState => {\n  const selection = window.getSelection();\n  \n  if (!selection || selection.rangeCount === 0) {\n    return {\n      range: null,\n      isCollapsed: true,\n      activeFormats: new Set(),\n      currentBlockFormat: 'div'\n    };\n  }\n\n  const range = selection.getRangeAt(0);\n  const activeFormats = getActiveFormats();\n  const currentBlockFormat = getCurrentBlockFormat();\n\n  return {\n    range: range.cloneRange(),\n    isCollapsed: selection.isCollapsed,\n    activeFormats,\n    currentBlockFormat\n  };\n};\n\n/**\n * Restores a previously saved selection\n */\nexport const restoreSelection = (selectionState: SelectionState): void => {\n  if (!selectionState.range) {\n    return;\n  }\n\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  try {\n    selection.removeAllRanges();\n    selection.addRange(selectionState.range);\n  } catch (error) {\n    // Range might be invalid, ignore silently\n    console.warn('Failed to restore selection:', error);\n  }\n};\n\n/**\n * Saves the current selection and returns a restore function\n */\nexport const saveSelection = (): (() => void) => {\n  const selectionState = getCurrentSelection();\n  \n  return () => {\n    restoreSelection(selectionState);\n  };\n};\n\n/**\n * Gets the currently active text formatting\n */\nexport const getActiveFormats = (): Set<string> => {\n  const activeFormats = new Set<string>();\n  \n  try {\n    if (document.queryCommandState('bold')) {\n      activeFormats.add('bold');\n    }\n    if (document.queryCommandState('italic')) {\n      activeFormats.add('italic');\n    }\n    if (document.queryCommandState('underline')) {\n      activeFormats.add('underline');\n    }\n    if (document.queryCommandState('insertUnorderedList')) {\n      activeFormats.add('insertUnorderedList');\n    }\n    if (document.queryCommandState('insertOrderedList')) {\n      activeFormats.add('insertOrderedList');\n    }\n    if (document.queryCommandState('justifyLeft')) {\n      activeFormats.add('justifyLeft');\n    }\n    if (document.queryCommandState('justifyCenter')) {\n      activeFormats.add('justifyCenter');\n    }\n    if (document.queryCommandState('justifyRight')) {\n      activeFormats.add('justifyRight');\n    }\n  } catch (error) {\n    // Some browsers might not support all commands\n    console.warn('Error checking command state:', error);\n  }\n\n  return activeFormats;\n};\n\n/**\n * Gets the current block format (heading level, etc.)\n */\nexport const getCurrentBlockFormat = (): string => {\n  try {\n    const formatBlock = document.queryCommandValue('formatBlock');\n    if (formatBlock) {\n      return formatBlock.toLowerCase();\n    }\n  } catch (error) {\n    console.warn('Error getting block format:', error);\n  }\n\n  // Fallback: check the current element\n  const selection = window.getSelection();\n  if (selection && selection.rangeCount > 0) {\n    const range = selection.getRangeAt(0);\n    let element = range.commonAncestorContainer;\n    \n    if (element.nodeType === Node.TEXT_NODE) {\n      element = element.parentElement || element;\n    }\n    \n    const tagName = (element as Element).tagName?.toLowerCase();\n    if (['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'div'].includes(tagName)) {\n      return tagName;\n    }\n  }\n\n  return 'div';\n};\n\n/**\n * Checks if the current selection is within the specified editor element\n */\nexport const isSelectionInEditor = (editorElement: HTMLElement): boolean => {\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return false;\n  }\n\n  const range = selection.getRangeAt(0);\n  return editorElement.contains(range.commonAncestorContainer);\n};\n\n/**\n * Focuses the editor and places cursor at the end\n */\nexport const focusEditor = (editorElement: HTMLElement): void => {\n  editorElement.focus();\n  \n  // Place cursor at the end\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(editorElement);\n    range.collapse(false);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\n/**\n * Focuses the editor and restores the last known selection\n */\nexport const focusEditorWithSelection = (\n  editorElement: HTMLElement, \n  selectionState?: SelectionState\n): void => {\n  editorElement.focus();\n  \n  if (selectionState) {\n    restoreSelection(selectionState);\n  }\n};","export interface SanitizationConfig {\n  allowedTags: string[];\n  allowedAttributes: Record<string, string[]>;\n  allowedProtocols: string[];\n}\n\nexport const DEFAULT_SANITIZATION_CONFIG: SanitizationConfig = {\n  allowedTags: [\n    'p', 'br', 'strong', 'em', 'u', 'b', 'i',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n    'ul', 'ol', 'li',\n    'a', 'span', 'div'\n  ],\n  allowedAttributes: {\n    'a': ['href', 'title'],\n    'span': ['style'],\n    'div': ['style'],\n    'p': ['style'],\n    'h1': ['style'],\n    'h2': ['style'],\n    'h3': ['style'],\n    'h4': ['style'],\n    'h5': ['style'],\n    'h6': ['style']\n  },\n  allowedProtocols: ['http:', 'https:', 'mailto:']\n};\n\nexport class ContentSanitizer {\n  private config: SanitizationConfig;\n\n  constructor(config: SanitizationConfig = DEFAULT_SANITIZATION_CONFIG) {\n    this.config = config;\n  }\n\n  /**\n   * Sanitize HTML content by removing dangerous elements and attributes\n   */\n  public sanitizeHtml(html: string): string {\n    if (!html || typeof html !== 'string') {\n      return '';\n    }\n\n    // Create a temporary DOM element to parse the HTML\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n\n    // Recursively sanitize all elements\n    this.sanitizeElement(tempDiv);\n\n    return tempDiv.innerHTML;\n  }\n\n  /**\n   * Sanitize pasted content specifically for the editor\n   */\n  public sanitizePastedContent(html: string): string {\n    // First, clean up common paste artifacts (before sanitization)\n    let cleaned = this.cleanPasteArtifacts(html);\n\n    // Then perform basic HTML sanitization\n    let sanitized = this.sanitizeHtml(cleaned);\n\n    // Normalize whitespace and line breaks\n    sanitized = this.normalizeWhitespace(sanitized);\n\n    return sanitized;\n  }\n\n  /**\n   * Recursively sanitize a DOM element and its children\n   */\n  private sanitizeElement(element: Element): void {\n    const children = Array.from(element.children);\n\n    for (const child of children) {\n      const tagName = child.tagName.toLowerCase();\n\n      // Remove disallowed tags\n      if (!this.config.allowedTags.includes(tagName)) {\n        // Special handling for dangerous tags - remove completely including content\n        if (this.isDangerousTag(tagName)) {\n          child.remove();\n          continue;\n        }\n\n        // For other disallowed tags, preserve text content but remove the tag\n        const textContent = child.textContent || '';\n        if (textContent.trim()) {\n          const textNode = document.createTextNode(textContent);\n          child.parentNode?.replaceChild(textNode, child);\n        } else {\n          child.remove();\n        }\n        continue;\n      }\n\n      // Sanitize attributes\n      this.sanitizeAttributes(child);\n\n      // Recursively sanitize children\n      this.sanitizeElement(child);\n    }\n  }\n\n  /**\n   * Check if a tag is dangerous and should be removed completely\n   */\n  private isDangerousTag(tagName: string): boolean {\n    const dangerousTags = [\n      'script', 'iframe', 'object', 'embed', 'form', 'input', \n      'button', 'textarea', 'select', 'option', 'style', 'link',\n      'meta', 'base', 'applet', 'frame', 'frameset'\n    ];\n    return dangerousTags.includes(tagName);\n  }\n\n  /**\n   * Sanitize attributes of an element\n   */\n  private sanitizeAttributes(element: Element): void {\n    const tagName = element.tagName.toLowerCase();\n    const allowedAttrs = this.config.allowedAttributes[tagName] || [];\n    const attributes = Array.from(element.attributes);\n\n    for (const attr of attributes) {\n      const attrName = attr.name.toLowerCase();\n\n      // Remove disallowed attributes\n      if (!allowedAttrs.includes(attrName)) {\n        element.removeAttribute(attr.name);\n        continue;\n      }\n\n      // Special handling for href attributes\n      if (attrName === 'href') {\n        const sanitizedHref = this.sanitizeUrl(attr.value);\n        if (sanitizedHref) {\n          element.setAttribute('href', sanitizedHref);\n        } else {\n          element.removeAttribute('href');\n        }\n        continue;\n      }\n\n      // Special handling for style attributes\n      if (attrName === 'style') {\n        const sanitizedStyle = this.sanitizeStyle(attr.value);\n        if (sanitizedStyle) {\n          element.setAttribute('style', sanitizedStyle);\n        } else {\n          element.removeAttribute('style');\n        }\n        continue;\n      }\n\n      // For other attributes, ensure they don't contain scripts\n      if (this.containsScript(attr.value)) {\n        element.removeAttribute(attr.name);\n      }\n    }\n  }\n\n  /**\n   * Sanitize URL to ensure it uses allowed protocols\n   */\n  private sanitizeUrl(url: string): string | null {\n    if (!url || typeof url !== 'string') {\n      return null;\n    }\n\n    const trimmedUrl = url.trim();\n\n    // Check for javascript: or data: protocols and other dangerous schemes\n    if (/^(javascript|data|vbscript|file|ftp):/i.test(trimmedUrl)) {\n      return null;\n    }\n\n    // Allow relative URLs\n    if (trimmedUrl.startsWith('/') || trimmedUrl.startsWith('./') || trimmedUrl.startsWith('../')) {\n      return trimmedUrl;\n    }\n\n    // Allow fragment identifiers\n    if (trimmedUrl.startsWith('#')) {\n      return trimmedUrl;\n    }\n\n    // Check for allowed protocols\n    try {\n      const urlObj = new URL(trimmedUrl);\n      if (this.config.allowedProtocols.includes(urlObj.protocol)) {\n        return trimmedUrl;\n      }\n    } catch (error) {\n      // If URL parsing fails, try to add http:// prefix\n      try {\n        const urlWithProtocol = `http://${trimmedUrl}`;\n        const urlObj = new URL(urlWithProtocol);\n        if (this.config.allowedProtocols.includes(urlObj.protocol)) {\n          return urlWithProtocol;\n        }\n      } catch (error) {\n        // If still fails, return null\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Sanitize CSS style attribute\n   */\n  private sanitizeStyle(style: string): string | null {\n    if (!style || typeof style !== 'string') {\n      return null;\n    }\n\n    // Remove dangerous CSS properties and values\n    const dangerousPatterns = [\n      /expression\\s*\\(/i,\n      /javascript\\s*:/i,\n      /vbscript\\s*:/i,\n      /data\\s*:/i,\n      /import\\s*['\"]/i,\n      /@import/i,\n      /binding\\s*:/i,\n      /behavior\\s*:/i,\n      /position\\s*:\\s*fixed/i,\n      /position\\s*:\\s*absolute/i\n    ];\n\n    for (const pattern of dangerousPatterns) {\n      if (pattern.test(style)) {\n        return null;\n      }\n    }\n\n    // Allow only basic text formatting styles\n    const allowedStyleProperties = [\n      'color', 'background-color', 'font-size', 'font-weight', 'font-style',\n      'text-decoration', 'text-align', 'margin', 'padding', 'border',\n      'font-family'\n    ];\n\n    // Parse and filter CSS properties\n    const styleDeclarations = style.split(';').filter(decl => decl.trim());\n    const sanitizedDeclarations: string[] = [];\n\n    for (const declaration of styleDeclarations) {\n      const [property, value] = declaration.split(':').map(s => s.trim());\n      \n      if (property && value && allowedStyleProperties.includes(property.toLowerCase())) {\n        // Additional check to ensure value doesn't contain dangerous content\n        if (!this.containsScript(value)) {\n          sanitizedDeclarations.push(`${property}: ${value}`);\n        }\n      }\n    }\n\n    return sanitizedDeclarations.length > 0 ? sanitizedDeclarations.join('; ') : null;\n  }\n\n  /**\n   * Check if a string contains potentially dangerous script content\n   */\n  private containsScript(value: string): boolean {\n    if (!value || typeof value !== 'string') {\n      return false;\n    }\n\n    const dangerousPatterns = [\n      /javascript\\s*:/i,\n      /vbscript\\s*:/i,\n      /data\\s*:/i,\n      /on\\w+\\s*=/i, // Event handlers like onclick, onload, etc.\n      /<script/i,\n      /<\\/script/i,\n      /expression\\s*\\(/i,\n      /eval\\s*\\(/i,\n      /setTimeout\\s*\\(/i,\n      /setInterval\\s*\\(/i\n    ];\n\n    return dangerousPatterns.some(pattern => pattern.test(value));\n  }\n\n  /**\n   * Clean up common artifacts from pasted content\n   */\n  private cleanPasteArtifacts(html: string): string {\n    let cleaned = html;\n\n    // Remove Microsoft Word specific tags and attributes\n    cleaned = cleaned.replace(/<o:p\\s*\\/?>/gi, '');\n    cleaned = cleaned.replace(/<\\/o:p>/gi, '');\n    cleaned = cleaned.replace(/\\s*mso-[^:]+:[^;\"]+;?/gi, '');\n    cleaned = cleaned.replace(/\\s*class=\"?Mso[^\"]*\"?/gi, '');\n\n    // Remove empty paragraphs and divs\n    cleaned = cleaned.replace(/<p[^>]*>\\s*<\\/p>/gi, '');\n    cleaned = cleaned.replace(/<div[^>]*>\\s*<\\/div>/gi, '');\n\n    // Remove font tags and replace with spans\n    cleaned = cleaned.replace(/<font[^>]*>/gi, '<span>');\n    cleaned = cleaned.replace(/<\\/font>/gi, '</span>');\n\n    // Remove comments\n    cleaned = cleaned.replace(/<!--[\\s\\S]*?-->/g, '');\n\n    // Clean up excessive whitespace\n    cleaned = cleaned.replace(/\\s+/g, ' ');\n    cleaned = cleaned.replace(/>\\s+</g, '><');\n\n    return cleaned.trim();\n  }\n\n  /**\n   * Normalize whitespace and line breaks\n   */\n  private normalizeWhitespace(html: string): string {\n    let normalized = html;\n\n    // Convert multiple consecutive <br> tags to paragraph breaks\n    normalized = normalized.replace(/(<br\\s*\\/?>){2,}/gi, '</p><p>');\n\n    // Ensure content is wrapped in paragraphs if it's not already\n    if (normalized && !normalized.match(/^<(p|h[1-6]|ul|ol|div)/i)) {\n      normalized = `<p>${normalized}</p>`;\n    }\n\n    // Clean up empty paragraphs that might have been created\n    normalized = normalized.replace(/<p>\\s*<\\/p>/gi, '');\n\n    return normalized;\n  }\n\n  /**\n   * Extract plain text from HTML content\n   */\n  public extractPlainText(html: string): string {\n    if (!html || typeof html !== 'string') {\n      return '';\n    }\n\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n    return tempDiv.textContent || tempDiv.innerText || '';\n  }\n\n  /**\n   * Check if content is safe (contains no dangerous elements)\n   */\n  public isContentSafe(html: string): boolean {\n    if (!html || typeof html !== 'string') {\n      return true;\n    }\n\n    // Quick check for obviously dangerous content\n    const dangerousPatterns = [\n      /<script/i,\n      /javascript\\s*:/i,\n      /vbscript\\s*:/i,\n      /on\\w+\\s*=/i,\n      /<iframe/i,\n      /<object/i,\n      /<embed/i,\n      /<form/i,\n      /<input/i,\n      /<button/i\n    ];\n\n    return !dangerousPatterns.some(pattern => pattern.test(html));\n  }\n}\n\n// Export singleton instance\nexport const contentSanitizer = new ContentSanitizer();","import React, { useEffect, useState, useCallback } from 'react';\nimport { EditableAreaProps, SelectionState } from '../types';\nimport { \n  getCurrentSelection, \n  isSelectionInEditor,\n  focusEditorWithSelection \n} from '../utils/selectionUtils';\nimport { contentSanitizer } from '../utils/contentSanitizer';\n\nexport const EditableArea: React.FC<EditableAreaProps> = ({\n  content,\n  placeholder,\n  onContentChange,\n  onFocus,\n  onBlur,\n  editorRef,\n  onSelectionChange,\n  onLinkClick,\n  height = '300px'\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [lastSelection, setLastSelection] = useState<SelectionState | null>(null);\n\n  // Handle selection changes to track cursor position\n  const handleSelectionChange = useCallback(() => {\n    if (editorRef.current && isSelectionInEditor(editorRef.current)) {\n      const currentSelection = getCurrentSelection();\n      setLastSelection(currentSelection);\n      \n      // Notify parent component of selection change\n      if (onSelectionChange) {\n        onSelectionChange(currentSelection);\n      }\n    }\n  }, [editorRef, onSelectionChange]);\n\n  // Restore focus and selection after toolbar interactions\n  const restoreFocus = useCallback(() => {\n    if (editorRef.current && lastSelection) {\n      focusEditorWithSelection(editorRef.current, lastSelection);\n    }\n  }, [editorRef, lastSelection]);\n\n  // Handle input events and content changes\n  const handleInput = (event: React.FormEvent<HTMLDivElement>) => {\n    const target = event.currentTarget;\n    const newContent = target.innerHTML;\n    \n    // Process the content to handle edge cases\n    const processedContent = processContent(newContent);\n    onContentChange(processedContent);\n  };\n\n  // Process content to handle browser inconsistencies and edge cases\n  const processContent = (rawContent: string): string => {\n    // Handle empty content cases\n    if (!rawContent || rawContent === '<br>' || rawContent === '<div><br></div>') {\n      return '';\n    }\n    \n    // Clean up unnecessary wrapper divs that some browsers add\n    let processed = rawContent.replace(/^<div><br><\\/div>$/, '');\n    processed = processed.replace(/^<div>(.*)<\\/div>$/, '$1');\n    \n    return processed;\n  };\n\n  // Handle focus events\n  const handleFocus = (_event: React.FocusEvent<HTMLDivElement>) => {\n    setIsFocused(true);\n    onFocus();\n  };\n\n  // Handle blur events\n  const handleBlur = (_event: React.FocusEvent<HTMLDivElement>) => {\n    setIsFocused(false);\n    onBlur();\n  };\n\n  // Handle paste events with content sanitization\n  const handlePaste = (event: React.ClipboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    // Get clipboard data\n    const clipboardData = event.clipboardData;\n    if (!clipboardData) {\n      return;\n    }\n\n    // Try to get HTML content first, fall back to plain text\n    let pastedContent = clipboardData.getData('text/html');\n    \n    if (!pastedContent) {\n      // If no HTML, get plain text and wrap in paragraph\n      const plainText = clipboardData.getData('text/plain');\n      if (plainText) {\n        pastedContent = `<p>${plainText.replace(/\\n/g, '<br>')}</p>`;\n      }\n    }\n\n    if (!pastedContent) {\n      return;\n    }\n\n    // Sanitize the pasted content\n    const sanitizedContent = contentSanitizer.sanitizePastedContent(pastedContent);\n\n    // Insert the sanitized content at the current cursor position\n    insertContentAtCursor(sanitizedContent);\n  };\n\n  // Insert content at the current cursor position\n  const insertContentAtCursor = (content: string) => {\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) {\n      return;\n    }\n\n    const range = selection.getRangeAt(0);\n    \n    // Delete any selected content first\n    range.deleteContents();\n\n    // Create a temporary container to hold the new content\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = content;\n\n    // Insert each child node from the temporary container\n    const fragment = document.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n\n    range.insertNode(fragment);\n\n    // Move cursor to the end of inserted content\n    range.collapse(false);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    // Trigger content change\n    if (editorRef.current) {\n      const newContent = editorRef.current.innerHTML;\n      onContentChange(processContent(newContent));\n    }\n  };\n\n  // Handle click events to show link preview popup\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const target = event.target as HTMLElement;\n    \n    // Check if the clicked element is a link or inside a link\n    const linkElement = target.closest('a[href]') as HTMLAnchorElement;\n    \n    if (linkElement && linkElement.href) {\n      // Prevent the contentEditable from handling this click\n      event.preventDefault();\n      event.stopPropagation();\n      \n      // Trigger the link preview popup via parent component\n      if (onLinkClick) {\n        onLinkClick(event.nativeEvent, linkElement);\n      }\n      return;\n    }\n  };\n\n  // Handle keydown events for special key processing\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    // Handle Enter key for list management\n    if (event.key === 'Enter' && !event.shiftKey) {\n      const handled = handleEnterInList(event);\n      if (handled) {\n        return; // Event was handled, don't let browser process it\n      }\n      // Let the browser handle Enter key naturally for non-list cases\n    }\n  };\n\n  // Handle Enter key behavior within lists\n  const handleEnterInList = (event: React.KeyboardEvent<HTMLDivElement>): boolean => {\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) {\n      return false;\n    }\n\n    const range = selection.getRangeAt(0);\n    const currentElement = range.startContainer.nodeType === Node.TEXT_NODE \n      ? range.startContainer.parentElement \n      : range.startContainer as Element;\n\n    // Find the closest list item\n    const listItem = currentElement?.closest('li');\n    if (!listItem) {\n      return false; // Not in a list\n    }\n\n    const list = listItem.closest('ul, ol');\n    if (!list) {\n      return false; // List item not in a list (shouldn't happen)\n    }\n\n    // Check if the list item is empty or cursor is at the beginning of an empty item\n    const isEmptyListItem = listItem.textContent?.trim() === '' || \n                           (range.startOffset === 0 && listItem.textContent?.trim() === '');\n\n    if (isEmptyListItem) {\n      // Double Enter behavior: exit the list\n      event.preventDefault();\n      exitList(listItem, list);\n      return true;\n    } else {\n      // Single Enter behavior: create new list item\n      // Let the browser handle this naturally as it works well\n      return false;\n    }\n  };\n\n  // Exit list by removing empty list item and placing cursor after the list\n  const exitList = (listItem: Element, list: Element) => {\n    // Remove the empty list item\n    listItem.remove();\n\n    // Create a new paragraph after the list\n    const newParagraph = document.createElement('p');\n    newParagraph.innerHTML = '<br>'; // Ensure paragraph has content for cursor placement\n    \n    // Insert the paragraph after the list\n    if (list.nextSibling) {\n      list.parentNode?.insertBefore(newParagraph, list.nextSibling);\n    } else {\n      list.parentNode?.appendChild(newParagraph);\n    }\n\n    // Place cursor in the new paragraph\n    const selection = window.getSelection();\n    if (selection) {\n      const range = document.createRange();\n      range.setStart(newParagraph, 0);\n      range.collapse(true);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n\n    // Trigger content change\n    if (editorRef.current) {\n      const newContent = editorRef.current.innerHTML;\n      onContentChange(processContent(newContent));\n    }\n  };\n\n  // Determine if placeholder should be shown\n  const shouldShowPlaceholder = (): boolean => {\n    if (isFocused) return false;\n    \n    // Check if content is empty or contains only whitespace/br tags\n    const isEmpty = !content || \n                   content === '' || \n                   content === '<br>' || \n                   content === '<div><br></div>' ||\n                   content.replace(/<[^>]*>/g, '').trim() === '';\n    \n    return isEmpty;\n  };\n\n  // Update content when prop changes\n  useEffect(() => {\n    if (editorRef.current && editorRef.current.innerHTML !== content) {\n      editorRef.current.innerHTML = content || '';\n    }\n  }, [content, editorRef]);\n\n  // Set up selection change event listener\n  useEffect(() => {\n    document.addEventListener('selectionchange', handleSelectionChange);\n    \n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n    };\n  }, [handleSelectionChange]);\n\n  // Expose restoreFocus function through ref\n  useEffect(() => {\n    if (editorRef.current) {\n      // Add restoreFocus method to the editor element for external access\n      (editorRef.current as any).restoreFocus = restoreFocus;\n    }\n  }, [editorRef, restoreFocus]);\n\n  return (\n    <div className=\"editable-area-container\">\n      <div\n        ref={editorRef}\n        className=\"editable-area\"\n        contentEditable={true}\n        onInput={handleInput}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        onPaste={handlePaste}\n        onClick={handleClick}\n        suppressContentEditableWarning={true}\n        role=\"textbox\"\n        aria-label=\"Rich text editor content area\"\n        aria-multiline=\"true\"\n        aria-describedby=\"keyboard-shortcuts-help\"\n        data-placeholder={placeholder}\n        style={{\n          height: typeof height === 'number' ? `${height}px` : height,\n          minHeight: typeof height === 'number' ? `${height}px` : height\n        }}\n      />\n      {shouldShowPlaceholder() && (\n        <div className=\"placeholder\" aria-hidden=\"true\">\n          {placeholder}\n        </div>\n      )}\n    </div>\n  );\n};","import React, { useState, useRef, useCallback } from 'react';\nimport ReactCrop, { Crop, PixelCrop, centerCrop, makeAspectCrop } from 'react-image-crop';\n\ninterface ImageUploadCropModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onImageInsert: (croppedImageUrl: string) => void;\n}\n\ntype ModalStep = 'upload' | 'crop' | 'save';\n\nfunction centerAspectCrop(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number,\n) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: '%',\n        width: 90,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight,\n    ),\n    mediaWidth,\n    mediaHeight,\n  )\n}\n\nexport const ImageUploadCropModal: React.FC<ImageUploadCropModalProps> = ({\n  isOpen,\n  onClose,\n  onImageInsert\n}) => {\n  const [currentStep, setCurrentStep] = useState<ModalStep>('upload');\n  const [, setSelectedFile] = useState<File | null>(null);\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [crop, setCrop] = useState<Crop>();\n  const [completedCrop, setCompletedCrop] = useState<PixelCrop>();\n  const [croppedImageUrl, setCroppedImageUrl] = useState<string>('');\n  const [aspect, setAspect] = useState<number | undefined>(undefined);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const maxSize = 10 * 1024 * 1024; // 10MB\n  const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n\n  // Reset modal state when opening/closing\n  const resetModal = useCallback(() => {\n    setCurrentStep('upload');\n    setSelectedFile(null);\n    setImageUrl('');\n    setCrop(undefined);\n    setCompletedCrop(undefined);\n    setCroppedImageUrl('');\n    setAspect(undefined);\n    setIsProcessing(false);\n    setIsDragOver(false);\n    setError(null);\n    if (imageUrl) {\n      URL.revokeObjectURL(imageUrl);\n    }\n    if (croppedImageUrl) {\n      URL.revokeObjectURL(croppedImageUrl);\n    }\n  }, [imageUrl, croppedImageUrl]);\n\n  const handleClose = useCallback(() => {\n    resetModal();\n    onClose();\n  }, [resetModal, onClose]);\n\n  // File validation\n  const validateFile = useCallback((file: File): string | null => {\n    if (file.size > maxSize) {\n      return `File size exceeds 10MB limit`;\n    }\n\n    if (!acceptedTypes.includes(file.type)) {\n      return `File type not supported. Please select a JPEG, PNG, GIF, or WebP image.`;\n    }\n\n    return null;\n  }, []);\n\n  // Handle file selection\n  const handleFileSelect = useCallback((file: File) => {\n    const validationError = validateFile(file);\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n\n    setError(null);\n    setSelectedFile(file);\n\n    // Create object URL for preview\n    const url = URL.createObjectURL(file);\n    setImageUrl(url);\n    setCurrentStep('crop');\n  }, [validateFile]);\n\n  // File input change handler\n  const handleFileInputChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      handleFileSelect(file);\n    }\n  }, [handleFileSelect]);\n\n  // Drag and drop handlers\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n\n    const files = Array.from(event.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, [handleFileSelect]);\n\n  const handleBrowseClick = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  // Image load handler for crop initialization\n  const onImageLoad = useCallback((e: React.SyntheticEvent<HTMLImageElement>) => {\n    const { width, height } = e.currentTarget;\n    setCrop(centerAspectCrop(width, height, aspect || width / height));\n  }, [aspect]);\n\n  // Aspect ratio change handler\n  const handleAspectChange = useCallback((newAspect: number | undefined) => {\n    setAspect(newAspect);\n    if (imgRef.current) {\n      const { width, height } = imgRef.current;\n      setCrop(centerAspectCrop(width, height, newAspect || width / height));\n    }\n  }, []);\n\n  // Generate cropped image\n  const getCroppedImg = useCallback(async (): Promise<string | null> => {\n    if (!completedCrop || !imgRef.current || !canvasRef.current) {\n      return null;\n    }\n\n    const image = imgRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx) {\n      return null;\n    }\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n\n    canvas.width = completedCrop.width;\n    canvas.height = completedCrop.height;\n\n    ctx.drawImage(\n      image,\n      completedCrop.x * scaleX,\n      completedCrop.y * scaleY,\n      completedCrop.width * scaleX,\n      completedCrop.height * scaleY,\n      0,\n      0,\n      completedCrop.width,\n      completedCrop.height,\n    );\n\n    return new Promise<string>((resolve) => {\n      canvas.toBlob((blob) => {\n        if (blob) {\n          const url = URL.createObjectURL(blob);\n          resolve(url);\n        }\n      }, 'image/jpeg', 0.9);\n    });\n  }, [completedCrop]);\n\n  // Handle crop completion\n  const handleCrop = useCallback(async () => {\n    setIsProcessing(true);\n    try {\n      const croppedUrl = await getCroppedImg();\n      if (croppedUrl) {\n        setCroppedImageUrl(croppedUrl);\n        setCurrentStep('save');\n      }\n    } catch (error) {\n      console.error('Error cropping image:', error);\n      setError('Failed to process image. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [getCroppedImg]);\n\n  // Handle save image to editor\n  const handleSaveToEditor = useCallback(() => {\n    if (croppedImageUrl) {\n      onImageInsert(croppedImageUrl);\n      handleClose();\n    }\n  }, [croppedImageUrl, onImageInsert, handleClose]);\n\n  // Handle back to crop from save step\n  const handleBackToCrop = useCallback(() => {\n    if (croppedImageUrl) {\n      URL.revokeObjectURL(croppedImageUrl);\n    }\n    setCroppedImageUrl('');\n    setCurrentStep('crop');\n  }, [croppedImageUrl]);\n\n  // Format file size for display\n  const formatFileSize = useCallback((bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }, []);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"image-crop-modal\">\n      <div className=\"image-crop-modal__content\" style={{ \n        maxWidth: currentStep === 'crop' ? '900px' : '500px' \n      }}>\n        {/* Header */}\n        <div className=\"image-crop-modal__header\">\n          <h2 className=\"image-crop-modal__title\">\n            {currentStep === 'upload' ? 'Upload Image' : \n             currentStep === 'crop' ? 'Crop Image' : 'Save Image'}\n          </h2>\n          <button\n            onClick={handleClose}\n            className=\"image-crop-modal__close\"\n            aria-label=\"Close\"\n          >\n            <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Upload Step */}\n        {currentStep === 'upload' && (\n          <>\n            <div style={{ padding: '1.5rem' }}>\n              <p style={{ fontSize: '0.875rem', color: '#6b7280', marginBottom: '1rem' }}>\n                Select an image to upload and crop\n              </p>\n\n              {/* Drag and Drop Area */}\n              <div\n                style={{\n                  border: `2px dashed ${isDragOver ? '#3b82f6' : '#d1d5db'}`,\n                  borderRadius: '0.5rem',\n                  padding: '2rem',\n                  textAlign: 'center',\n                  backgroundColor: isDragOver ? '#eff6ff' : 'transparent',\n                  transition: 'all 0.2s',\n                  cursor: 'pointer'\n                }}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop}\n                onClick={handleBrowseClick}\n              >\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                  <svg\n                    width=\"48\"\n                    height=\"48\"\n                    style={{ marginBottom: '1rem', color: isDragOver ? '#3b82f6' : '#9ca3af' }}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                    />\n                  </svg>\n                  \n                  <p style={{ fontSize: '0.875rem', color: '#6b7280', marginBottom: '0.5rem' }}>\n                    Drag and drop your image here, or click to browse\n                  </p>\n                  \n                  <button\n                    type=\"button\"\n                    style={{\n                      padding: '0.5rem 1rem',\n                      fontSize: '0.875rem',\n                      fontWeight: '500',\n                      color: '#3b82f6',\n                      backgroundColor: '#eff6ff',\n                      border: '1px solid #bfdbfe',\n                      borderRadius: '0.375rem',\n                      cursor: 'pointer',\n                      transition: 'all 0.2s'\n                    }}\n                  >\n                    Browse Files\n                  </button>\n                </div>\n              </div>\n\n              {/* File Info */}\n              <div style={{ marginTop: '1rem', fontSize: '0.75rem', color: '#6b7280' }}>\n                <p>Accepted formats: JPEG, PNG, GIF, WebP</p>\n                <p>Maximum size: {formatFileSize(maxSize)}</p>\n              </div>\n\n              {/* Error Message */}\n              {error && (\n                <div style={{\n                  marginTop: '1rem',\n                  padding: '0.75rem',\n                  backgroundColor: '#fef2f2',\n                  border: '1px solid #fecaca',\n                  borderRadius: '0.375rem',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}>\n                  <svg width=\"20\" height=\"20\" style={{ color: '#ef4444', marginRight: '0.5rem' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <p style={{ fontSize: '0.875rem', color: '#dc2626' }}>{error}</p>\n                </div>\n              )}\n            </div>\n\n            {/* Upload Footer */}\n            <div className=\"image-crop-modal__footer\">\n              <div></div>\n              <div className=\"image-crop-modal__actions\">\n                <button\n                  onClick={handleClose}\n                  className=\"image-crop-modal__button image-crop-modal__button--secondary\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Crop Step */}\n        {currentStep === 'crop' && (\n          <>\n            {/* Aspect Ratio Controls */}\n            <div className=\"image-crop-modal__controls\">\n              <div className=\"image-crop-modal__aspect-controls\">\n                <span className=\"image-crop-modal__aspect-label\">Aspect Ratio:</span>\n                <button\n                  onClick={() => handleAspectChange(undefined)}\n                  className={`image-crop-modal__aspect-button ${\n                    aspect === undefined ? 'image-crop-modal__aspect-button--active' : ''\n                  }`}\n                >\n                  Free\n                </button>\n                <button\n                  onClick={() => handleAspectChange(1)}\n                  className={`image-crop-modal__aspect-button ${\n                    aspect === 1 ? 'image-crop-modal__aspect-button--active' : ''\n                  }`}\n                >\n                  1:1\n                </button>\n                <button\n                  onClick={() => handleAspectChange(16 / 9)}\n                  className={`image-crop-modal__aspect-button ${\n                    aspect === 16 / 9 ? 'image-crop-modal__aspect-button--active' : ''\n                  }`}\n                >\n                  16:9\n                </button>\n                <button\n                  onClick={() => handleAspectChange(4 / 3)}\n                  className={`image-crop-modal__aspect-button ${\n                    aspect === 4 / 3 ? 'image-crop-modal__aspect-button--active' : ''\n                  }`}\n                >\n                  4:3\n                </button>\n              </div>\n            </div>\n\n            {/* Crop Area */}\n            <div className=\"image-crop-modal__crop-area\">\n              <ReactCrop\n                crop={crop}\n                onChange={(_, percentCrop) => setCrop(percentCrop)}\n                onComplete={(c) => setCompletedCrop(c)}\n                aspect={aspect}\n                minWidth={50}\n                minHeight={50}\n              >\n                <img\n                  ref={imgRef}\n                  alt=\"Crop preview\"\n                  src={imageUrl}\n                  style={{ maxHeight: '500px', maxWidth: '100%' }}\n                  onLoad={onImageLoad}\n                />\n              </ReactCrop>\n            </div>\n\n            {/* Crop Footer */}\n            <div className=\"image-crop-modal__footer\">\n              <div className=\"image-crop-modal__help-text\">\n                Drag to select the area you want to crop\n              </div>\n              <div className=\"image-crop-modal__actions\">\n                <button\n                  onClick={handleClose}\n                  className=\"image-crop-modal__button image-crop-modal__button--secondary\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleCrop}\n                  disabled={!completedCrop || isProcessing}\n                  className=\"image-crop-modal__button image-crop-modal__button--primary\"\n                >\n                  {isProcessing ? 'Processing...' : 'Crop'}\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Save Step */}\n        {currentStep === 'save' && (\n          <>\n            <div style={{ padding: '1.5rem', textAlign: 'center' }}>\n              <p style={{ fontSize: '0.875rem', color: '#6b7280', marginBottom: '1.5rem' }}>\n                Your image has been cropped successfully. Click \"Save Image to Editor\" to add it to your content.\n              </p>\n\n              {/* Cropped Image Preview */}\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'center', \n                marginBottom: '1.5rem',\n                padding: '1rem',\n                backgroundColor: '#f9fafb',\n                borderRadius: '0.5rem',\n                border: '1px solid #e5e7eb'\n              }}>\n                <img\n                  src={croppedImageUrl}\n                  alt=\"Cropped preview\"\n                  style={{ \n                    maxWidth: '300px', \n                    maxHeight: '300px',\n                    borderRadius: '0.375rem',\n                    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                  }}\n                />\n              </div>\n\n              <div style={{ \n                padding: '1rem',\n                backgroundColor: '#f0f9ff',\n                borderRadius: '0.375rem',\n                border: '1px solid #bfdbfe',\n                marginBottom: '1rem'\n              }}>\n                <p style={{ fontSize: '0.875rem', color: '#0c5460', margin: 0 }}>\n                  ✓ Image cropped and ready to be added to your editor\n                </p>\n              </div>\n            </div>\n\n            {/* Save Footer */}\n            <div className=\"image-crop-modal__footer\">\n              <div></div>\n              <div className=\"image-crop-modal__actions\">\n                <button\n                  onClick={handleBackToCrop}\n                  className=\"image-crop-modal__button image-crop-modal__button--secondary\"\n                >\n                  Back to Crop\n                </button>\n                <button\n                  onClick={handleClose}\n                  className=\"image-crop-modal__button image-crop-modal__button--secondary\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleSaveToEditor}\n                  className=\"image-crop-modal__button image-crop-modal__button--primary\"\n                >\n                  Save Image to Editor\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Hidden file input */}\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept=\"image/jpeg,image/jpg,image/png,image/gif,image/webp\"\n          onChange={handleFileInputChange}\n          style={{ display: 'none' }}\n        />\n\n        {/* Hidden canvas for cropping */}\n        <canvas\n          ref={canvasRef}\n          style={{ display: 'none' }}\n        />\n      </div>\n    </div>\n  );\n};","import React, { useState, useRef, useCallback } from 'react';\n\ninterface FileUploadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onFileSelect: (file: File) => void;\n  accept?: string;\n  maxSize?: number; // in bytes\n  title?: string;\n  description?: string;\n}\n\nexport const FileUploadModal: React.FC<FileUploadModalProps> = ({\n  isOpen,\n  onClose,\n  onFileSelect,\n  accept = '*/*',\n  maxSize = 10 * 1024 * 1024, // 10MB default\n  title = 'Upload File',\n  description = 'Select a file to upload'\n}) => {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const validateFile = useCallback((file: File): string | null => {\n    // Check file size\n    if (file.size > maxSize) {\n      const maxSizeMB = Math.round(maxSize / (1024 * 1024));\n      return `File size exceeds ${maxSizeMB}MB limit`;\n    }\n\n    // Check file type if accept is specified and not wildcard\n    if (accept !== '*/*') {\n      const acceptedTypes = accept.split(',').map(type => type.trim());\n      const isAccepted = acceptedTypes.some(acceptedType => {\n        if (acceptedType.startsWith('.')) {\n          // File extension check\n          return file.name.toLowerCase().endsWith(acceptedType.toLowerCase());\n        } else if (acceptedType.includes('/*')) {\n          // MIME type wildcard check (e.g., image/*)\n          const baseType = acceptedType.split('/')[0];\n          return file.type.startsWith(baseType + '/');\n        } else {\n          // Exact MIME type check\n          return file.type === acceptedType;\n        }\n      });\n\n      if (!isAccepted) {\n        return `File type not supported. Accepted types: ${accept}`;\n      }\n    }\n\n    return null;\n  }, [accept, maxSize]);\n\n  const handleFileSelect = useCallback((file: File) => {\n    const validationError = validateFile(file);\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n\n    setError(null);\n    onFileSelect(file);\n    onClose();\n  }, [validateFile, onFileSelect, onClose]);\n\n  const handleFileInputChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      handleFileSelect(file);\n    }\n  }, [handleFileSelect]);\n\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    setIsDragOver(false);\n\n    const files = Array.from(event.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, [handleFileSelect]);\n\n  const handleBrowseClick = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  const formatFileSize = useCallback((bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }, []);\n\n  const getAcceptedTypesDisplay = useCallback((): string => {\n    if (accept === '*/*') return 'All files';\n    if (accept.includes('image/*')) return 'Images';\n    if (accept.includes('video/*')) return 'Videos';\n    if (accept.includes('audio/*')) return 'Audio files';\n    return accept.replace(/,/g, ', ');\n  }, [accept]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">{title}</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          <p className=\"text-sm text-gray-600 mb-4\">{description}</p>\n\n          {/* Drag and Drop Area */}\n          <div\n            className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n              isDragOver\n                ? 'border-blue-400 bg-blue-50'\n                : 'border-gray-300 hover:border-gray-400'\n            }`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            <div className=\"flex flex-col items-center\">\n              <svg\n                className={`w-12 h-12 mb-4 ${\n                  isDragOver ? 'text-blue-500' : 'text-gray-400'\n                }`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                />\n              </svg>\n              \n              <p className=\"text-sm text-gray-600 mb-2\">\n                Drag and drop your file here, or\n              </p>\n              \n              <button\n                onClick={handleBrowseClick}\n                className=\"px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 transition-colors\"\n              >\n                Browse Files\n              </button>\n            </div>\n          </div>\n\n          {/* File Info */}\n          <div className=\"mt-4 text-xs text-gray-500 space-y-1\">\n            <p>Accepted types: {getAcceptedTypesDisplay()}</p>\n            <p>Maximum size: {formatFileSize(maxSize)}</p>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n              <div className=\"flex\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end p-4 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n          >\n            Cancel\n          </button>\n        </div>\n\n        {/* Hidden file input */}\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept={accept}\n          onChange={handleFileInputChange}\n          className=\"hidden\"\n        />\n      </div>\n    </div>\n  );\n};","import React, { useState, useRef, useEffect, useCallback } from 'react';\n\ninterface ImageManagerProps {\n  imageElement: HTMLImageElement;\n  onUpdate: () => void;\n  onRemove: () => void;\n}\n\nexport const ImageManager: React.FC<ImageManagerProps> = ({\n  imageElement,\n  onUpdate,\n  onRemove\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [alignment, setAlignment] = useState<'left' | 'center' | 'right' | 'none'>('none');\n  const [_isResizing, _setIsResizing] = useState(false);\n  const managerRef = useRef<HTMLDivElement>(null);\n\n  // Update position and size when image element changes\n  useEffect(() => {\n    if (imageElement) {\n      const rect = imageElement.getBoundingClientRect();\n      const editorRect = imageElement.closest('.editable-area')?.getBoundingClientRect();\n      \n      if (editorRect) {\n        setPosition({\n          x: rect.left - editorRect.left,\n          y: rect.top - editorRect.top\n        });\n      }\n      \n      setImageSize({\n        width: imageElement.offsetWidth,\n        height: imageElement.offsetHeight\n      });\n\n      // Detect current alignment\n      const computedStyle = window.getComputedStyle(imageElement);\n      const display = computedStyle.display;\n      const marginLeft = computedStyle.marginLeft;\n      const marginRight = computedStyle.marginRight;\n      \n      if (display === 'block') {\n        if (marginLeft === 'auto' && marginRight === 'auto') {\n          setAlignment('center');\n        } else if (marginLeft === 'auto') {\n          setAlignment('right');\n        } else {\n          setAlignment('left');\n        }\n      } else {\n        setAlignment('none');\n      }\n    }\n  }, [imageElement]);\n\n  // Handle image alignment\n  const handleAlignment = useCallback((newAlignment: 'left' | 'center' | 'right' | 'none') => {\n    if (!imageElement) return;\n\n    setAlignment(newAlignment);\n\n    switch (newAlignment) {\n      case 'left':\n        imageElement.style.display = 'block';\n        imageElement.style.marginLeft = '0';\n        imageElement.style.marginRight = 'auto';\n        imageElement.style.float = 'none';\n        break;\n      case 'center':\n        imageElement.style.display = 'block';\n        imageElement.style.marginLeft = 'auto';\n        imageElement.style.marginRight = 'auto';\n        imageElement.style.float = 'none';\n        break;\n      case 'right':\n        imageElement.style.display = 'block';\n        imageElement.style.marginLeft = 'auto';\n        imageElement.style.marginRight = '0';\n        imageElement.style.float = 'none';\n        break;\n      case 'none':\n        imageElement.style.display = 'inline-block';\n        imageElement.style.marginLeft = '';\n        imageElement.style.marginRight = '';\n        imageElement.style.float = '';\n        break;\n    }\n    \n    onUpdate();\n  }, [imageElement, onUpdate]);\n\n  // Handle image resizing\n  const handleResize = useCallback((newWidth: number) => {\n    if (!imageElement) return;\n\n    const aspectRatio = imageElement.naturalHeight / imageElement.naturalWidth;\n    const newHeight = newWidth * aspectRatio;\n\n    imageElement.style.width = `${newWidth}px`;\n    imageElement.style.height = `${newHeight}px`;\n    \n    setImageSize({ width: newWidth, height: newHeight });\n    onUpdate();\n  }, [imageElement, onUpdate]);\n\n  // Handle image wrapping (float)\n  const handleFloat = useCallback((floatDirection: 'left' | 'right' | 'none') => {\n    if (!imageElement) return;\n\n    switch (floatDirection) {\n      case 'left':\n        imageElement.style.float = 'left';\n        imageElement.style.marginRight = '15px';\n        imageElement.style.marginBottom = '10px';\n        imageElement.style.display = 'block';\n        break;\n      case 'right':\n        imageElement.style.float = 'right';\n        imageElement.style.marginLeft = '15px';\n        imageElement.style.marginBottom = '10px';\n        imageElement.style.display = 'block';\n        break;\n      case 'none':\n        imageElement.style.float = 'none';\n        imageElement.style.marginLeft = '';\n        imageElement.style.marginRight = '';\n        imageElement.style.marginBottom = '';\n        break;\n    }\n    \n    onUpdate();\n  }, [imageElement, onUpdate]);\n\n  // Handle alt text update\n  const handleAltText = useCallback(() => {\n    if (!imageElement) return;\n\n    const currentAlt = imageElement.alt || '';\n    // For now, we'll use a simple approach - in a full implementation, \n    // this would open a proper modal dialog\n    const newAlt = window.prompt('Enter alt text for the image (for accessibility):', currentAlt);\n    \n    if (newAlt !== null) {\n      imageElement.alt = newAlt;\n      onUpdate();\n    }\n  }, [imageElement, onUpdate]);\n\n  // Handle image removal\n  const handleRemove = useCallback(() => {\n    if (confirm('Are you sure you want to remove this image?')) {\n      onRemove();\n      setIsVisible(false);\n    }\n  }, [onRemove]);\n\n  // Show/hide manager on image click\n  useEffect(() => {\n    const handleImageClick = (e: Event) => {\n      e.stopPropagation();\n      setIsVisible(true);\n    };\n\n    const handleDocumentClick = (e: Event) => {\n      if (managerRef.current && !managerRef.current.contains(e.target as Node)) {\n        setIsVisible(false);\n      }\n    };\n\n    if (imageElement) {\n      imageElement.addEventListener('click', handleImageClick);\n      document.addEventListener('click', handleDocumentClick);\n    }\n\n    return () => {\n      if (imageElement) {\n        imageElement.removeEventListener('click', handleImageClick);\n      }\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [imageElement]);\n\n  if (!isVisible || !imageElement) return null;\n\n  return (\n    <div\n      ref={managerRef}\n      className=\"absolute z-50 bg-white border border-gray-300 rounded-lg shadow-lg p-3 min-w-64\"\n      style={{\n        left: position.x + imageSize.width + 10,\n        top: position.y,\n        maxWidth: '300px'\n      }}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-3 pb-2 border-b border-gray-200\">\n        <h3 className=\"text-sm font-semibold text-gray-900\">Image Settings</h3>\n        <button\n          onClick={() => setIsVisible(false)}\n          className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          aria-label=\"Close\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Size Controls */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n          Width: {Math.round(imageSize.width)}px\n        </label>\n        <input\n          type=\"range\"\n          min=\"50\"\n          max=\"800\"\n          value={imageSize.width}\n          onChange={(e) => handleResize(parseInt(e.target.value))}\n          className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n        />\n        <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n          <span>50px</span>\n          <span>800px</span>\n        </div>\n      </div>\n\n      {/* Alignment Controls */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-2\">Alignment</label>\n        <div className=\"flex gap-1\">\n          <button\n            onClick={() => handleAlignment('left')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'left'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Left\n          </button>\n          <button\n            onClick={() => handleAlignment('center')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'center'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Center\n          </button>\n          <button\n            onClick={() => handleAlignment('right')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'right'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Right\n          </button>\n          <button\n            onClick={() => handleAlignment('none')}\n            className={`px-2 py-1 text-xs rounded ${\n              alignment === 'none'\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            } transition-colors`}\n          >\n            Inline\n          </button>\n        </div>\n      </div>\n\n      {/* Text Wrapping Controls */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-2\">Text Wrapping</label>\n        <div className=\"flex gap-1\">\n          <button\n            onClick={() => handleFloat('left')}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Wrap Left\n          </button>\n          <button\n            onClick={() => handleFloat('right')}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Wrap Right\n          </button>\n          <button\n            onClick={() => handleFloat('none')}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            No Wrap\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Size Presets */}\n      <div className=\"mb-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-2\">Quick Sizes</label>\n        <div className=\"flex gap-1\">\n          <button\n            onClick={() => handleResize(150)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Small\n          </button>\n          <button\n            onClick={() => handleResize(300)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Medium\n          </button>\n          <button\n            onClick={() => handleResize(500)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Large\n          </button>\n          <button\n            onClick={() => handleResize(imageElement.naturalWidth)}\n            className=\"px-2 py-1 text-xs bg-gray-100 text-gray-700 hover:bg-gray-200 rounded transition-colors\"\n          >\n            Original\n          </button>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-2 pt-2 border-t border-gray-200\">\n        <button\n          onClick={handleAltText}\n          className=\"flex-1 px-2 py-1 text-xs bg-blue-50 text-blue-700 hover:bg-blue-100 rounded transition-colors\"\n        >\n          Alt Text\n        </button>\n        <button\n          onClick={handleRemove}\n          className=\"flex-1 px-2 py-1 text-xs bg-red-50 text-red-700 hover:bg-red-100 rounded transition-colors\"\n        >\n          Remove\n        </button>\n      </div>\n    </div>\n  );\n};","import React, { useState } from 'react';\n\ninterface TableInsertModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsert: (rows: number, cols: number, hasHeaders: boolean) => void;\n}\n\nexport const TableInsertModal: React.FC<TableInsertModalProps> = ({\n  isOpen,\n  onClose,\n  onInsert\n}) => {\n  const [rows, setRows] = useState(3);\n  const [cols, setCols] = useState(3);\n  const [hasHeaders, setHasHeaders] = useState(true);\n  const [previewRows] = useState(3);\n  const [previewCols] = useState(3);\n\n  const handleInsert = () => {\n    onInsert(rows, cols, hasHeaders);\n    onClose();\n  };\n\n\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Insert Table</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {/* Grid Selector */}\n          <div className=\"mb-6\">\n            <div className=\"mt-2 text-sm text-gray-600\">\n              {previewRows} × {previewCols} table\n            </div>\n          </div>\n\n          {/* Manual Input */}\n          <div className=\"grid grid-cols-2 gap-4 mb-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Rows\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"20\"\n                value={rows}\n                onChange={(e) => setRows(Math.max(1, parseInt(e.target.value) || 1))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Columns\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"20\"\n                value={cols}\n                onChange={(e) => setCols(Math.max(1, parseInt(e.target.value) || 1))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n\n          {/* Options */}\n          <div className=\"mb-6\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={hasHeaders}\n                onChange={(e) => setHasHeaders(e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Include header row</span>\n            </label>\n          </div>\n\n          {/* Preview */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Preview:\n            </label>\n            <div className=\"border border-gray-300 rounded overflow-hidden\">\n              <table className=\"w-full text-xs\">\n                <tbody>\n                  {Array.from({ length: Math.min(rows, 4) }, (_, rowIndex) => (\n                    <tr key={rowIndex}>\n                      {Array.from({ length: Math.min(cols, 6) }, (_, colIndex) => (\n                        <td\n                          key={colIndex}\n                          className={`border border-gray-200 p-1 text-center ${hasHeaders && rowIndex === 0\n                              ? 'bg-gray-100 font-medium'\n                              : 'bg-white'\n                            }`}\n                        >\n                          {hasHeaders && rowIndex === 0\n                            ? `Header ${colIndex + 1}`\n                            : `Cell ${rowIndex + 1},${colIndex + 1}`}\n                        </td>\n                      ))}\n                      {cols > 6 && (\n                        <td className=\"border border-gray-200 p-1 text-center bg-gray-50\">\n                          ...\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                  {rows > 4 && (\n                    <tr>\n                      {Array.from({ length: Math.min(cols + (cols > 6 ? 1 : 0), 7) }, (_, colIndex) => (\n                        <td key={colIndex} className=\"border border-gray-200 p-1 text-center bg-gray-50\">\n                          ...\n                        </td>\n                      ))}\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end gap-3 p-4 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleInsert}\n            className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Insert Table\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState } from 'react';\n\ninterface SpecialCharModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsert: (char: string) => void;\n}\n\nconst specialCharCategories = {\n  General: [\n    '©', '®', '™', '§', '¶', '†', '‡', '•', '‰', '′', '″', '‴', '‹', '›', '«', '»',\n    '–', '—', '…', '¡', '¿'\n  ],\n  Currency: [\n    '$', '¢', '£', '¤', '¥', '€', '₹', '₽', '₩', '₪', '₫', '₦', '₡', '₨', '₱', '₵'\n  ],\n  Math: [\n    '±', '×', '÷', '=', '≠', '≈', '≡', '≤', '≥', '<', '>', '∞', '∑', '∏', '∂', '∆',\n    '∇', '∈', '∉', '∋', '∌', '∩', '∪', '⊂', '⊃', '⊆', '⊇', '⊕', '⊗', '⊥', '∥', '∠'\n  ],\n  Greek: [\n    'Α', 'Β', 'Γ', 'Δ', 'Ε', 'Ζ', 'Η', 'Θ', 'Ι', 'Κ', 'Λ', 'Μ', 'Ν', 'Ξ', 'Ο', 'Π',\n    'Ρ', 'Σ', 'Τ', 'Υ', 'Φ', 'Χ', 'Ψ', 'Ω', 'α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ',\n    'ι', 'κ', 'λ', 'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'\n  ],\n  Arrows: [\n    '←', '↑', '→', '↓', '↔', '↕', '↖', '↗', '↘', '↙', '↚', '↛', '↜', '↝', '↞', '↟',\n    '↠', '↡', '↢', '↣', '↤', '↥', '↦', '↧', '↨', '↩', '↪', '↫', '↬', '↭', '↮', '↯'\n  ],\n  Symbols: [\n    '☀', '☁', '☂', '☃', '☄', '★', '☆', '☇', '☈', '☉', '☊', '☋', '☌', '☍', '☎', '☏',\n    '☐', '☑', '☒', '☓', '☔', '☕', '☖', '☗', '☘', '☙', '☚', '☛', '☜', '☝', '☞', '☟'\n  ],\n  Fractions: [\n    '½', '⅓', '⅔', '¼', '¾', '⅕', '⅖', '⅗', '⅘', '⅙', '⅚', '⅛', '⅜', '⅝', '⅞', '⅟'\n  ]\n};\n\nexport const SpecialCharModal: React.FC<SpecialCharModalProps> = ({\n  isOpen,\n  onClose,\n  onInsert\n}) => {\n  const [activeCategory, setActiveCategory] = useState('General');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleCharClick = (char: string) => {\n    onInsert(char);\n    onClose();\n  };\n\n  const filteredChars = searchTerm\n    ? Object.values(specialCharCategories)\n        .flat()\n        .filter(char => \n          char.includes(searchTerm) || \n          char.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n    : specialCharCategories[activeCategory as keyof typeof specialCharCategories];\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[80vh] overflow-hidden\">\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Special Characters</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Close\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"p-4 border-b border-gray-200\">\n          <input\n            type=\"text\"\n            placeholder=\"Search characters...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div className=\"flex h-96\">\n          {!searchTerm && (\n            <div className=\"w-1/3 border-r border-gray-200 overflow-y-auto\">\n              <div className=\"p-2\">\n                {Object.keys(specialCharCategories).map((category) => (\n                  <button\n                    key={category}\n                    onClick={() => setActiveCategory(category)}\n                    className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${\n                      activeCategory === category\n                        ? 'bg-blue-100 text-blue-700'\n                        : 'text-gray-700 hover:bg-gray-100'\n                    }`}\n                  >\n                    {category}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className={`${searchTerm ? 'w-full' : 'w-2/3'} overflow-y-auto`}>\n            <div className=\"p-4\">\n              <div className=\"grid grid-cols-8 gap-2\">\n                {filteredChars.map((char, index) => (\n                  <button\n                    key={`${char}-${index}`}\n                    onClick={() => handleCharClick(char)}\n                    className=\"w-10 h-10 flex items-center justify-center text-lg border border-gray-300 rounded hover:bg-blue-50 hover:border-blue-300 transition-colors\"\n                    title={`Insert ${char}`}\n                  >\n                    {char}\n                  </button>\n                ))}\n              </div>\n              {filteredChars.length === 0 && (\n                <div className=\"text-center text-gray-500 py-8\">\n                  No characters found matching \"{searchTerm}\"\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end p-4 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\n\ninterface UrlInputModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (url: string) => void;\n  title: string;\n  placeholder?: string;\n  initialValue?: string;\n  description?: string;\n}\n\nexport const UrlInputModal: React.FC<UrlInputModalProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  title,\n  placeholder = 'Enter URL...',\n  initialValue = '',\n  description\n}) => {\n  const [url, setUrl] = useState(initialValue);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isOpen) {\n      setUrl(initialValue);\n      setError('');\n    }\n  }, [isOpen, initialValue]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!url.trim()) {\n      setError('URL is required');\n      return;\n    }\n\n    // Basic URL validation\n    try {\n      if (url.trim().startsWith('http://') || url.trim().startsWith('https://') || url.trim().startsWith('/')) {\n        onSubmit(url.trim());\n        onClose();\n      } else {\n        // Try to add https:// prefix\n        const urlWithProtocol = `https://${url.trim()}`;\n        new URL(urlWithProtocol); // This will throw if invalid\n        onSubmit(urlWithProtocol);\n        onClose();\n      }\n    } catch {\n      setError('Please enter a valid URL');\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div \n      className=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        animation: 'fadeIn 0.2s ease-out'\n      }}\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div \n        className=\"modal-content\"\n        style={{\n          backgroundColor: 'white',\n          borderRadius: '12px',\n          padding: '24px',\n          width: '90%',\n          maxWidth: '500px',\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n          animation: 'slideIn 0.3s ease-out'\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div style={{ marginBottom: '20px' }}>\n          <h3 style={{ \n            margin: '0 0 8px 0', \n            fontSize: '18px', \n            fontWeight: '600', \n            color: '#1f2937' \n          }}>\n            {title}\n          </h3>\n          {description && (\n            <p style={{ \n              margin: 0, \n              fontSize: '14px', \n              color: '#6b7280',\n              lineHeight: '1.5'\n            }}>\n              {description}\n            </p>\n          )}\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '16px' }}>\n            <input\n              type=\"text\"\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n                setError('');\n              }}\n              placeholder={placeholder}\n              autoFocus\n              style={{\n                width: '100%',\n                padding: '12px',\n                border: `2px solid ${error ? '#ef4444' : '#e5e7eb'}`,\n                borderRadius: '8px',\n                fontSize: '16px',\n                outline: 'none',\n                transition: 'border-color 0.2s ease',\n                boxSizing: 'border-box'\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = '#3b82f6';\n              }}\n              onBlur={(e) => {\n                if (!error) {\n                  e.target.style.borderColor = '#e5e7eb';\n                }\n              }}\n            />\n            {error && (\n              <p style={{ \n                margin: '8px 0 0 0', \n                fontSize: '14px', \n                color: '#ef4444' \n              }}>\n                {error}\n              </p>\n            )}\n          </div>\n\n          <div style={{ \n            display: 'flex', \n            gap: '12px', \n            justifyContent: 'flex-end' \n          }}>\n            <button\n              type=\"button\"\n              onClick={onClose}\n              style={{\n                padding: '10px 20px',\n                border: '1px solid #d1d5db',\n                borderRadius: '8px',\n                backgroundColor: 'white',\n                color: '#374151',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#f9fafb';\n                e.currentTarget.style.borderColor = '#9ca3af';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = 'white';\n                e.currentTarget.style.borderColor = '#d1d5db';\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              style={{\n                padding: '10px 20px',\n                border: 'none',\n                borderRadius: '8px',\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#2563eb';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = '#3b82f6';\n              }}\n            >\n              {initialValue ? 'Update' : 'Add'} Link\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\n\ninterface FindReplaceModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onFindReplace: (findText: string, replaceText: string) => void;\n}\n\nexport const FindReplaceModal: React.FC<FindReplaceModalProps> = ({\n  isOpen,\n  onClose,\n  onFindReplace\n}) => {\n  const [findText, setFindText] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isOpen) {\n      setFindText('');\n      setReplaceText('');\n      setError('');\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!findText.trim()) {\n      setError('Find text is required');\n      return;\n    }\n\n    onFindReplace(findText.trim(), replaceText.trim());\n    onClose();\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div \n      className=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        animation: 'fadeIn 0.2s ease-out'\n      }}\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div \n        className=\"modal-content\"\n        style={{\n          backgroundColor: 'white',\n          borderRadius: '12px',\n          padding: '24px',\n          width: '90%',\n          maxWidth: '500px',\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n          animation: 'slideIn 0.3s ease-out'\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div style={{ marginBottom: '20px' }}>\n          <h3 style={{ \n            margin: '0 0 8px 0', \n            fontSize: '18px', \n            fontWeight: '600', \n            color: '#1f2937' \n          }}>\n            🔍 Find & Replace\n          </h3>\n          <p style={{ \n            margin: 0, \n            fontSize: '14px', \n            color: '#6b7280',\n            lineHeight: '1.5'\n          }}>\n            Search for text in your document and replace it with new text.\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '16px' }}>\n            <label style={{ \n              display: 'block', \n              marginBottom: '6px', \n              fontSize: '14px', \n              fontWeight: '500', \n              color: '#374151' \n            }}>\n              Find:\n            </label>\n            <input\n              type=\"text\"\n              value={findText}\n              onChange={(e) => {\n                setFindText(e.target.value);\n                setError('');\n              }}\n              placeholder=\"Enter text to find...\"\n              autoFocus\n              style={{\n                width: '100%',\n                padding: '12px',\n                border: `2px solid ${error ? '#ef4444' : '#e5e7eb'}`,\n                borderRadius: '8px',\n                fontSize: '16px',\n                outline: 'none',\n                transition: 'border-color 0.2s ease',\n                boxSizing: 'border-box'\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = '#3b82f6';\n              }}\n              onBlur={(e) => {\n                if (!error) {\n                  e.target.style.borderColor = '#e5e7eb';\n                }\n              }}\n            />\n            {error && (\n              <p style={{ \n                margin: '8px 0 0 0', \n                fontSize: '14px', \n                color: '#ef4444' \n              }}>\n                {error}\n              </p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: '20px' }}>\n            <label style={{ \n              display: 'block', \n              marginBottom: '6px', \n              fontSize: '14px', \n              fontWeight: '500', \n              color: '#374151' \n            }}>\n              Replace with:\n            </label>\n            <input\n              type=\"text\"\n              value={replaceText}\n              onChange={(e) => setReplaceText(e.target.value)}\n              placeholder=\"Enter replacement text...\"\n              style={{\n                width: '100%',\n                padding: '12px',\n                border: '2px solid #e5e7eb',\n                borderRadius: '8px',\n                fontSize: '16px',\n                outline: 'none',\n                transition: 'border-color 0.2s ease',\n                boxSizing: 'border-box'\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = '#3b82f6';\n              }}\n              onBlur={(e) => {\n                e.target.style.borderColor = '#e5e7eb';\n              }}\n            />\n          </div>\n\n          <div style={{ \n            display: 'flex', \n            gap: '12px', \n            justifyContent: 'flex-end' \n          }}>\n            <button\n              type=\"button\"\n              onClick={onClose}\n              style={{\n                padding: '10px 20px',\n                border: '1px solid #d1d5db',\n                borderRadius: '8px',\n                backgroundColor: 'white',\n                color: '#374151',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#f9fafb';\n                e.currentTarget.style.borderColor = '#9ca3af';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = 'white';\n                e.currentTarget.style.borderColor = '#d1d5db';\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              style={{\n                padding: '10px 20px',\n                border: 'none',\n                borderRadius: '8px',\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = '#2563eb';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = '#3b82f6';\n              }}\n            >\n              Replace All\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};","import React, { useEffect } from 'react';\n\ninterface NotificationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  message: string;\n  type?: 'info' | 'success' | 'warning' | 'error';\n  autoClose?: boolean;\n  autoCloseDelay?: number;\n}\n\nexport const NotificationModal: React.FC<NotificationModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  message,\n  type = 'info',\n  autoClose = false,\n  autoCloseDelay = 3000\n}) => {\n  useEffect(() => {\n    if (isOpen && autoClose) {\n      const timer = setTimeout(() => {\n        onClose();\n      }, autoCloseDelay);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen, autoClose, autoCloseDelay, onClose]);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const getTypeStyles = () => {\n    switch (type) {\n      case 'success':\n        return {\n          icon: '✅',\n          iconColor: '#10b981',\n          borderColor: '#10b981',\n          backgroundColor: '#f0fdf4'\n        };\n      case 'warning':\n        return {\n          icon: '⚠️',\n          iconColor: '#f59e0b',\n          borderColor: '#f59e0b',\n          backgroundColor: '#fffbeb'\n        };\n      case 'error':\n        return {\n          icon: '❌',\n          iconColor: '#ef4444',\n          borderColor: '#ef4444',\n          backgroundColor: '#fef2f2'\n        };\n      default:\n        return {\n          icon: 'ℹ️',\n          iconColor: '#3b82f6',\n          borderColor: '#3b82f6',\n          backgroundColor: '#eff6ff'\n        };\n    }\n  };\n\n  const typeStyles = getTypeStyles();\n\n  return (\n    <div \n      className=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        animation: 'fadeIn 0.2s ease-out'\n      }}\n      onClick={(e) => e.target === e.currentTarget && onClose()}\n    >\n      <div \n        className=\"modal-content\"\n        style={{\n          backgroundColor: 'white',\n          borderRadius: '12px',\n          padding: '24px',\n          width: '90%',\n          maxWidth: '400px',\n          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n          animation: 'slideIn 0.3s ease-out',\n          border: `2px solid ${typeStyles.borderColor}`\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div style={{ \n          display: 'flex', \n          alignItems: 'flex-start', \n          gap: '12px',\n          marginBottom: '20px'\n        }}>\n          <div style={{ \n            fontSize: '24px',\n            flexShrink: 0\n          }}>\n            {typeStyles.icon}\n          </div>\n          <div style={{ flex: 1 }}>\n            <h3 style={{ \n              margin: '0 0 8px 0', \n              fontSize: '18px', \n              fontWeight: '600', \n              color: '#1f2937' \n            }}>\n              {title}\n            </h3>\n            <p style={{ \n              margin: 0, \n              fontSize: '14px', \n              color: '#6b7280',\n              lineHeight: '1.5'\n            }}>\n              {message}\n            </p>\n          </div>\n        </div>\n\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'flex-end' \n        }}>\n          <button\n            onClick={onClose}\n            autoFocus\n            style={{\n              padding: '10px 20px',\n              border: 'none',\n              borderRadius: '8px',\n              backgroundColor: typeStyles.iconColor,\n              color: 'white',\n              fontSize: '14px',\n              fontWeight: '500',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.opacity = '0.9';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.opacity = '1';\n            }}\n          >\n            OK\n          </button>\n        </div>\n\n        {autoClose && (\n          <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: '3px',\n            backgroundColor: typeStyles.backgroundColor,\n            borderBottomLeftRadius: '12px',\n            borderBottomRightRadius: '12px',\n            overflow: 'hidden'\n          }}>\n            <div style={{\n              height: '100%',\n              backgroundColor: typeStyles.iconColor,\n              animation: `shrink ${autoCloseDelay}ms linear`,\n              transformOrigin: 'left'\n            }} />\n          </div>\n        )}\n      </div>\n\n      <style>{`\n        @keyframes shrink {\n          from { transform: scaleX(1); }\n          to { transform: scaleX(0); }\n        }\n      `}</style>\n    </div>\n  );\n};","import React from 'react';\n\ninterface LinkPreviewPopupProps {\n  isOpen: boolean;\n  linkUrl: string;\n  linkText: string;\n  position: { x: number; y: number };\n  onEdit: () => void;\n  onRemove: () => void;\n  onGoToLink: () => void;\n  onClose: () => void;\n}\n\nexport const LinkPreviewPopup: React.FC<LinkPreviewPopupProps> = ({\n  isOpen,\n  linkUrl,\n  linkText: _linkText,\n  position,\n  onEdit,\n  onRemove,\n  onGoToLink,\n  onClose\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Backdrop to close popup when clicking outside */}\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: 999,\n          background: 'transparent'\n        }}\n        onClick={onClose}\n      />\n      \n      {/* Popup */}\n      <div\n        style={{\n          position: 'fixed',\n          left: `${position.x}px`,\n          top: `${position.y}px`,\n          zIndex: 1000,\n          background: 'white',\n          border: '1px solid #d1d5db',\n          borderRadius: '8px',\n          boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15)',\n          padding: '12px 16px',\n          minWidth: '300px',\n          maxWidth: '400px',\n          fontSize: '14px',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Helvetica Neue\", Arial, sans-serif'\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Link preview */}\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '8px',\n          marginBottom: '8px'\n        }}>\n          <span style={{ \n            color: '#374151',\n            fontWeight: '500'\n          }}>\n            Go to link:\n          </span>\n          <button\n            onClick={onGoToLink}\n            style={{\n              color: '#2563eb',\n              textDecoration: 'underline',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              padding: '0',\n              maxWidth: '200px',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap'\n            }}\n            title={linkUrl}\n          >\n            {linkUrl}\n          </button>\n        </div>\n\n        {/* Action buttons */}\n        <div style={{ \n          display: 'flex', \n          gap: '12px',\n          alignItems: 'center'\n        }}>\n          <button\n            onClick={onEdit}\n            style={{\n              color: '#2563eb',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              transition: 'background-color 0.2s'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.backgroundColor = '#eff6ff';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            }}\n          >\n            Change\n          </button>\n          \n          <span style={{ color: '#d1d5db' }}>|</span>\n          \n          <button\n            onClick={onRemove}\n            style={{\n              color: '#dc2626',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              transition: 'background-color 0.2s'\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.backgroundColor = '#fef2f2';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            }}\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};","export interface EditorCommand {\n  type: 'execCommand' | 'custom';\n  command: string;\n  value?: string;\n  requiresSelection?: boolean;\n  description: string;\n}\n\nexport const COMMANDS: Record<string, EditorCommand> = {\n  BOLD: {\n    type: 'execCommand',\n    command: 'bold',\n    description: 'Toggle bold formatting'\n  },\n  ITALIC: {\n    type: 'execCommand',\n    command: 'italic',\n    description: 'Toggle italic formatting'\n  },\n  UNDERLINE: {\n    type: 'execCommand',\n    command: 'underline',\n    description: 'Toggle underline formatting'\n  },\n  STRIKETHROUGH: {\n    type: 'execCommand',\n    command: 'strikeThrough',\n    description: 'Toggle strikethrough formatting'\n  },\n  SUBSCRIPT: {\n    type: 'execCommand',\n    command: 'subscript',\n    description: 'Toggle subscript formatting'\n  },\n  SUPERSCRIPT: {\n    type: 'execCommand',\n    command: 'superscript',\n    description: 'Toggle superscript formatting'\n  },\n  FORMAT_H1: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H1',\n    description: 'Format as heading 1'\n  },\n  FORMAT_H2: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H2',\n    description: 'Format as heading 2'\n  },\n  FORMAT_H3: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H3',\n    description: 'Format as heading 3'\n  },\n  FORMAT_H4: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H4',\n    description: 'Format as heading 4'\n  },\n  FORMAT_H5: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H5',\n    description: 'Format as heading 5'\n  },\n  FORMAT_H6: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'H6',\n    description: 'Format as heading 6'\n  },\n  FORMAT_PARAGRAPH: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'P',\n    description: 'Format as paragraph'\n  },\n  FORMAT_BLOCKQUOTE: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'BLOCKQUOTE',\n    description: 'Format as blockquote'\n  },\n  FORMAT_PRE: {\n    type: 'execCommand',\n    command: 'formatBlock',\n    value: 'PRE',\n    description: 'Format as preformatted text'\n  },\n  INSERT_UNORDERED_LIST: {\n    type: 'execCommand',\n    command: 'insertUnorderedList',\n    description: 'Create bullet list'\n  },\n  INSERT_ORDERED_LIST: {\n    type: 'execCommand',\n    command: 'insertOrderedList',\n    description: 'Create numbered list'\n  },\n  JUSTIFY_LEFT: {\n    type: 'execCommand',\n    command: 'justifyLeft',\n    description: 'Align text left'\n  },\n  JUSTIFY_CENTER: {\n    type: 'execCommand',\n    command: 'justifyCenter',\n    description: 'Center align text'\n  },\n  JUSTIFY_RIGHT: {\n    type: 'execCommand',\n    command: 'justifyRight',\n    description: 'Align text right'\n  },\n  JUSTIFY_FULL: {\n    type: 'execCommand',\n    command: 'justifyFull',\n    description: 'Justify text'\n  },\n  INDENT: {\n    type: 'execCommand',\n    command: 'indent',\n    description: 'Increase indent'\n  },\n  OUTDENT: {\n    type: 'execCommand',\n    command: 'outdent',\n    description: 'Decrease indent'\n  },\n  FONT_COLOR: {\n    type: 'custom',\n    command: 'foreColor',\n    description: 'Change text color'\n  },\n  BACKGROUND_COLOR: {\n    type: 'custom',\n    command: 'backColor',\n    description: 'Change background color'\n  },\n  FONT_NAME: {\n    type: 'execCommand',\n    command: 'fontName',\n    description: 'Change font family'\n  },\n  FONT_SIZE: {\n    type: 'execCommand',\n    command: 'fontSize',\n    description: 'Change font size'\n  },\n  INSERT_HORIZONTAL_RULE: {\n    type: 'execCommand',\n    command: 'insertHorizontalRule',\n    description: 'Insert horizontal rule'\n  },\n  CREATE_LINK: {\n    type: 'custom',\n    command: 'createLink',\n    description: 'Create hyperlink'\n  },\n  EDIT_LINK: {\n    type: 'custom',\n    command: 'editLink',\n    description: 'Edit existing hyperlink'\n  },\n  UNLINK: {\n    type: 'execCommand',\n    command: 'unlink',\n    description: 'Remove hyperlink'\n  },\n  UNDO: {\n    type: 'execCommand',\n    command: 'undo',\n    description: 'Undo last action'\n  },\n  REDO: {\n    type: 'execCommand',\n    command: 'redo',\n    description: 'Redo last undone action'\n  },\n  REMOVE_FORMAT: {\n    type: 'execCommand',\n    command: 'removeFormat',\n    description: 'Clear all formatting'\n  },\n  INSERT_IMAGE: {\n    type: 'custom',\n    command: 'insertImage',\n    description: 'Insert image'\n  },\n  UPLOAD_FILE: {\n    type: 'custom',\n    command: 'uploadFile',\n    description: 'Upload and insert file'\n  },\n  INSERT_TABLE: {\n    type: 'custom',\n    command: 'insertTable',\n    description: 'Insert table'\n  },\n  INSERT_SPECIAL_CHAR: {\n    type: 'custom',\n    command: 'insertSpecialChar',\n    description: 'Insert special character'\n  },\n  FIND_REPLACE: {\n    type: 'custom',\n    command: 'findReplace',\n    description: 'Find and replace text'\n  },\n  SOURCE_CODE: {\n    type: 'custom',\n    command: 'sourceCode',\n    description: 'Edit HTML source code'\n  },\n  FULLSCREEN: {\n    type: 'custom',\n    command: 'fullscreen',\n    description: 'Toggle fullscreen mode'\n  },\n  PRINT: {\n    type: 'custom',\n    command: 'print',\n    description: 'Print document'\n  },\n  SPELL_CHECK: {\n    type: 'custom',\n    command: 'spellCheck',\n    description: 'Toggle spell check'\n  }\n};\n\nexport interface CommandExecutionResult {\n  success: boolean;\n  error?: string;\n  command: string;\n  value?: string;\n}\n\nexport class CommandExecutor {\n  private static instance: CommandExecutor;\n\n  private constructor() { }\n\n  public static getInstance(): CommandExecutor {\n    if (!CommandExecutor.instance) {\n      CommandExecutor.instance = new CommandExecutor();\n    }\n    return CommandExecutor.instance;\n  }\n\n  /**\n   * Execute a command using document.execCommand with error handling\n   */\n  public executeCommand(\n    commandKey: string,\n    value?: string,\n    editorElement?: HTMLElement,\n    _savedSelection?: Range | null\n  ): CommandExecutionResult {\n    const command = COMMANDS[commandKey];\n\n    if (!command) {\n      return {\n        success: false,\n        error: `Unknown command: ${commandKey}`,\n        command: commandKey\n      };\n    }\n\n    // Handle custom commands\n    if (command.type === 'custom') {\n      return this.executeCustomCommand(commandKey, value, editorElement);\n    }\n\n    // Check if command requires selection and none exists\n    if (command.requiresSelection && this.isSelectionEmpty()) {\n      return {\n        success: false,\n        error: `Command ${commandKey} requires text selection`,\n        command: commandKey\n      };\n    }\n\n    try {\n      // Ensure editor has focus before executing command\n      if (editorElement && document.activeElement !== editorElement) {\n        editorElement.focus();\n      }\n\n      const commandValue = value || command.value || '';\n      const result = document.execCommand(command.command, false, commandValue);\n\n      if (!result) {\n        return {\n          success: false,\n          error: `Command execution failed: ${command.command}`,\n          command: commandKey,\n          value: commandValue\n        };\n      }\n\n      return {\n        success: true,\n        command: commandKey,\n        value: commandValue\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Command execution error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: commandKey,\n        value: value || command.value || ''\n      };\n    }\n  }\n\n  /**\n   * Execute custom commands that require special handling\n   */\n  private executeCustomCommand(\n    commandKey: string,\n    value?: string,\n    editorElement?: HTMLElement\n  ): CommandExecutionResult {\n    try {\n      // Ensure editor has focus before executing command\n      if (editorElement && document.activeElement !== editorElement) {\n        editorElement.focus();\n      }\n\n      switch (commandKey) {\n        case 'FONT_COLOR':\n          return this.setFontColor(value);\n        case 'BACKGROUND_COLOR':\n          return this.setBackgroundColor(value);\n        case 'CREATE_LINK':\n          return this.createLink(value);\n        case 'EDIT_LINK':\n          return this.editLink(value);\n        case 'INSERT_IMAGE':\n          if (!value) {\n            return this.triggerImageUpload();\n          }\n          return this.insertImage(value as string);\n        case 'UPLOAD_FILE':\n          return this.uploadFile(value);\n        case 'INSERT_TABLE':\n          return this.insertTable(value);\n        case 'INSERT_SPECIAL_CHAR':\n          return this.insertSpecialChar(value);\n        case 'FIND_REPLACE':\n          return this.findReplace();\n        case 'SOURCE_CODE':\n          return this.toggleSourceCode();\n        case 'FULLSCREEN':\n          return this.toggleFullscreen();\n        case 'PRINT':\n          return this.printDocument();\n        case 'SPELL_CHECK':\n          return this.toggleSpellCheck();\n        default:\n          return {\n            success: false,\n            error: `Unknown custom command: ${commandKey}`,\n            command: commandKey\n          };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: `Custom command execution error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: commandKey,\n        value: value || ''\n      };\n    }\n  }\n\n  /**\n   * Check if the current selection is empty\n   */\n  private isSelectionEmpty(): boolean {\n    const selection = window.getSelection();\n    return !selection || selection.isCollapsed;\n  }\n\n  /**\n   * Check if the current selection contains mixed formatting\n   */\n  private hasMixedFormatting(): boolean {\n    const selection = window.getSelection();\n    if (!selection || selection.rangeCount === 0) return false;\n    \n    const range = selection.getRangeAt(0);\n    \n    // If selection spans multiple elements or is very large, consider it mixed\n    if (!range.collapsed) {\n      const selectedText = selection.toString();\n      // If selecting a large portion of content (like select all), treat as mixed\n      if (selectedText.length > 500) return true;\n      \n      // Check if selection spans multiple block elements\n      const startElement = range.startContainer.nodeType === Node.ELEMENT_NODE \n        ? range.startContainer as Element\n        : range.startContainer.parentElement;\n      const endElement = range.endContainer.nodeType === Node.ELEMENT_NODE \n        ? range.endContainer as Element\n        : range.endContainer.parentElement;\n        \n      if (startElement && endElement && startElement !== endElement) {\n        // Check if they have different block parents\n        const startBlock = startElement.closest('p, div, h1, h2, h3, h4, h5, h6, li, blockquote');\n        const endBlock = endElement.closest('p, div, h1, h2, h3, h4, h5, h6, li, blockquote');\n        if (startBlock !== endBlock) return true;\n      }\n    }\n    \n    return false;\n  }\n\n  /**\n   * Get the current active formatting states\n   */\n  public getActiveFormats(): Set<string> {\n    const activeFormats = new Set<string>();\n\n    try {\n      // If selection has mixed formatting, don't highlight any buttons\n      if (this.hasMixedFormatting()) {\n        return activeFormats; // Return empty set\n      }\n      // Check basic formatting states\n      if (document.queryCommandState('bold')) {\n        activeFormats.add('BOLD');\n      }\n      if (document.queryCommandState('italic')) {\n        activeFormats.add('ITALIC');\n      }\n      if (document.queryCommandState('underline')) {\n        activeFormats.add('UNDERLINE');\n      }\n      if (document.queryCommandState('strikeThrough')) {\n        activeFormats.add('STRIKETHROUGH');\n      }\n      if (document.queryCommandState('subscript')) {\n        activeFormats.add('SUBSCRIPT');\n      }\n      if (document.queryCommandState('superscript')) {\n        activeFormats.add('SUPERSCRIPT');\n      }\n\n      // Check heading format states\n      const currentBlockFormat = this.getCurrentBlockFormat();\n      if (currentBlockFormat === 'H1') {\n        activeFormats.add('FORMAT_H1');\n      } else if (currentBlockFormat === 'H2') {\n        activeFormats.add('FORMAT_H2');\n      } else if (currentBlockFormat === 'H3') {\n        activeFormats.add('FORMAT_H3');\n      } else if (currentBlockFormat === 'H4') {\n        activeFormats.add('FORMAT_H4');\n      } else if (currentBlockFormat === 'H5') {\n        activeFormats.add('FORMAT_H5');\n      } else if (currentBlockFormat === 'H6') {\n        activeFormats.add('FORMAT_H6');\n      } else if (currentBlockFormat === 'BLOCKQUOTE') {\n        activeFormats.add('FORMAT_BLOCKQUOTE');\n      } else if (currentBlockFormat === 'PRE') {\n        activeFormats.add('FORMAT_PRE');\n      }\n\n      // Check alignment states - only add if explicitly set\n      // We need to check the actual CSS style rather than queryCommandState for alignment\n      // because queryCommandState('justifyLeft') returns true by default\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        let element = range.commonAncestorContainer;\n        \n        // Find the closest element node\n        while (element && element.nodeType !== Node.ELEMENT_NODE && element.parentNode) {\n          element = element.parentNode;\n        }\n        \n        if (element && element.nodeType === Node.ELEMENT_NODE) {\n          const htmlElement = element as HTMLElement;\n          const computedStyle = window.getComputedStyle(htmlElement);\n          const textAlign = computedStyle.textAlign;\n          \n          // Only highlight alignment buttons if explicitly set (not default)\n          if (textAlign === 'center' || htmlElement.style.textAlign === 'center') {\n            activeFormats.add('JUSTIFY_CENTER');\n          } else if (textAlign === 'right' || htmlElement.style.textAlign === 'right') {\n            activeFormats.add('JUSTIFY_RIGHT');\n          } else if (textAlign === 'justify' || htmlElement.style.textAlign === 'justify') {\n            activeFormats.add('JUSTIFY_FULL');\n          } else if (htmlElement.style.textAlign === 'left') {\n            // Only add JUSTIFY_LEFT if it was explicitly set via style\n            activeFormats.add('JUSTIFY_LEFT');\n          }\n          // Don't add JUSTIFY_LEFT for default left alignment\n        }\n      }\n\n      // Check list states\n      if (document.queryCommandState('insertUnorderedList')) {\n        activeFormats.add('INSERT_UNORDERED_LIST');\n      }\n      if (document.queryCommandState('insertOrderedList')) {\n        activeFormats.add('INSERT_ORDERED_LIST');\n      }\n\n      // Check link state\n      if (this.isInLink()) {\n        activeFormats.add('CREATE_LINK');\n        activeFormats.add('EDIT_LINK');\n      }\n    } catch (error) {\n      console.warn('Error checking command states:', error);\n    }\n\n    return activeFormats;\n  }\n\n  /**\n   * Check if undo is available\n   */\n  public canUndo(): boolean {\n    try {\n      return document.queryCommandEnabled('undo');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if redo is available\n   */\n  public canRedo(): boolean {\n    try {\n      return document.queryCommandEnabled('redo');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Get current block format (heading level, etc.)\n   */\n  public getCurrentBlockFormat(): string {\n    try {\n      const value = document.queryCommandValue('formatBlock');\n      return value.toUpperCase();\n    } catch (error) {\n      return '';\n    }\n  }\n\n  /**\n   * Create a hyperlink from selected text or insert new link\n   */\n  private createLink(url?: string): CommandExecutionResult {\n    const selection = window.getSelection();\n\n    // If no URL provided, return error (should be handled by modal)\n    if (!url) {\n      return {\n        success: false,\n        error: 'URL is required to create a link',\n        command: 'CREATE_LINK'\n      };\n    }\n\n    // Validate and normalize URL\n    const normalizedUrl = this.normalizeUrl(url);\n    if (!normalizedUrl) {\n      return {\n        success: false,\n        error: 'Invalid URL provided',\n        command: 'CREATE_LINK',\n        value: url\n      };\n    }\n\n    try {\n      if (!selection || selection.isCollapsed) {\n        // No text selected - insert new link with URL as text\n        const linkElement = document.createElement('a');\n        linkElement.href = normalizedUrl;\n        linkElement.textContent = url; // Use original URL as display text\n        linkElement.target = '_blank';\n        linkElement.rel = 'noopener noreferrer';\n\n        // Insert the link at cursor position\n        if (selection && selection.rangeCount > 0) {\n          const range = selection.getRangeAt(0);\n          range.insertNode(linkElement);\n          \n          // Move cursor after the link\n          range.setStartAfter(linkElement);\n          range.setEndAfter(linkElement);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        } else {\n          // No cursor position, append to editor\n          const editorElement = document.querySelector('.editable-area');\n          if (editorElement) {\n            editorElement.appendChild(linkElement);\n          } else {\n            return {\n              success: false,\n              error: 'No cursor position found and no editor element',\n              command: 'CREATE_LINK'\n            };\n          }\n        }\n\n        return {\n          success: true,\n          command: 'CREATE_LINK',\n          value: normalizedUrl\n        };\n      } else {\n        // Text is selected - use document.execCommand to create link\n        const result = document.execCommand('createLink', false, normalizedUrl);\n\n        if (!result) {\n          return {\n            success: false,\n            error: 'Failed to create link',\n            command: 'CREATE_LINK',\n            value: normalizedUrl\n          };\n        }\n\n        // Find the newly created link and add target and rel attributes\n        // We need to do this immediately after the execCommand\n        setTimeout(() => {\n          const currentSelection = window.getSelection();\n          if (currentSelection && currentSelection.rangeCount > 0) {\n            const linkElement = this.findLinkInSelection(currentSelection);\n            \n            if (linkElement) {\n              linkElement.setAttribute('target', '_blank');\n              linkElement.setAttribute('rel', 'noopener noreferrer');\n            } else {\n              // Fallback: find all links with the URL we just created\n              const editorElement = document.querySelector('.editable-area');\n              if (editorElement) {\n                const links = editorElement.querySelectorAll(`a[href=\"${normalizedUrl}\"]`);\n                links.forEach(link => {\n                  if (!link.hasAttribute('target')) {\n                    link.setAttribute('target', '_blank');\n                    link.setAttribute('rel', 'noopener noreferrer');\n                  }\n                });\n              }\n            }\n          }\n        }, 0);\n\n        return {\n          success: true,\n          command: 'CREATE_LINK',\n          value: normalizedUrl\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: `Link creation error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'CREATE_LINK',\n        value: normalizedUrl\n      };\n    }\n  }\n\n\n\n  /**\n   * Edit an existing hyperlink\n   */\n  private editLink(url?: string): CommandExecutionResult {\n    const selection = window.getSelection();\n\n    if (!selection || !selection.rangeCount) {\n      return {\n        success: false,\n        error: 'No selection available',\n        command: 'EDIT_LINK'\n      };\n    }\n\n    // Find the link element in the current selection\n    const linkElement = this.findLinkInSelection(selection);\n\n    if (!linkElement) {\n      return {\n        success: false,\n        error: 'No link found in current selection or cursor position',\n        command: 'EDIT_LINK'\n      };\n    }\n\n    // If no URL provided, return error (should be handled by modal)\n    let newUrl = url;\n    if (!newUrl) {\n      return {\n        success: false,\n        error: 'URL is required to edit the link',\n        command: 'EDIT_LINK'\n      };\n    }\n\n    // If empty URL provided, remove the link\n    if (!newUrl || newUrl.trim() === '') {\n      return this.removeLinkElement(linkElement);\n    }\n\n    // Validate and normalize URL\n    const normalizedUrl = this.normalizeUrl(newUrl);\n    if (!normalizedUrl) {\n      return {\n        success: false,\n        error: 'Invalid URL provided',\n        command: 'EDIT_LINK',\n        value: newUrl\n      };\n    }\n\n    try {\n      // Update the href attribute\n      linkElement.setAttribute('href', normalizedUrl);\n      \n      // Ensure the link has proper target and rel attributes\n      if (!linkElement.hasAttribute('target')) {\n        linkElement.setAttribute('target', '_blank');\n      }\n      if (!linkElement.hasAttribute('rel')) {\n        linkElement.setAttribute('rel', 'noopener noreferrer');\n      }\n\n      return {\n        success: true,\n        command: 'EDIT_LINK',\n        value: normalizedUrl\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Link editing error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'EDIT_LINK',\n        value: normalizedUrl\n      };\n    }\n  }\n\n  /**\n   * Find a link element in the current selection or cursor position\n   */\n  private findLinkInSelection(selection: Selection): HTMLAnchorElement | null {\n    if (!selection.rangeCount) return null;\n\n    const range = selection.getRangeAt(0);\n    let element = range.commonAncestorContainer;\n\n    // If the common ancestor is a text node, get its parent element\n    if (element.nodeType === Node.TEXT_NODE) {\n      element = element.parentElement!;\n    }\n\n    // Check if the element itself is a link\n    if (element instanceof HTMLAnchorElement) {\n      return element;\n    }\n\n    // Check if the element is inside a link\n    const linkElement = (element as Element).closest('a');\n    if (linkElement instanceof HTMLAnchorElement) {\n      return linkElement;\n    }\n\n    // Check if the selection contains a link\n    const selectedContent = range.cloneContents();\n    const linkInSelection = selectedContent.querySelector('a');\n    if (linkInSelection) {\n      // Find the corresponding link in the actual document\n      const walker = document.createTreeWalker(\n        range.commonAncestorContainer,\n        NodeFilter.SHOW_ELEMENT,\n        {\n          acceptNode: (node) => {\n            return node instanceof HTMLAnchorElement ?\n              NodeFilter.FILTER_ACCEPT :\n              NodeFilter.FILTER_SKIP;\n          }\n        }\n      );\n\n      let currentLink = walker.nextNode();\n      while (currentLink) {\n        if (range.intersectsNode(currentLink)) {\n          return currentLink as HTMLAnchorElement;\n        }\n        currentLink = walker.nextNode();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Remove a link element while preserving its text content\n   */\n  private removeLinkElement(linkElement: HTMLAnchorElement): CommandExecutionResult {\n    try {\n      const textContent = linkElement.textContent || '';\n      const textNode = document.createTextNode(textContent);\n\n      // Replace the link element with its text content\n      linkElement.parentNode?.replaceChild(textNode, linkElement);\n\n      return {\n        success: true,\n        command: 'EDIT_LINK',\n        value: 'Link removed'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Error removing link: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'EDIT_LINK'\n      };\n    }\n  }\n\n  /**\n   * Check if the current selection or cursor is within a link\n   */\n  private isInLink(): boolean {\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) {\n      return false;\n    }\n\n    return this.findLinkInSelection(selection) !== null;\n  }\n\n  /**\n   * Insert an image into the editor with enhanced positioning\n   */\n  public insertImage(imageUrl: string, options?: {\n    width?: number;\n    height?: number;\n    alignment?: 'left' | 'center' | 'right' | 'none';\n    float?: 'left' | 'right' | 'none';\n    alt?: string;\n  }): CommandExecutionResult {\n    // Validate image URL\n    if (!this.isValidImageUrl(imageUrl)) {\n      return {\n        success: false,\n        error: 'Invalid image URL provided',\n        command: 'INSERT_IMAGE',\n        value: imageUrl\n      };\n    }\n\n    try {\n      // Create image element with enhanced attributes\n      const img = document.createElement('img');\n      img.src = imageUrl;\n      img.alt = options?.alt || 'Inserted image';\n      img.className = 'editor-image';\n      img.draggable = true;\n\n      // Set initial styling\n      img.style.maxWidth = '100%';\n      img.style.height = 'auto';\n      img.style.cursor = 'pointer';\n      img.style.border = '2px solid transparent';\n      img.style.borderRadius = '4px';\n      img.style.transition = 'all 0.2s ease';\n\n      // Apply custom dimensions if provided\n      if (options?.width) {\n        img.style.width = `${options.width}px`;\n      }\n      if (options?.height) {\n        img.style.height = `${options.height}px`;\n      }\n\n      // Apply alignment\n      if (options?.alignment) {\n        this.applyImageAlignment(img, options.alignment);\n      }\n\n      // Apply float\n      if (options?.float && options.float !== 'none') {\n        this.applyImageFloat(img, options.float);\n      }\n\n      // Add hover effects\n      img.addEventListener('mouseenter', () => {\n        img.style.borderColor = '#3b82f6';\n        img.style.boxShadow = '0 4px 12px rgba(59, 130, 246, 0.15)';\n      });\n\n      img.addEventListener('mouseleave', () => {\n        img.style.borderColor = 'transparent';\n        img.style.boxShadow = 'none';\n      });\n\n      // Insert the image at cursor position or at the end\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n\n        // If we're inside a text node, we might want to create a new paragraph\n        const container = range.commonAncestorContainer;\n        if (container.nodeType === Node.TEXT_NODE && container.textContent?.trim()) {\n          // Split the text node and insert image in between\n          const textNode = container as Text;\n          const beforeText = textNode.textContent?.substring(0, range.startOffset) || '';\n          const afterText = textNode.textContent?.substring(range.endOffset) || '';\n\n          if (beforeText || afterText) {\n            // Create paragraph structure\n            const beforeP = document.createElement('p');\n            const afterP = document.createElement('p');\n            const imgP = document.createElement('p');\n\n            if (beforeText) beforeP.textContent = beforeText;\n            imgP.appendChild(img);\n            if (afterText) afterP.textContent = afterText;\n\n            // Replace the text node with the new structure\n            const parent = textNode.parentNode;\n            if (parent) {\n              parent.insertBefore(beforeText ? beforeP : imgP, textNode);\n              if (beforeText) parent.insertBefore(imgP, textNode);\n              if (afterText) parent.insertBefore(afterP, textNode);\n              parent.removeChild(textNode);\n            }\n          } else {\n            range.deleteContents();\n            range.insertNode(img);\n          }\n        } else {\n          range.deleteContents();\n          range.insertNode(img);\n        }\n\n        // Move cursor after the image\n        range.setStartAfter(img);\n        range.setEndAfter(img);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else {\n        // No selection, append to the end of the editor\n        const editorElement = document.querySelector('.editable-area');\n        if (editorElement) {\n          const p = document.createElement('p');\n          p.appendChild(img);\n          editorElement.appendChild(p);\n        } else {\n          return {\n            success: false,\n            error: 'No cursor position found and no editor element',\n            command: 'INSERT_IMAGE'\n          };\n        }\n      }\n\n      return {\n        success: true,\n        command: 'INSERT_IMAGE',\n        value: imageUrl\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Image insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_IMAGE',\n        value: imageUrl\n      };\n    }\n  }\n\n  /**\n   * Apply alignment to an image element\n   */\n  private applyImageAlignment(img: HTMLImageElement, alignment: 'left' | 'center' | 'right' | 'none') {\n    switch (alignment) {\n      case 'left':\n        img.style.display = 'block';\n        img.style.marginLeft = '0';\n        img.style.marginRight = 'auto';\n        break;\n      case 'center':\n        img.style.display = 'block';\n        img.style.marginLeft = 'auto';\n        img.style.marginRight = 'auto';\n        break;\n      case 'right':\n        img.style.display = 'block';\n        img.style.marginLeft = 'auto';\n        img.style.marginRight = '0';\n        break;\n      case 'none':\n        img.style.display = 'inline-block';\n        img.style.marginLeft = '';\n        img.style.marginRight = '';\n        break;\n    }\n  }\n\n  /**\n   * Apply float to an image element\n   */\n  private applyImageFloat(img: HTMLImageElement, float: 'left' | 'right') {\n    img.style.float = float;\n    img.style.margin = float === 'left' ? '0 15px 10px 0' : '0 0 10px 15px';\n  }\n\n  /**\n   * Trigger image file upload\n   */\n  private triggerImageUpload(): CommandExecutionResult {\n    try {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n      input.style.display = 'none';\n\n      input.onchange = (event) => {\n        const file = (event.target as HTMLInputElement).files?.[0];\n        if (!file) {\n          return;\n        }\n\n        // Validate file type\n        if (!file.type.startsWith('image/')) {\n          console.error('Selected file is not an image');\n          return;\n        }\n\n        // Validate file size (max 5MB)\n        const maxSize = 5 * 1024 * 1024; // 5MB\n        if (file.size > maxSize) {\n          console.error('Image file is too large (max 5MB)');\n          return;\n        }\n\n        // Convert to data URL\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const dataUrl = e.target?.result as string;\n          this.insertImage(dataUrl);\n        };\n        reader.onerror = () => {\n          console.error('Failed to read image file');\n        };\n        reader.readAsDataURL(file);\n      };\n\n      document.body.appendChild(input);\n      input.click();\n      document.body.removeChild(input);\n\n      return {\n        success: true,\n        command: 'INSERT_IMAGE',\n        value: 'File upload triggered'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `File upload error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_IMAGE'\n      };\n    }\n  }\n\n  /**\n   * Upload and insert a file\n   */\n  private uploadFile(fileUrl?: string): CommandExecutionResult {\n    if (fileUrl) {\n      // Insert file link directly\n      return this.insertFileLink(fileUrl);\n    }\n\n    try {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n\n      input.onchange = (event) => {\n        const file = (event.target as HTMLInputElement).files?.[0];\n        if (!file) {\n          return;\n        }\n\n        // Validate file size (max 10MB)\n        const maxSize = 10 * 1024 * 1024; // 10MB\n        if (file.size > maxSize) {\n          console.error('File is too large (max 10MB)');\n          return;\n        }\n\n        // For demo purposes, create a blob URL\n        // In a real application, you would upload to a server\n        const blobUrl = URL.createObjectURL(file);\n        this.insertFileLink(blobUrl, file.name, file.type);\n      };\n\n      document.body.appendChild(input);\n      input.click();\n      document.body.removeChild(input);\n\n      return {\n        success: true,\n        command: 'UPLOAD_FILE',\n        value: 'File upload triggered'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `File upload error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'UPLOAD_FILE'\n      };\n    }\n  }\n\n  /**\n   * Insert a file link into the editor\n   */\n  private insertFileLink(url: string, fileName?: string, fileType?: string): CommandExecutionResult {\n    try {\n      // Create file link element\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = fileName || 'download';\n      link.target = '_blank';\n      link.rel = 'noopener noreferrer';\n\n      // Set link text based on file type\n      const displayName = fileName || 'Download File';\n      const fileIcon = this.getFileIcon(fileType);\n      link.innerHTML = `${fileIcon} ${displayName}`;\n\n      // Style the file link\n      link.style.display = 'inline-block';\n      link.style.padding = '8px 12px';\n      link.style.margin = '4px';\n      link.style.backgroundColor = '#f0f0f0';\n      link.style.border = '1px solid #ccc';\n      link.style.borderRadius = '4px';\n      link.style.textDecoration = 'none';\n      link.style.color = '#333';\n\n      // Insert the link at cursor position\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(link);\n\n        // Move cursor after the link\n        range.setStartAfter(link);\n        range.setEndAfter(link);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else {\n        return {\n          success: false,\n          error: 'No cursor position found',\n          command: 'UPLOAD_FILE'\n        };\n      }\n\n      return {\n        success: true,\n        command: 'UPLOAD_FILE',\n        value: url\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `File insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'UPLOAD_FILE',\n        value: url\n      };\n    }\n  }\n\n  /**\n   * Get file icon based on file type\n   */\n  private getFileIcon(fileType?: string): string {\n    if (!fileType) return '📄';\n\n    if (fileType.startsWith('image/')) return '🖼️';\n    if (fileType.startsWith('video/')) return '🎥';\n    if (fileType.startsWith('audio/')) return '🎵';\n    if (fileType.includes('pdf')) return '📕';\n    if (fileType.includes('word') || fileType.includes('document')) return '📝';\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return '📊';\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return '📊';\n    if (fileType.includes('zip') || fileType.includes('archive')) return '🗜️';\n\n    return '📄';\n  }\n\n  /**\n   * Insert a table into the editor\n   */\n  private insertTable(tableConfig?: string): CommandExecutionResult {\n    try {\n      // Parse table configuration (rows,cols,hasHeaders)\n      const config = tableConfig ? tableConfig.split(',') : ['3', '3', 'true'];\n      const rows = parseInt(config[0]) || 3;\n      const cols = parseInt(config[1]) || 3;\n      const hasHeaders = config[2] === 'true';\n\n      // Create table element\n      const table = document.createElement('table');\n      table.className = 'editor-table';\n      table.style.borderCollapse = 'collapse';\n      table.style.width = '100%';\n      table.style.border = '1px solid #ccc';\n      table.style.margin = '10px 0';\n\n      const tbody = document.createElement('tbody');\n\n      for (let i = 0; i < rows; i++) {\n        const row = document.createElement('tr');\n\n        for (let j = 0; j < cols; j++) {\n          const cell = document.createElement(hasHeaders && i === 0 ? 'th' : 'td');\n          cell.style.border = '1px solid #ccc';\n          cell.style.padding = '8px';\n          cell.style.minWidth = '50px';\n          cell.style.minHeight = '20px';\n\n          if (hasHeaders && i === 0) {\n            cell.style.backgroundColor = '#f5f5f5';\n            cell.style.fontWeight = 'bold';\n            cell.textContent = `Header ${j + 1}`;\n          } else {\n            cell.innerHTML = '&nbsp;';\n          }\n\n          row.appendChild(cell);\n        }\n\n        tbody.appendChild(row);\n      }\n\n      table.appendChild(tbody);\n\n      // Insert table at cursor position\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(table);\n\n        // Move cursor to first cell\n        const firstCell = table.querySelector('td, th');\n        if (firstCell) {\n          range.selectNodeContents(firstCell);\n          range.collapse(true);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        }\n      } else {\n        return {\n          success: false,\n          error: 'No cursor position found',\n          command: 'INSERT_TABLE'\n        };\n      }\n\n      return {\n        success: true,\n        command: 'INSERT_TABLE',\n        value: `${rows}x${cols} table inserted`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Table insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_TABLE'\n      };\n    }\n  }\n\n  /**\n   * Insert a special character\n   */\n  private insertSpecialChar(char?: string): CommandExecutionResult {\n    if (!char) {\n      return {\n        success: false,\n        error: 'No character specified',\n        command: 'INSERT_SPECIAL_CHAR'\n      };\n    }\n\n    try {\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(document.createTextNode(char));\n\n        // Move cursor after the character\n        range.setStartAfter(range.endContainer);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else {\n        return {\n          success: false,\n          error: 'No cursor position found',\n          command: 'INSERT_SPECIAL_CHAR'\n        };\n      }\n\n      return {\n        success: true,\n        command: 'INSERT_SPECIAL_CHAR',\n        value: char\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Special character insertion error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'INSERT_SPECIAL_CHAR'\n      };\n    }\n  }\n\n  /**\n   * Find and replace functionality\n   * Note: This function should not be called directly anymore\n   * Find/replace is now handled by the modal system in the WYSIWYGEditor component\n   */\n  private findReplace(): CommandExecutionResult {\n    return {\n      success: false,\n      error: 'Find and replace should be handled by the modal system',\n      command: 'FIND_REPLACE'\n    };\n  }\n\n  /**\n   * Toggle source code view\n   */\n  private toggleSourceCode(): CommandExecutionResult {\n    try {\n      const editorElement = document.querySelector('.editable-area') as HTMLElement;\n      if (!editorElement) {\n        return {\n          success: false,\n          error: 'Editor element not found',\n          command: 'SOURCE_CODE'\n        };\n      }\n\n      // Check if we're currently in source mode\n      const isSourceMode = editorElement.getAttribute('data-source-mode') === 'true';\n\n      if (isSourceMode) {\n        // Switch back to WYSIWYG mode\n        const sourceContent = editorElement.textContent || '';\n        editorElement.innerHTML = sourceContent;\n        editorElement.contentEditable = 'true';\n        editorElement.removeAttribute('data-source-mode');\n        editorElement.style.fontFamily = '';\n        editorElement.style.whiteSpace = '';\n      } else {\n        // Switch to source mode\n        const htmlContent = editorElement.innerHTML;\n        editorElement.textContent = htmlContent;\n        editorElement.contentEditable = 'true';\n        editorElement.setAttribute('data-source-mode', 'true');\n        editorElement.style.fontFamily = 'monospace';\n        editorElement.style.whiteSpace = 'pre-wrap';\n      }\n\n      return {\n        success: true,\n        command: 'SOURCE_CODE',\n        value: isSourceMode ? 'WYSIWYG mode' : 'Source mode'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Source code toggle error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'SOURCE_CODE'\n      };\n    }\n  }\n\n  /**\n   * Toggle fullscreen mode\n   */\n  private toggleFullscreen(): CommandExecutionResult {\n    try {\n      const editorContainer = document.querySelector('.wysiwyg-editor') as HTMLElement;\n      if (!editorContainer) {\n        return {\n          success: false,\n          error: 'Editor container not found',\n          command: 'FULLSCREEN'\n        };\n      }\n\n      const isFullscreen = editorContainer.classList.contains('fullscreen');\n\n      if (isFullscreen) {\n        // Exit fullscreen\n        editorContainer.classList.remove('fullscreen');\n        document.body.style.overflow = '';\n      } else {\n        // Enter fullscreen\n        editorContainer.classList.add('fullscreen');\n        document.body.style.overflow = 'hidden';\n      }\n\n      return {\n        success: true,\n        command: 'FULLSCREEN',\n        value: isFullscreen ? 'Exited fullscreen' : 'Entered fullscreen'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Fullscreen toggle error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'FULLSCREEN'\n      };\n    }\n  }\n\n  /**\n   * Print document\n   */\n  private printDocument(): CommandExecutionResult {\n    try {\n      const editorElement = document.querySelector('.editable-area') as HTMLElement;\n      if (!editorElement) {\n        return {\n          success: false,\n          error: 'Editor element not found',\n          command: 'PRINT'\n        };\n      }\n\n      // Create a new window for printing\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        return {\n          success: false,\n          error: 'Could not open print window',\n          command: 'PRINT'\n        };\n      }\n\n      const content = editorElement.innerHTML;\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Print Document</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 20px; }\n            table { border-collapse: collapse; width: 100%; }\n            th, td { border: 1px solid #ccc; padding: 8px; }\n            th { background-color: #f5f5f5; font-weight: bold; }\n            img { max-width: 100%; height: auto; }\n          </style>\n        </head>\n        <body>\n          ${content}\n        </body>\n        </html>\n      `);\n\n      printWindow.document.close();\n      printWindow.focus();\n      printWindow.print();\n      printWindow.close();\n\n      return {\n        success: true,\n        command: 'PRINT',\n        value: 'Print dialog opened'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Print error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'PRINT'\n      };\n    }\n  }\n\n  /**\n   * Toggle spell check\n   */\n  private toggleSpellCheck(): CommandExecutionResult {\n    try {\n      const editorElement = document.querySelector('.editable-area') as HTMLElement;\n      if (!editorElement) {\n        return {\n          success: false,\n          error: 'Editor element not found',\n          command: 'SPELL_CHECK'\n        };\n      }\n\n      const currentSpellCheck = editorElement.spellcheck;\n      editorElement.spellcheck = !currentSpellCheck;\n\n      return {\n        success: true,\n        command: 'SPELL_CHECK',\n        value: currentSpellCheck ? 'Spell check disabled' : 'Spell check enabled'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Spell check toggle error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'SPELL_CHECK'\n      };\n    }\n  }\n\n  /**\n   * Validate if URL is a valid image URL\n   */\n  private isValidImageUrl(url: string): boolean {\n    if (!url || url.trim() === '') return false;\n\n    // Check for data URLs (base64 images)\n    if (url.startsWith('data:image/')) return true;\n\n    // Check for blob URLs\n    if (url.startsWith('blob:')) return true;\n\n    // Basic URL validation\n    try {\n      new URL(url);\n      // Check if URL ends with common image extensions\n      const imageExtensions = /\\.(jpg|jpeg|png|gif|bmp|webp|svg)(\\?.*)?$/i;\n      return imageExtensions.test(url);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Set font color for selected text or future text input\n   */\n  private setFontColor(color?: string): CommandExecutionResult {\n    if (!color) {\n      return {\n        success: false,\n        error: 'Color value is required',\n        command: 'FONT_COLOR'\n      };\n    }\n\n    try {\n      // Use document.execCommand for font color\n      const result = document.execCommand('foreColor', false, color);\n\n      if (!result) {\n        return {\n          success: false,\n          error: 'Failed to set font color',\n          command: 'FONT_COLOR',\n          value: color\n        };\n      }\n\n      return {\n        success: true,\n        command: 'FONT_COLOR',\n        value: color\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Font color error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'FONT_COLOR',\n        value: color\n      };\n    }\n  }\n\n  /**\n   * Set background color for selected text or future text input\n   */\n  private setBackgroundColor(color?: string): CommandExecutionResult {\n    if (!color) {\n      return {\n        success: false,\n        error: 'Color value is required',\n        command: 'BACKGROUND_COLOR'\n      };\n    }\n\n    try {\n      // Use document.execCommand for background color\n      const result = document.execCommand('backColor', false, color);\n\n      if (!result) {\n        return {\n          success: false,\n          error: 'Failed to set background color',\n          command: 'BACKGROUND_COLOR',\n          value: color\n        };\n      }\n\n      return {\n        success: true,\n        command: 'BACKGROUND_COLOR',\n        value: color\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Background color error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        command: 'BACKGROUND_COLOR',\n        value: color\n      };\n    }\n  }\n\n  /**\n   * Normalize and validate URL\n   */\n  private normalizeUrl(url: string): string | null {\n    if (!url || url.trim() === '') {\n      return null;\n    }\n\n    const trimmedUrl = url.trim();\n\n    // Basic URL validation\n    try {\n      // If URL doesn't have a protocol, assume http://\n      if (!/^https?:\\/\\//i.test(trimmedUrl)) {\n        // Check if it looks like an email\n        if (trimmedUrl.includes('@') && !trimmedUrl.includes(' ')) {\n          return `mailto:${trimmedUrl}`;\n        }\n        // Otherwise assume it's a web URL\n        return `http://${trimmedUrl}`;\n      }\n\n      // Validate the URL by creating a URL object\n      new URL(trimmedUrl);\n      return trimmedUrl;\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\n// Export singleton instance\nexport const commandExecutor = CommandExecutor.getInstance();","import {\n  ToolbarConfig,\n  ResolvedToolbarConfig,\n  ToolbarCategory,\n  ToolbarButtonType,\n  ToolbarGroup\n} from '../types';\n\n/**\n * Cache for resolved toolbar configurations to prevent unnecessary reprocessing\n */\nconst configCache = new Map<string, ResolvedToolbarConfig>();\n\n/**\n * Maximum cache size to prevent memory leaks\n */\nconst MAX_CACHE_SIZE = 100;\n\n/**\n * Utility class for processing and resolving toolbar configurations\n */\nexport class ToolbarConfigResolver {\n  /**\n   * Validates if a configuration object has the correct structure\n   * @param config - The configuration to validate\n   * @returns True if the configuration is valid, false otherwise\n   */\n  private static validateConfigStructure(config: any): config is ToolbarConfig {\n    if (config === null || config === undefined) {\n      return true; // null/undefined are valid (will use defaults)\n    }\n\n    if (typeof config !== 'object' || Array.isArray(config)) {\n      console.warn('Toolbar configuration must be an object, received:', Array.isArray(config) ? 'array' : typeof config);\n      return false;\n    }\n\n    // Check preset property\n    if (config.preset !== undefined) {\n      if (typeof config.preset !== 'string') {\n        console.warn('Toolbar configuration preset must be a string, received:', typeof config.preset);\n        return false;\n      }\n    }\n\n    // Check include property\n    if (config.include !== undefined) {\n      if (typeof config.include !== 'object' || config.include === null) {\n        console.warn('Toolbar configuration include must be an object, received:', typeof config.include);\n        return false;\n      }\n\n      const { categories, buttons, groups } = config.include;\n\n      if (categories !== undefined && !Array.isArray(categories)) {\n        console.warn('Toolbar configuration include.categories must be an array, received:', typeof categories);\n        return false;\n      }\n\n      if (buttons !== undefined && !Array.isArray(buttons)) {\n        console.warn('Toolbar configuration include.buttons must be an array, received:', typeof buttons);\n        return false;\n      }\n\n      if (groups !== undefined) {\n        if (!Array.isArray(groups)) {\n          console.warn('Toolbar configuration include.groups must be an array, received:', typeof groups);\n          return false;\n        }\n\n        for (let i = 0; i < groups.length; i++) {\n          const group = groups[i];\n          if (typeof group !== 'object' || group === null) {\n            console.warn(`Toolbar configuration include.groups[${i}] must be an object, received:`, typeof group);\n            return false;\n          }\n\n          if (typeof group.name !== 'string') {\n            console.warn(`Toolbar configuration include.groups[${i}].name must be a string, received:`, typeof group.name);\n            return false;\n          }\n\n          if (!Array.isArray(group.buttons)) {\n            console.warn(`Toolbar configuration include.groups[${i}].buttons must be an array, received:`, typeof group.buttons);\n            return false;\n          }\n        }\n      }\n    }\n\n    // Check exclude property\n    if (config.exclude !== undefined) {\n      if (typeof config.exclude !== 'object' || config.exclude === null) {\n        console.warn('Toolbar configuration exclude must be an object, received:', typeof config.exclude);\n        return false;\n      }\n\n      const { categories, buttons } = config.exclude;\n\n      if (categories !== undefined && !Array.isArray(categories)) {\n        console.warn('Toolbar configuration exclude.categories must be an array, received:', typeof categories);\n        return false;\n      }\n\n      if (buttons !== undefined && !Array.isArray(buttons)) {\n        console.warn('Toolbar configuration exclude.buttons must be an array, received:', typeof buttons);\n        return false;\n      }\n    }\n\n    // Check order property\n    if (config.order !== undefined) {\n      if (!Array.isArray(config.order)) {\n        console.warn('Toolbar configuration order must be an array, received:', typeof config.order);\n        return false;\n      }\n\n      for (let i = 0; i < config.order.length; i++) {\n        const item = config.order[i];\n        if (typeof item !== 'string' && (typeof item !== 'object' || item === null)) {\n          console.warn(`Toolbar configuration order[${i}] must be a string or object, received:`, typeof item);\n          return false;\n        }\n\n        if (typeof item === 'object') {\n          if (typeof item.name !== 'string') {\n            console.warn(`Toolbar configuration order[${i}].name must be a string, received:`, typeof item.name);\n            return false;\n          }\n\n          if (!Array.isArray(item.buttons)) {\n            console.warn(`Toolbar configuration order[${i}].buttons must be an array, received:`, typeof item.buttons);\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Sanitizes a configuration object by removing invalid properties\n   * @param config - The configuration to sanitize\n   * @returns A sanitized configuration object\n   */\n  private static sanitizeConfig(config: any): ToolbarConfig | undefined {\n    if (!config || typeof config !== 'object') {\n      return undefined;\n    }\n\n    const sanitized: ToolbarConfig = {};\n\n    // Sanitize preset\n    if (typeof config.preset === 'string') {\n      sanitized.preset = config.preset as any;\n    }\n\n    // Sanitize include\n    if (config.include && typeof config.include === 'object') {\n      sanitized.include = {};\n\n      if (Array.isArray(config.include.categories)) {\n        sanitized.include.categories = config.include.categories.filter((cat: any) => \n          typeof cat === 'string'\n        );\n      }\n\n      if (Array.isArray(config.include.buttons)) {\n        sanitized.include.buttons = config.include.buttons.filter((btn: any) => \n          typeof btn === 'string'\n        );\n      }\n\n      if (Array.isArray(config.include.groups)) {\n        sanitized.include.groups = config.include.groups\n          .filter((group: any) => \n            group && \n            typeof group === 'object' && \n            typeof group.name === 'string' && \n            Array.isArray(group.buttons)\n          )\n          .map((group: any) => ({\n            name: group.name,\n            buttons: group.buttons.filter((btn: any) => typeof btn === 'string')\n          }))\n          .filter((group: any) => group.buttons.length > 0);\n      }\n    }\n\n    // Sanitize exclude\n    if (config.exclude && typeof config.exclude === 'object') {\n      sanitized.exclude = {};\n\n      if (Array.isArray(config.exclude.categories)) {\n        sanitized.exclude.categories = config.exclude.categories.filter((cat: any) => \n          typeof cat === 'string'\n        );\n      }\n\n      if (Array.isArray(config.exclude.buttons)) {\n        sanitized.exclude.buttons = config.exclude.buttons.filter((btn: any) => \n          typeof btn === 'string'\n        );\n      }\n    }\n\n    // Sanitize order\n    if (Array.isArray(config.order)) {\n      sanitized.order = config.order\n        .filter((item: any) => {\n          if (typeof item === 'string') {\n            return true;\n          }\n          if (item && typeof item === 'object' && typeof item.name === 'string' && Array.isArray(item.buttons)) {\n            return true;\n          }\n          return false;\n        })\n        .map((item: any) => {\n          if (typeof item === 'string') {\n            return item;\n          }\n          return {\n            name: item.name,\n            buttons: item.buttons.filter((btn: any) => typeof btn === 'string')\n          };\n        });\n    }\n\n    return sanitized;\n  }\n  /**\n   * Static mapping of toolbar categories to their respective button arrays\n   */\n  private static readonly CATEGORY_MAPPINGS: Record<ToolbarCategory, ToolbarButtonType[]> = {\n    formatting: ['bold', 'italic', 'underline', 'strikethrough', 'subscript', 'superscript'],\n    structure: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n    lists: ['bulletList', 'numberedList', 'indent', 'outdent'],\n    alignment: ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify'],\n    media: ['image', 'file', 'table'],\n    links: ['link', 'unlink'],\n    advanced: [\n      'fontColor', 'backgroundColor', 'fontSize', 'fontFamily', \n      'specialChar', 'horizontalRule', 'findReplace', 'sourceCode', \n      'fullscreen', 'print', 'undo', 'redo', 'removeFormat'\n    ]\n  };\n\n  /**\n   * Static preset configurations for common toolbar setups\n   */\n  private static readonly PRESETS: Record<string, ToolbarButtonType[]> = {\n    minimal: ['bold', 'italic', 'underline'],\n    standard: [\n      'bold', 'italic', 'underline', 'h1', 'h2', 'h3', \n      'bulletList', 'numberedList', 'link', 'image'\n    ],\n    full: [\n      // All available buttons\n      'bold', 'italic', 'underline', 'strikethrough',\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n      'bulletList', 'numberedList', 'indent', 'outdent',\n      'alignLeft', 'alignCenter', 'alignRight', 'alignJustify',\n      'image', 'file', 'table',\n      'link', 'unlink',\n      'fontColor', 'backgroundColor', 'fontSize', 'fontFamily',\n      'subscript', 'superscript', 'specialChar', 'horizontalRule',\n      'findReplace', 'sourceCode', 'fullscreen', 'print',\n      'undo', 'redo', 'removeFormat'\n    ]\n  };\n\n  /**\n   * Pre-computed set of all valid buttons for O(1) validation\n   */\n  private static readonly VALID_BUTTONS = new Set<ToolbarButtonType>(\n    Object.values(this.CATEGORY_MAPPINGS).flat()\n  );\n\n  /**\n   * Main method to resolve a toolbar configuration into a processed configuration\n   * @param config - The toolbar configuration to process\n   * @returns Resolved toolbar configuration with groups and enabled buttons\n   */\n  static resolve(config?: ToolbarConfig): ResolvedToolbarConfig {\n    let processedConfig = config;\n\n    // Step 0: Validate and sanitize configuration\n    try {\n      if (config !== undefined && config !== null) {\n        // Validate configuration structure\n        if (!this.validateConfigStructure(config)) {\n          console.warn('Invalid toolbar configuration structure detected, attempting to sanitize...');\n          processedConfig = this.sanitizeConfig(config);\n          \n          if (!processedConfig) {\n            console.warn('Configuration could not be sanitized, falling back to default configuration');\n            return this.createFallbackConfig();\n          }\n        }\n      }\n    } catch (error) {\n      console.warn('Error validating toolbar configuration, falling back to default:', error);\n      return this.createFallbackConfig();\n    }\n\n    // Generate cache key for the configuration\n    const cacheKey = this.generateCacheKey(processedConfig);\n    \n    // Check if we have a cached result\n    const cachedResult = configCache.get(cacheKey);\n    if (cachedResult) {\n      // Return a deep clone to prevent mutations affecting cached data\n      return this.cloneResolvedConfig(cachedResult);\n    }\n\n    try {\n      // Start with empty button set\n      let buttons: ToolbarButtonType[] = [];\n\n      // Step 1: Apply preset if specified\n      if (processedConfig?.preset !== undefined) {\n        buttons = this.applyPreset(processedConfig.preset);\n      }\n\n      // Step 2: Process includes (add to buttons)\n      if (processedConfig?.include) {\n        const includedButtons = this.processIncludes(processedConfig.include);\n        // Merge with existing buttons, avoiding duplicates using Set for O(1) lookups\n        const buttonSet = new Set([...buttons, ...includedButtons]);\n        buttons = Array.from(buttonSet);\n      }\n\n      // Step 3: Process excludes (remove from buttons)\n      if (processedConfig?.exclude) {\n        buttons = this.processExcludes(buttons, processedConfig.exclude);\n      }\n\n      // If no configuration provided or no buttons after processing, use full preset\n      if (!processedConfig || buttons.length === 0) {\n        buttons = [...this.PRESETS.full]; // Create a copy to avoid mutations\n      }\n\n      // Step 4: Apply custom ordering if specified, or use groups from include\n      const groups = this.applyOrder(buttons, processedConfig?.order, processedConfig?.include?.groups);\n\n      const result: ResolvedToolbarConfig = {\n        groups,\n        enabledButtons: new Set(buttons)\n      };\n\n      // Cache the result\n      this.cacheResult(cacheKey, result);\n\n      return result;\n    } catch (error) {\n      console.warn('Error processing toolbar configuration, falling back to default:', error);\n      return this.createFallbackConfig();\n    }\n  }\n\n  /**\n   * Creates a fallback configuration when the main configuration fails\n   * @returns A safe fallback configuration\n   */\n  private static createFallbackConfig(): ResolvedToolbarConfig {\n    return {\n      groups: [{ name: 'default', buttons: [...this.PRESETS.full] }],\n      enabledButtons: new Set(this.PRESETS.full)\n    };\n  }\n\n  /**\n   * Apply a preset configuration\n   * @param preset - The preset name to apply\n   * @returns Array of toolbar buttons for the preset\n   */\n  private static applyPreset(preset: string): ToolbarButtonType[] {\n    // Validate preset is a string\n    if (typeof preset !== 'string') {\n      console.warn(`Preset must be a string, received ${typeof preset}, falling back to full preset`);\n      return [...this.PRESETS.full];\n    }\n\n    // Trim whitespace and convert to lowercase for case-insensitive matching\n    const normalizedPreset = preset.trim().toLowerCase();\n    \n    if (normalizedPreset === '') {\n      console.warn('Empty preset name provided, falling back to full preset');\n      return [...this.PRESETS.full];\n    }\n\n    const presetButtons = this.PRESETS[normalizedPreset];\n    if (!presetButtons) {\n      const availablePresets = Object.keys(this.PRESETS).join(', ');\n      console.warn(`Invalid preset \"${preset}\". Available presets: ${availablePresets}. Falling back to full preset`);\n      return [...this.PRESETS.full];\n    }\n    return [...presetButtons];\n  }\n\n  /**\n   * Process include configurations to determine which buttons to include\n   * @param include - The include configuration object\n   * @returns Array of toolbar buttons to include\n   */\n  private static processIncludes(include: ToolbarConfig['include']): ToolbarButtonType[] {\n    if (!include || typeof include !== 'object') {\n      console.warn('Include configuration must be an object, ignoring include settings');\n      return [];\n    }\n\n    // Use Set for automatic deduplication and O(1) lookups\n    const buttonSet = new Set<ToolbarButtonType>();\n\n    // Add buttons from categories\n    if (include.categories) {\n      if (!Array.isArray(include.categories)) {\n        console.warn('Include categories must be an array, ignoring categories');\n      } else {\n        for (const category of include.categories) {\n          if (typeof category !== 'string') {\n            console.warn(`Category must be a string, received ${typeof category}, ignoring this category`);\n            continue;\n          }\n\n          const normalizedCategory = category.trim() as ToolbarCategory;\n          const categoryButtons = this.CATEGORY_MAPPINGS[normalizedCategory];\n          if (categoryButtons) {\n            // Add all category buttons to set (automatic deduplication)\n            categoryButtons.forEach(button => buttonSet.add(button));\n          } else {\n            const availableCategories = Object.keys(this.CATEGORY_MAPPINGS).join(', ');\n            console.warn(`Invalid category \"${category}\". Available categories: ${availableCategories}. Category ignored`);\n          }\n        }\n      }\n    }\n\n    // Add individual buttons\n    if (include.buttons) {\n      if (!Array.isArray(include.buttons)) {\n        console.warn('Include buttons must be an array, ignoring buttons');\n      } else {\n        for (const button of include.buttons) {\n          if (typeof button !== 'string') {\n            console.warn(`Button must be a string, received ${typeof button}, ignoring this button`);\n            continue;\n          }\n\n          const normalizedButton = button.trim() as ToolbarButtonType;\n          if (this.isValidButton(normalizedButton)) {\n            buttonSet.add(normalizedButton);\n          } else {\n            const availableButtons = Array.from(this.VALID_BUTTONS).sort().join(', ');\n            console.warn(`Invalid button \"${button}\". Available buttons: ${availableButtons}. Button ignored`);\n          }\n        }\n      }\n    }\n\n    // Add buttons from groups\n    if (include.groups) {\n      if (!Array.isArray(include.groups)) {\n        console.warn('Include groups must be an array, ignoring groups');\n      } else {\n        for (let i = 0; i < include.groups.length; i++) {\n          const group = include.groups[i];\n          \n          if (!group || typeof group !== 'object') {\n            console.warn(`Group at index ${i} must be an object, ignoring this group`);\n            continue;\n          }\n\n          if (typeof group.name !== 'string') {\n            console.warn(`Group at index ${i} must have a string name, ignoring this group`);\n            continue;\n          }\n\n          if (!Array.isArray(group.buttons)) {\n            console.warn(`Group \"${group.name}\" must have a buttons array, ignoring this group`);\n            continue;\n          }\n\n          for (const button of group.buttons) {\n            if (typeof button !== 'string') {\n              console.warn(`Button in group \"${group.name}\" must be a string, received ${typeof button}, ignoring this button`);\n              continue;\n            }\n\n            const normalizedButton = button.trim() as ToolbarButtonType;\n            if (this.isValidButton(normalizedButton)) {\n              buttonSet.add(normalizedButton);\n            } else {\n              console.warn(`Invalid button \"${button}\" in group \"${group.name}\" ignored`);\n            }\n          }\n        }\n      }\n    }\n\n    // Convert Set back to Array\n    return Array.from(buttonSet);\n  }\n\n  /**\n   * Generate a cache key for the given configuration\n   * @param config - The toolbar configuration\n   * @returns A string key for caching\n   */\n  private static generateCacheKey(config?: ToolbarConfig): string {\n    if (!config) {\n      return 'default';\n    }\n    \n    try {\n      // Safely extract and normalize configuration properties\n      const safeConfig = {\n        preset: typeof config.preset === 'string' ? config.preset : undefined,\n        include: config.include && typeof config.include === 'object' ? {\n          categories: Array.isArray(config.include.categories) \n            ? config.include.categories.filter(c => typeof c === 'string').sort()\n            : undefined,\n          buttons: Array.isArray(config.include.buttons)\n            ? config.include.buttons.filter(b => typeof b === 'string').sort()\n            : undefined,\n          groups: Array.isArray(config.include.groups)\n            ? config.include.groups\n                .filter(g => g && typeof g === 'object' && typeof g.name === 'string' && Array.isArray(g.buttons))\n                .map(g => ({\n                  name: g.name,\n                  buttons: g.buttons.filter(b => typeof b === 'string').sort()\n                }))\n                .sort((a, b) => a.name.localeCompare(b.name))\n            : undefined\n        } : undefined,\n        exclude: config.exclude && typeof config.exclude === 'object' ? {\n          categories: Array.isArray(config.exclude.categories)\n            ? config.exclude.categories.filter(c => typeof c === 'string').sort()\n            : undefined,\n          buttons: Array.isArray(config.exclude.buttons)\n            ? config.exclude.buttons.filter(b => typeof b === 'string').sort()\n            : undefined\n        } : undefined,\n        order: Array.isArray(config.order) \n          ? config.order.map(item => {\n              if (typeof item === 'string') {\n                return item;\n              }\n              if (item && typeof item === 'object' && typeof item.name === 'string' && Array.isArray(item.buttons)) {\n                return {\n                  name: item.name,\n                  buttons: item.buttons.filter(b => typeof b === 'string').sort()\n                };\n              }\n              return 'invalid-order-item';\n            })\n          : undefined\n      };\n\n      // Create a deterministic string representation of the safe config\n      return JSON.stringify(safeConfig);\n    } catch (error) {\n      // If cache key generation fails, use a fallback key based on timestamp\n      // This ensures malformed configs don't break the system but won't be cached\n      console.warn('Failed to generate cache key for toolbar configuration:', error);\n      return `malformed-${Date.now()}-${Math.random()}`;\n    }\n  }\n\n  /**\n   * Create a deep clone of a resolved toolbar configuration\n   * @param config - The configuration to clone\n   * @returns A deep clone of the configuration\n   */\n  private static cloneResolvedConfig(config: ResolvedToolbarConfig): ResolvedToolbarConfig {\n    return {\n      groups: config.groups.map(group => ({\n        name: group.name,\n        buttons: [...group.buttons]\n      })),\n      enabledButtons: new Set(config.enabledButtons)\n    };\n  }\n\n  /**\n   * Cache a resolved configuration result\n   * @param key - The cache key\n   * @param result - The resolved configuration to cache\n   */\n  private static cacheResult(key: string, result: ResolvedToolbarConfig): void {\n    // Implement LRU cache behavior - remove oldest entries if cache is full\n    if (configCache.size >= MAX_CACHE_SIZE) {\n      const firstKey = configCache.keys().next().value;\n      if (firstKey) {\n        configCache.delete(firstKey);\n      }\n    }\n    \n    // Cache a deep clone to prevent mutations affecting cached data\n    configCache.set(key, this.cloneResolvedConfig(result));\n  }\n\n  /**\n   * Clear the configuration cache (useful for testing or memory management)\n   */\n  static clearCache(): void {\n    configCache.clear();\n  }\n\n  /**\n   * Get cache statistics for debugging\n   */\n  static getCacheStats(): { size: number; maxSize: number } {\n    return {\n      size: configCache.size,\n      maxSize: MAX_CACHE_SIZE\n    };\n  }\n\n  /**\n   * Process exclude configurations to remove buttons from the current set\n   * @param buttons - Current array of buttons\n   * @param exclude - The exclude configuration object\n   * @returns Array of toolbar buttons with exclusions applied\n   */\n  private static processExcludes(\n    buttons: ToolbarButtonType[], \n    exclude: ToolbarConfig['exclude']\n  ): ToolbarButtonType[] {\n    if (!exclude || typeof exclude !== 'object') {\n      console.warn('Exclude configuration must be an object, ignoring exclude settings');\n      return buttons;\n    }\n\n    // Use Set for O(1) lookups when filtering\n    const buttonsToExclude = new Set<ToolbarButtonType>();\n\n    // Collect buttons from categories to exclude\n    if (exclude.categories) {\n      if (!Array.isArray(exclude.categories)) {\n        console.warn('Exclude categories must be an array, ignoring categories');\n      } else {\n        for (const category of exclude.categories) {\n          if (typeof category !== 'string') {\n            console.warn(`Exclude category must be a string, received ${typeof category}, ignoring this category`);\n            continue;\n          }\n\n          const normalizedCategory = category.trim() as ToolbarCategory;\n          const categoryButtons = this.CATEGORY_MAPPINGS[normalizedCategory];\n          if (categoryButtons) {\n            categoryButtons.forEach(button => buttonsToExclude.add(button));\n          } else {\n            const availableCategories = Object.keys(this.CATEGORY_MAPPINGS).join(', ');\n            console.warn(`Invalid exclude category \"${category}\". Available categories: ${availableCategories}. Category ignored`);\n          }\n        }\n      }\n    }\n\n    // Add individual buttons to exclude\n    if (exclude.buttons) {\n      if (!Array.isArray(exclude.buttons)) {\n        console.warn('Exclude buttons must be an array, ignoring buttons');\n      } else {\n        for (const button of exclude.buttons) {\n          if (typeof button !== 'string') {\n            console.warn(`Exclude button must be a string, received ${typeof button}, ignoring this button`);\n            continue;\n          }\n\n          const normalizedButton = button.trim() as ToolbarButtonType;\n          if (this.isValidButton(normalizedButton)) {\n            buttonsToExclude.add(normalizedButton);\n          } else {\n            const availableButtons = Array.from(this.VALID_BUTTONS).sort().join(', ');\n            console.warn(`Invalid exclude button \"${button}\". Available buttons: ${availableButtons}. Button ignored`);\n          }\n        }\n      }\n    }\n\n    // Filter buttons using Set for O(1) lookups instead of O(n) array includes\n    return buttons.filter(button => !buttonsToExclude.has(button));\n  }\n\n  /**\n   * Apply custom ordering to buttons, organizing them into groups\n   * @param buttons - Array of buttons to organize\n   * @param order - Optional custom ordering configuration\n   * @param includeGroups - Optional groups from include configuration\n   * @returns Array of toolbar groups with proper ordering\n   */\n  private static applyOrder(\n    buttons: ToolbarButtonType[], \n    order?: (ToolbarButtonType | ToolbarGroup)[],\n    includeGroups?: ToolbarGroup[]\n  ): ToolbarGroup[] {\n    // If we have explicit order, use it\n    if (order && order.length > 0) {\n      return this.processCustomOrder(buttons, order);\n    }\n    \n    // If we have groups from include configuration, use them\n    if (includeGroups && includeGroups.length > 0) {\n      return this.processIncludeGroups(buttons, includeGroups);\n    }\n    \n    // Default grouping by category\n    return this.createDefaultGroups(buttons);\n  }\n\n  /**\n   * Process custom order configuration\n   * @param buttons - Array of buttons to organize\n   * @param order - Custom ordering configuration\n   * @returns Array of toolbar groups with proper ordering\n   */\n  private static processCustomOrder(\n    buttons: ToolbarButtonType[], \n    order: (ToolbarButtonType | ToolbarGroup)[]\n  ): ToolbarGroup[] {\n    if (!Array.isArray(order)) {\n      console.warn('Order configuration must be an array, falling back to default grouping');\n      return this.createDefaultGroups(buttons);\n    }\n\n    const groups: ToolbarGroup[] = [];\n    const usedButtons = new Set<ToolbarButtonType>();\n    const buttonSet = new Set(buttons); // O(1) lookups for button existence\n\n    // Process custom order\n    for (let i = 0; i < order.length; i++) {\n      const item = order[i];\n      \n      if (typeof item === 'string') {\n        // Individual button\n        const normalizedButton = item.trim() as ToolbarButtonType;\n        \n        if (buttonSet.has(normalizedButton) && this.isValidButton(normalizedButton)) {\n          groups.push({ name: `group-${groups.length}`, buttons: [normalizedButton] });\n          usedButtons.add(normalizedButton);\n        } else if (!this.isValidButton(normalizedButton)) {\n          console.warn(`Invalid button \"${item}\" in order configuration ignored`);\n        }\n        // If button is valid but not in buttonSet, it's silently ignored (not included in configuration)\n      } else if (item && typeof item === 'object') {\n        // Validate group object structure\n        if (!('name' in item) || typeof item.name !== 'string') {\n          console.warn(`Order item at index ${i} must have a string name property, ignoring this item`);\n          continue;\n        }\n\n        if (!('buttons' in item) || !Array.isArray(item.buttons)) {\n          console.warn(`Order item \"${item.name}\" at index ${i} must have a buttons array, ignoring this item`);\n          continue;\n        }\n\n        // Group object - use filter with Set for O(1) lookups\n        const validButtons: ToolbarButtonType[] = [];\n        \n        for (const button of item.buttons) {\n          if (typeof button !== 'string') {\n            console.warn(`Button in order group \"${item.name}\" must be a string, received ${typeof button}, ignoring this button`);\n            continue;\n          }\n\n          const normalizedButton = button.trim() as ToolbarButtonType;\n          \n          if (!this.isValidButton(normalizedButton)) {\n            console.warn(`Invalid button \"${button}\" in order group \"${item.name}\" ignored`);\n            continue;\n          }\n          \n          if (buttonSet.has(normalizedButton)) {\n            validButtons.push(normalizedButton);\n          }\n          // If button is valid but not in buttonSet, it's silently ignored (not included in configuration)\n        }\n\n        if (validButtons.length > 0) {\n          groups.push({ name: item.name, buttons: validButtons });\n          // Add all valid buttons to used set\n          validButtons.forEach(button => usedButtons.add(button));\n        }\n      } else {\n        console.warn(`Order item at index ${i} must be a string or object, received ${typeof item}, ignoring this item`);\n      }\n    }\n\n    // Add any remaining buttons that weren't included in the custom order\n    const remainingButtons = buttons.filter(button => !usedButtons.has(button));\n    if (remainingButtons.length > 0) {\n      groups.push({ name: 'remaining', buttons: remainingButtons });\n    }\n\n    return groups;\n  }\n\n  /**\n   * Process groups from include configuration\n   * @param buttons - Array of buttons to organize\n   * @param includeGroups - Groups from include configuration\n   * @returns Array of toolbar groups with proper ordering\n   */\n  private static processIncludeGroups(\n    buttons: ToolbarButtonType[], \n    includeGroups: ToolbarGroup[]\n  ): ToolbarGroup[] {\n    if (!Array.isArray(includeGroups)) {\n      console.warn('Include groups must be an array, falling back to default grouping');\n      return this.createDefaultGroups(buttons);\n    }\n\n    const groups: ToolbarGroup[] = [];\n    const usedButtons = new Set<ToolbarButtonType>();\n    const buttonSet = new Set(buttons); // O(1) lookups for button existence\n\n    // Process each group from include configuration\n    for (let i = 0; i < includeGroups.length; i++) {\n      const group = includeGroups[i];\n      \n      if (!group || typeof group !== 'object') {\n        console.warn(`Include group at index ${i} must be an object, ignoring this group`);\n        continue;\n      }\n\n      if (!('name' in group) || typeof group.name !== 'string') {\n        console.warn(`Include group at index ${i} must have a string name property, ignoring this group`);\n        continue;\n      }\n\n      if (!('buttons' in group) || !Array.isArray(group.buttons)) {\n        console.warn(`Include group \"${group.name}\" at index ${i} must have a buttons array, ignoring this group`);\n        continue;\n      }\n\n      // Filter buttons to only include those that are valid and enabled\n      const validButtons: ToolbarButtonType[] = [];\n      \n      for (const button of group.buttons) {\n        if (typeof button !== 'string') {\n          console.warn(`Button in include group \"${group.name}\" must be a string, received ${typeof button}, ignoring this button`);\n          continue;\n        }\n\n        const normalizedButton = button.trim() as ToolbarButtonType;\n        \n        if (!this.isValidButton(normalizedButton)) {\n          console.warn(`Invalid button \"${button}\" in include group \"${group.name}\" ignored`);\n          continue;\n        }\n        \n        if (buttonSet.has(normalizedButton)) {\n          validButtons.push(normalizedButton);\n        }\n        // If button is valid but not in buttonSet, it's silently ignored (not included in configuration)\n      }\n\n      if (validButtons.length > 0) {\n        groups.push({ name: group.name, buttons: validButtons });\n        // Add all valid buttons to used set\n        validButtons.forEach(button => usedButtons.add(button));\n      }\n    }\n\n    // Add any remaining buttons that weren't included in the groups\n    const remainingButtons = buttons.filter(button => !usedButtons.has(button));\n    if (remainingButtons.length > 0) {\n      groups.push({ name: 'remaining', buttons: remainingButtons });\n    }\n\n    return groups;\n  }\n\n  /**\n   * Create default groups organized by category\n   * @param buttons - Array of buttons to organize\n   * @returns Array of toolbar groups organized by category\n   */\n  private static createDefaultGroups(buttons: ToolbarButtonType[]): ToolbarGroup[] {\n    const groups: ToolbarGroup[] = [];\n    const buttonSet = new Set(buttons); // O(1) lookups\n\n    // Group buttons by category using Set for efficient lookups\n    for (const [category, categoryButtons] of Object.entries(this.CATEGORY_MAPPINGS)) {\n      const matchingButtons = categoryButtons.filter(button => buttonSet.has(button));\n      if (matchingButtons.length > 0) {\n        groups.push({ name: category, buttons: matchingButtons });\n      }\n    }\n\n    return groups;\n  }\n\n  /**\n   * Validate if a button type is valid\n   * @param button - The button type to validate\n   * @returns True if the button is valid\n   */\n  private static isValidButton(button: string): button is ToolbarButtonType {\n    // Use pre-computed set for O(1) validation instead of O(n) search\n    return this.VALID_BUTTONS.has(button as ToolbarButtonType);\n  }\n}","import React, { useState, useRef, useCallback, useEffect, useMemo } from 'react';\nimport { AdvancedToolbar } from './AdvancedToolbar';\nimport { EditableArea } from './EditableArea';\nimport { ImageUploadCropModal } from './ImageUploadCropModal';\nimport { FileUploadModal } from './FileUploadModal';\nimport { ImageManager } from './ImageManager';\nimport { TableInsertModal } from './TableInsertModal';\nimport { SpecialCharModal } from './SpecialCharModal';\nimport { UrlInputModal } from './UrlInputModal';\nimport { FindReplaceModal } from './FindReplaceModal';\nimport { NotificationModal } from './NotificationModal';\nimport { LinkPreviewPopup } from './LinkPreviewPopup';\nimport { WYSIWYGEditorProps, SelectionState } from '../types';\nimport { commandExecutor } from '../utils/commandSystem';\nimport { ToolbarConfigResolver } from '../utils/toolbarConfigResolver';\n\nexport const WYSIWYGEditor: React.FC<WYSIWYGEditorProps> = ({\n  initialContent = '',\n  placeholder = 'Start typing...',\n  onChange,\n  onFocus,\n  onBlur,\n  toolbarConfig,\n  showConfigDropdown = false,\n  configOptions,\n  selectedConfigKey,\n  onConfigChange,\n  height = '300px' // Default height\n}) => {\n  const [content, setContent] = useState(initialContent);\n  const [isEditorFocused, setIsEditorFocused] = useState(false);\n  const [activeFormats, setActiveFormats] = useState<Set<string>>(new Set());\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [isImageUploadCropModalOpen, setIsImageUploadCropModalOpen] = useState(false);\n  const [isFileUploadModalOpen, setIsFileUploadModalOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState<HTMLImageElement | null>(null);\n  const [isTableModalOpen, setIsTableModalOpen] = useState(false);\n  const [isSpecialCharModalOpen, setIsSpecialCharModalOpen] = useState(false);\n  const [isUrlInputModalOpen, setIsUrlInputModalOpen] = useState(false);\n  const [urlInputType, setUrlInputType] = useState<'create' | 'edit'>('create');\n  const [currentLinkUrl, setCurrentLinkUrl] = useState('');\n  const [isFindReplaceModalOpen, setIsFindReplaceModalOpen] = useState(false);\n  const [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n  const [notificationData, setNotificationData] = useState({\n    title: '',\n    message: '',\n    type: 'info' as 'info' | 'success' | 'warning' | 'error'\n  });\n  const [savedSelection, setSavedSelection] = useState<Range | null>(null);\n  const [isLinkPreviewOpen, setIsLinkPreviewOpen] = useState(false);\n  const [linkPreviewData, setLinkPreviewData] = useState({\n    url: '',\n    text: '',\n    position: { x: 0, y: 0 },\n    element: null as HTMLAnchorElement | null\n  });\n  const editorRef = useRef<HTMLDivElement>(null);\n  const announcementRef = useRef<HTMLDivElement>(null);\n\n  // Process toolbar configuration with enhanced memoization\n  const resolvedToolbarConfig = useMemo(() => {\n    return ToolbarConfigResolver.resolve(toolbarConfig);\n  }, [toolbarConfig]);\n\n  // Memoize the toolbar config to prevent unnecessary re-renders\n  const memoizedToolbarConfig = useMemo(() => resolvedToolbarConfig, [resolvedToolbarConfig]);\n\n  // Update format states based on current selection\n  const updateFormatStates = useCallback(() => {\n    if (!isEditorFocused || !editorRef.current) return;\n\n    const formats = commandExecutor.getActiveFormats();\n    setActiveFormats(formats);\n    setCanUndo(commandExecutor.canUndo());\n    setCanRedo(commandExecutor.canRedo());\n  }, [isEditorFocused]);\n\n  // Announce formatting changes to screen readers\n  const announceToScreenReader = useCallback((message: string) => {\n    if (announcementRef.current) {\n      announcementRef.current.textContent = message;\n      // Clear the announcement after a short delay to allow for repeated announcements\n      setTimeout(() => {\n        if (announcementRef.current) {\n          announcementRef.current.textContent = '';\n        }\n      }, 1000);\n    }\n  }, []);\n\n  // Get human-readable format name for announcements\n  const getFormatName = useCallback((command: string, value?: string): string => {\n    const formatNames: Record<string, string> = {\n      'bold': 'bold',\n      'italic': 'italic',\n      'underline': 'underline',\n      'insertUnorderedList': 'bullet list',\n      'insertOrderedList': 'numbered list',\n      'justifyLeft': 'left aligned',\n      'justifyCenter': 'center aligned',\n      'justifyRight': 'right aligned',\n      'createLink': 'link',\n      'unlink': 'link removed',\n      'insertImage': 'image inserted',\n      'uploadFile': 'file uploaded',\n      'undo': 'undone',\n      'redo': 'redone',\n      'removeFormat': 'formatting cleared'\n    };\n\n    if (command === 'formatBlock' && value) {\n      return `heading ${value.toLowerCase()}`;\n    }\n\n    return formatNames[command] || command;\n  }, []);\n\n  // Handle image click for management\n  const handleImageClick = useCallback((event: Event) => {\n    event.stopPropagation();\n    const img = event.target as HTMLImageElement;\n    setSelectedImage(img);\n  }, []);\n\n  // Handle image drag start\n  const handleImageDragStart = useCallback((event: DragEvent) => {\n    const img = event.target as HTMLImageElement;\n    if (event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/html', img.outerHTML);\n      img.style.opacity = '0.5';\n    }\n  }, []);\n\n  // Handle image drag end\n  const handleImageDragEnd = useCallback((event: DragEvent) => {\n    const img = event.target as HTMLImageElement;\n    img.style.opacity = '1';\n  }, []);\n\n  // Set up image management for all images in the editor\n  const setupImageManagement = useCallback(() => {\n    if (!editorRef.current) return;\n\n    const images = editorRef.current.querySelectorAll('img.editor-image');\n    const imageElements = Array.from(images) as HTMLImageElement[];\n\n    // Add click handlers to images for management\n    imageElements.forEach((img) => {\n      // Remove existing listeners to avoid duplicates\n      img.removeEventListener('click', handleImageClick);\n      img.addEventListener('click', handleImageClick);\n\n      // Add drag and drop functionality\n      img.addEventListener('dragstart', handleImageDragStart);\n      img.addEventListener('dragend', handleImageDragEnd);\n    });\n  }, [handleImageClick, handleImageDragStart, handleImageDragEnd]);\n\n  // Handle image insertion from the comprehensive modal\n  const handleImageInsert = useCallback((croppedImageUrl: string) => {\n    const result = commandExecutor.insertImage(croppedImageUrl);\n\n    if (result.success) {\n      announceToScreenReader('Image inserted');\n      // Update content after successful image insertion\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n          // Set up image management for the newly inserted image\n          setupImageManagement();\n        }\n      }, 0);\n    } else {\n      console.warn('Image insertion failed:', result.error);\n      announceToScreenReader('Image insertion failed');\n    }\n  }, [onChange, updateFormatStates, announceToScreenReader, setupImageManagement]);\n\n  // Handle image update from ImageManager\n  const handleImageUpdate = useCallback(() => {\n    if (editorRef.current) {\n      const newContent = editorRef.current.innerHTML;\n      setContent(newContent);\n      onChange?.(newContent);\n    }\n  }, [onChange]);\n\n  // Handle image removal from ImageManager\n  const handleImageRemove = useCallback(() => {\n    if (selectedImage && selectedImage.parentNode) {\n      selectedImage.parentNode.removeChild(selectedImage);\n      setSelectedImage(null);\n\n      // Update content after image removal\n      if (editorRef.current) {\n        const newContent = editorRef.current.innerHTML;\n        setContent(newContent);\n        onChange?.(newContent);\n      }\n\n      announceToScreenReader('Image removed');\n    }\n  }, [selectedImage, onChange, announceToScreenReader]);\n\n  // Handle file upload\n  const handleFileUpload = useCallback((file: File) => {\n    // For demo purposes, create a blob URL\n    // In a real application, you would upload to a server\n    const blobUrl = URL.createObjectURL(file);\n\n    // Create file link element\n    const link = document.createElement('a');\n    link.href = blobUrl;\n    link.download = file.name;\n    link.target = '_blank';\n    link.rel = 'noopener noreferrer';\n\n    // Set link text based on file type\n    const fileIcon = getFileIcon(file.type);\n    link.innerHTML = `${fileIcon} ${file.name}`;\n\n    // Style the file link\n    link.style.display = 'inline-block';\n    link.style.padding = '8px 12px';\n    link.style.margin = '4px';\n    link.style.backgroundColor = '#f0f0f0';\n    link.style.border = '1px solid #ccc';\n    link.style.borderRadius = '4px';\n    link.style.textDecoration = 'none';\n    link.style.color = '#333';\n\n    // Insert the link at cursor position\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(link);\n\n      // Move cursor after the link\n      range.setStartAfter(link);\n      range.setEndAfter(link);\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      announceToScreenReader('File uploaded and inserted');\n\n      // Update content\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      announceToScreenReader('File upload failed - no cursor position');\n    }\n\n    setIsFileUploadModalOpen(false);\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Get file icon based on file type\n  const getFileIcon = useCallback((fileType: string): string => {\n    if (fileType.startsWith('image/')) return '🖼️';\n    if (fileType.startsWith('video/')) return '🎥';\n    if (fileType.startsWith('audio/')) return '🎵';\n    if (fileType.includes('pdf')) return '📕';\n    if (fileType.includes('word') || fileType.includes('document')) return '📝';\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return '📊';\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return '📊';\n    if (fileType.includes('zip') || fileType.includes('archive')) return '🗜️';\n    return '📄';\n  }, []);\n\n  // Handle table insertion\n  const handleTableInsert = useCallback((rows: number, cols: number, hasHeaders: boolean) => {\n    if (!editorRef.current) return;\n\n    const tableConfig = `${rows},${cols},${hasHeaders}`;\n    const result = commandExecutor.executeCommand('INSERT_TABLE', tableConfig, editorRef.current);\n\n    if (result.success) {\n      announceToScreenReader('Table inserted');\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      console.warn('Table insertion failed:', result.error);\n      announceToScreenReader('Table insertion failed');\n    }\n\n    setIsTableModalOpen(false);\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Handle special character insertion\n  const handleSpecialCharInsert = useCallback((char: string) => {\n    if (!editorRef.current) return;\n\n    const result = commandExecutor.executeCommand('INSERT_SPECIAL_CHAR', char, editorRef.current);\n\n    if (result.success) {\n      announceToScreenReader(`Special character ${char} inserted`);\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      console.warn('Special character insertion failed:', result.error);\n      announceToScreenReader('Special character insertion failed');\n    }\n\n    setIsSpecialCharModalOpen(false);\n  }, [onChange, updateFormatStates, announceToScreenReader]);\n\n  // Handle URL input for links\n  const handleUrlSubmit = useCallback((url: string) => {\n    if (!editorRef.current) return;\n\n    // Restore the saved selection before creating the link\n    if (savedSelection && urlInputType === 'create') {\n      const selection = window.getSelection();\n      if (selection) {\n        selection.removeAllRanges();\n        selection.addRange(savedSelection);\n\n        // Focus the editor to ensure the selection is active\n        editorRef.current.focus();\n      }\n    }\n\n    const commandKey = urlInputType === 'create' ? 'CREATE_LINK' : 'EDIT_LINK';\n    const result = commandExecutor.executeCommand(commandKey, url, editorRef.current);\n\n    if (result.success) {\n      const action = urlInputType === 'create' ? 'created' : 'updated';\n      announceToScreenReader(`Link ${action}`);\n      setTimeout(() => {\n        if (editorRef.current) {\n          const newContent = editorRef.current.innerHTML;\n          setContent(newContent);\n          onChange?.(newContent);\n          updateFormatStates();\n        }\n      }, 0);\n    } else {\n      showNotification('Error', result.error || 'Failed to create link', 'error');\n    }\n\n    // Clear the saved selection and reset state\n    setSavedSelection(null);\n    setCurrentLinkUrl('');\n    setIsUrlInputModalOpen(false);\n  }, [urlInputType, savedSelection, onChange, updateFormatStates, announceToScreenReader]);\n\n  // Handle find and replace\n  const handleFindReplace = useCallback((findText: string, replaceText: string) => {\n    if (!editorRef.current) return;\n\n    // Simple find and replace implementation\n    const currentContent = editorRef.current.innerHTML;\n    const updatedContent = currentContent.replace(new RegExp(findText, 'gi'), replaceText);\n\n    if (currentContent !== updatedContent) {\n      editorRef.current.innerHTML = updatedContent;\n      setContent(updatedContent);\n      onChange?.(updatedContent);\n\n      const matches = (currentContent.match(new RegExp(findText, 'gi')) || []).length;\n      showNotification('Find & Replace', `Replaced ${matches} occurrence(s)`, 'success');\n      announceToScreenReader(`Replaced ${matches} occurrences`);\n    } else {\n      showNotification('Find & Replace', 'No matches found', 'info');\n    }\n  }, [onChange, announceToScreenReader]);\n\n  // Show notification helper\n  const showNotification = useCallback((title: string, message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info') => {\n    setNotificationData({ title, message, type });\n    setIsNotificationModalOpen(true);\n  }, []);\n\n  // Handle link preview popup\n  const handleLinkClick = useCallback((event: MouseEvent, linkElement: HTMLAnchorElement) => {\n    // Prevent default link navigation\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Calculate popup position\n    const rect = linkElement.getBoundingClientRect();\n    const position = {\n      x: rect.left,\n      y: rect.bottom + 5 // Position below the link\n    };\n\n    // Set link preview data\n    setLinkPreviewData({\n      url: linkElement.href,\n      text: linkElement.textContent || '',\n      position,\n      element: linkElement\n    });\n    setIsLinkPreviewOpen(true);\n  }, []);\n\n  // Handle link preview actions\n  const handleLinkPreviewEdit = useCallback(() => {\n    if (linkPreviewData.element) {\n      setCurrentLinkUrl(linkPreviewData.element.href);\n      setUrlInputType('edit');\n      setIsUrlInputModalOpen(true);\n      setIsLinkPreviewOpen(false);\n    }\n  }, [linkPreviewData.element]);\n\n  const handleLinkPreviewRemove = useCallback(() => {\n    if (linkPreviewData.element) {\n      // Remove the link but keep the text\n      const textContent = linkPreviewData.element.textContent || '';\n      const textNode = document.createTextNode(textContent);\n      linkPreviewData.element.parentNode?.replaceChild(textNode, linkPreviewData.element);\n      \n      // Update content\n      if (editorRef.current) {\n        const newContent = editorRef.current.innerHTML;\n        setContent(newContent);\n        onChange?.(newContent);\n      }\n      \n      announceToScreenReader('Link removed');\n      setIsLinkPreviewOpen(false);\n    }\n  }, [linkPreviewData.element, onChange, announceToScreenReader]);\n\n  const handleLinkPreviewGoTo = useCallback(() => {\n    if (linkPreviewData.url) {\n      window.open(linkPreviewData.url, '_blank', 'noopener,noreferrer');\n      setIsLinkPreviewOpen(false);\n    }\n  }, [linkPreviewData.url]);\n\n  const handleLinkPreviewClose = useCallback(() => {\n    setIsLinkPreviewOpen(false);\n  }, []);\n\n  // Handle command execution\n  const executeCommand = useCallback((command: string, value?: string, _fromKeyboard = false) => {\n    if (!editorRef.current) return;\n\n    // Save the current selection before executing commands that might open modals\n    const selection = window.getSelection();\n    let savedRange: Range | null = null;\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      // Check if cloneRange is available (for test environment compatibility)\n      if (typeof range.cloneRange === 'function') {\n        savedRange = range.cloneRange();\n      }\n    }\n\n    // Handle special commands that open modals\n    if (command === 'insertImage') {\n      setIsImageUploadCropModalOpen(true);\n      return;\n    }\n\n    if (command === 'uploadFile') {\n      setIsFileUploadModalOpen(true);\n      return;\n    }\n\n    if (command === 'insertTable') {\n      setIsTableModalOpen(true);\n      return;\n    }\n\n    if (command === 'insertSpecialChar') {\n      setIsSpecialCharModalOpen(true);\n      return;\n    }\n\n    if (command === 'createLink') {\n      // Save the current selection before opening the modal\n      setSavedSelection(savedRange);\n      setUrlInputType('create');\n      setCurrentLinkUrl('');\n      setIsUrlInputModalOpen(true);\n      return;\n    }\n\n    if (command === 'editLink') {\n      // Get current link URL if cursor is on a link\n      const selection = window.getSelection();\n      let linkElement: HTMLAnchorElement | null = null;\n\n      // Method 1: Try to find link from current selection/cursor position\n      if (selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n\n        // Helper function to find link element from a node\n        const findLinkFromNode = (node: Node): HTMLAnchorElement | null => {\n          if (node.nodeType === Node.TEXT_NODE) {\n            return node.parentElement?.closest('a') as HTMLAnchorElement || null;\n          } else if (node.nodeType === Node.ELEMENT_NODE) {\n            const element = node as Element;\n            if (element.tagName === 'A') {\n              return element as HTMLAnchorElement;\n            }\n            return element.closest('a') as HTMLAnchorElement || null;\n          }\n          return null;\n        };\n\n        // Check start container first\n        linkElement = findLinkFromNode(range.startContainer);\n\n        // If not found and we have a selection, check end container too\n        if (!linkElement && !selection.isCollapsed) {\n          const endLink = findLinkFromNode(range.endContainer);\n          // Only use end link if it's the same as what we'd find from start\n          if (endLink) {\n            linkElement = endLink;\n          }\n        }\n\n        // If still not found, check the common ancestor\n        if (!linkElement) {\n          linkElement = findLinkFromNode(range.commonAncestorContainer);\n        }\n\n        // Last resort: check if the range intersects with any links\n        if (!linkElement && editorRef.current) {\n          const allLinks = editorRef.current.querySelectorAll('a[href]');\n          for (const link of Array.from(allLinks)) {\n            if (range.intersectsNode(link)) {\n              linkElement = link as HTMLAnchorElement;\n              break;\n            }\n          }\n        }\n      }\n\n      // Method 2: If still no link found, check if there's only one link in the editor\n      if (!linkElement && editorRef.current) {\n        const allLinks = editorRef.current.querySelectorAll('a[href]');\n        if (allLinks.length === 1) {\n          linkElement = allLinks[0] as HTMLAnchorElement;\n        }\n      }\n\n      if (linkElement && linkElement.href) {\n        // Set the current URL as the initial value for editing\n        setCurrentLinkUrl(linkElement.href);\n        setUrlInputType('edit');\n        setIsUrlInputModalOpen(true);\n        return;\n      }\n\n      showNotification('Edit Link', 'Please place your cursor on a link to edit it, or select the link text first', 'info');\n      return;\n    }\n\n    if (command === 'findReplace') {\n      setIsFindReplaceModalOpen(true);\n      return;\n    }\n\n    // Map toolbar commands to command system keys\n    const commandMap: Record<string, string> = {\n      'bold': 'BOLD',\n      'italic': 'ITALIC',\n      'underline': 'UNDERLINE',\n      'strikethrough': 'STRIKETHROUGH',\n      'subscript': 'SUBSCRIPT',\n      'superscript': 'SUPERSCRIPT',\n      'formatBlock': 'FORMAT_H1', // Will be handled specially\n      'fontSize': 'FONT_SIZE',\n      'fontName': 'FONT_NAME',\n      'fontColor': 'FONT_COLOR',\n      'backgroundColor': 'BACKGROUND_COLOR',\n      'insertUnorderedList': 'INSERT_UNORDERED_LIST',\n      'insertOrderedList': 'INSERT_ORDERED_LIST',\n      'indent': 'INDENT',\n      'outdent': 'OUTDENT',\n      'justifyLeft': 'JUSTIFY_LEFT',\n      'justifyCenter': 'JUSTIFY_CENTER',\n      'justifyRight': 'JUSTIFY_RIGHT',\n      'justifyFull': 'JUSTIFY_FULL',\n      'createLink': 'CREATE_LINK',\n      'editLink': 'EDIT_LINK',\n      'unlink': 'UNLINK',\n      'insertHorizontalRule': 'INSERT_HORIZONTAL_RULE',\n      'findReplace': 'FIND_REPLACE',\n      'sourceCode': 'SOURCE_CODE',\n      'fullscreen': 'FULLSCREEN',\n      'print': 'PRINT',\n      'spellCheck': 'SPELL_CHECK',\n      'undo': 'UNDO',\n      'redo': 'REDO',\n      'removeFormat': 'REMOVE_FORMAT'\n    };\n\n    // Handle special cases for formatBlock commands\n    let commandKey = commandMap[command];\n    if (command === 'formatBlock' && value) {\n      commandKey = `FORMAT_${value}`;\n    }\n\n    if (commandKey) {\n      const result = commandExecutor.executeCommand(commandKey, value, editorRef.current);\n\n      if (result.success) {\n        // Announce the formatting change to screen readers\n        const formatName = getFormatName(command, value);\n        const isActive = activeFormats.has(commandKey);\n        const action = isActive ? 'removed' : 'applied';\n        announceToScreenReader(`${formatName} ${action}`);\n\n        // Update content after successful command execution\n        setTimeout(() => {\n          if (editorRef.current) {\n            const newContent = editorRef.current.innerHTML;\n            setContent(newContent);\n            onChange?.(newContent);\n            updateFormatStates();\n          }\n        }, 0);\n      } else {\n        console.warn('Command execution failed:', result.error);\n        announceToScreenReader('Command failed');\n      }\n    }\n  }, [onChange, updateFormatStates, activeFormats, getFormatName, announceToScreenReader]);\n\n  // Handle keyboard shortcuts\n  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    // Only handle shortcuts when editor is focused\n    if (!isEditorFocused) return;\n\n    const { ctrlKey, metaKey, key, shiftKey } = event;\n    const isModifierPressed = ctrlKey || metaKey; // Support both Ctrl (Windows/Linux) and Cmd (Mac)\n\n    if (!isModifierPressed) return;\n\n    // Define keyboard shortcuts\n    const shortcuts: Record<string, { command: string; value?: string }> = {\n      'b': { command: 'bold' },\n      'i': { command: 'italic' },\n      'u': { command: 'underline' },\n      'k': { command: 'createLink' },\n      'z': { command: shiftKey ? 'redo' : 'undo' },\n      'y': { command: 'redo' },\n      '1': { command: 'formatBlock', value: 'H1' },\n      '2': { command: 'formatBlock', value: 'H2' },\n      '3': { command: 'formatBlock', value: 'H3' },\n      'l': { command: shiftKey ? 'insertOrderedList' : 'justifyLeft' },\n      'e': { command: 'justifyCenter' },\n      'r': { command: 'justifyRight' },\n      '\\\\': { command: 'removeFormat' }\n    };\n\n    const shortcut = shortcuts[key.toLowerCase()];\n    if (shortcut) {\n      event.preventDefault();\n      executeCommand(shortcut.command, shortcut.value, true);\n    }\n  }, [isEditorFocused, executeCommand]);\n\n  // Handle content changes from the editable area\n  const handleContentChange = useCallback((newContent: string) => {\n    setContent(newContent);\n    onChange?.(newContent);\n    // Update format states after content change\n    setTimeout(updateFormatStates, 0);\n  }, [onChange, updateFormatStates]);\n\n  // Handle selection changes from the editable area\n  const handleSelectionChange = useCallback((_selectionState: SelectionState) => {\n    // Update active formats based on current selection\n    updateFormatStates();\n  }, [updateFormatStates]);\n\n  const handleFocus = useCallback(() => {\n    setIsEditorFocused(true);\n    onFocus?.();\n    // Update format states when editor gains focus\n    setTimeout(updateFormatStates, 0);\n  }, [onFocus, updateFormatStates]);\n\n  const handleBlur = useCallback(() => {\n    setIsEditorFocused(false);\n    onBlur?.();\n  }, [onBlur]);\n\n  // Update format states when editor becomes focused\n  useEffect(() => {\n    if (isEditorFocused) {\n      updateFormatStates();\n    }\n  }, [isEditorFocused, updateFormatStates]);\n\n  // Set up image management when content changes\n  useEffect(() => {\n    setupImageManagement();\n    // Also ensure all links have proper attributes\n    ensureLinksHaveProperAttributes();\n  }, [content, setupImageManagement]);\n\n  // Ensure all links in the editor have target=\"_blank\" and rel=\"noopener noreferrer\"\n  const ensureLinksHaveProperAttributes = useCallback(() => {\n    if (!editorRef.current) return;\n\n    const links = editorRef.current.querySelectorAll('a[href]');\n    links.forEach((link) => {\n      const anchorElement = link as HTMLAnchorElement;\n      if (!anchorElement.hasAttribute('target')) {\n        anchorElement.setAttribute('target', '_blank');\n      }\n      if (!anchorElement.hasAttribute('rel')) {\n        anchorElement.setAttribute('rel', 'noopener noreferrer');\n      }\n    });\n  }, []);\n\n  // Handle clicks outside of images to deselect\n  useEffect(() => {\n    const handleDocumentClick = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('img.editor-image') && !target.closest('.image-manager')) {\n        setSelectedImage(null);\n      }\n    };\n\n    document.addEventListener('click', handleDocumentClick);\n    return () => document.removeEventListener('click', handleDocumentClick);\n  }, []);\n\n  // Set up drag and drop for the editor area\n  useEffect(() => {\n    if (!editorRef.current) return;\n\n    const editorElement = editorRef.current;\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault();\n      event.dataTransfer!.dropEffect = 'move';\n    };\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault();\n      const htmlData = event.dataTransfer?.getData('text/html');\n\n      if (htmlData && htmlData.includes('<img')) {\n        // Handle image repositioning\n        const selection = window.getSelection();\n        if (selection && selection.rangeCount > 0) {\n          const range = selection.getRangeAt(0);\n\n          // Create a temporary div to parse the HTML\n          const tempDiv = document.createElement('div');\n          tempDiv.innerHTML = htmlData;\n          const draggedImg = tempDiv.querySelector('img') as HTMLImageElement;\n\n          if (draggedImg) {\n            // Remove the original image if it exists\n            const existingImg = editorElement.querySelector(`img[src=\"${draggedImg.src}\"]`);\n            if (existingImg && existingImg !== draggedImg) {\n              existingImg.remove();\n            }\n\n            // Insert at new position\n            range.deleteContents();\n            range.insertNode(draggedImg);\n\n            // Update content\n            const newContent = editorElement.innerHTML;\n            setContent(newContent);\n            onChange?.(newContent);\n          }\n        }\n      }\n    };\n\n    editorElement.addEventListener('dragover', handleDragOver);\n    editorElement.addEventListener('drop', handleDrop);\n\n    return () => {\n      editorElement.removeEventListener('dragover', handleDragOver);\n      editorElement.removeEventListener('drop', handleDrop);\n    };\n  }, [onChange]);\n\n  return (\n    <div\n      className=\"wysiwyg-editor\"\n      onKeyDown={handleKeyDown}\n      role=\"application\"\n      aria-label=\"Rich text editor with keyboard shortcuts\"\n    >\n      <AdvancedToolbar\n        onCommand={executeCommand}\n        activeFormats={activeFormats}\n        canUndo={canUndo}\n        canRedo={canRedo}\n        toolbarConfig={memoizedToolbarConfig}\n        showConfigDropdown={showConfigDropdown}\n        configOptions={configOptions}\n        selectedConfigKey={selectedConfigKey}\n        onConfigChange={onConfigChange}\n      />\n      <EditableArea\n        content={content}\n        placeholder={placeholder}\n        onContentChange={handleContentChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        editorRef={editorRef}\n        onSelectionChange={handleSelectionChange}\n        onLinkClick={handleLinkClick}\n        height={height}\n      />\n      {/* Screen reader announcements */}\n      <div\n        ref={announcementRef}\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        role=\"status\"\n      />\n      {/* Keyboard shortcuts help (hidden but available to screen readers) */}\n      <div className=\"sr-only\" id=\"keyboard-shortcuts-help\">\n        Keyboard shortcuts: Ctrl+B for bold, Ctrl+I for italic, Ctrl+U for underline,\n        Ctrl+K for link, Ctrl+Z for undo, Ctrl+Y for redo, Ctrl+1/2/3 for headings,\n        Ctrl+L for left align, Ctrl+E for center align, Ctrl+R for right align,\n        Ctrl+Shift+L for numbered list, Ctrl+\\ for clear formatting\n      </div>\n\n      {/* Image Upload and Crop Modal */}\n      <ImageUploadCropModal\n        isOpen={isImageUploadCropModalOpen}\n        onClose={() => setIsImageUploadCropModalOpen(false)}\n        onImageInsert={handleImageInsert}\n      />\n\n      {/* File Upload Modal (for non-image files) */}\n      <FileUploadModal\n        isOpen={isFileUploadModalOpen}\n        onClose={() => setIsFileUploadModalOpen(false)}\n        onFileSelect={handleFileUpload}\n        accept=\"*/*\"\n        maxSize={10 * 1024 * 1024} // 10MB for files\n        title=\"Upload File\"\n        description=\"Select a file to upload\"\n      />\n\n      {/* Table Insert Modal */}\n      <TableInsertModal\n        isOpen={isTableModalOpen}\n        onClose={() => setIsTableModalOpen(false)}\n        onInsert={handleTableInsert}\n      />\n\n      {/* Special Character Modal */}\n      <SpecialCharModal\n        isOpen={isSpecialCharModalOpen}\n        onClose={() => setIsSpecialCharModalOpen(false)}\n        onInsert={handleSpecialCharInsert}\n      />\n\n      {/* URL Input Modal */}\n      <UrlInputModal\n        isOpen={isUrlInputModalOpen}\n        onClose={() => setIsUrlInputModalOpen(false)}\n        onSubmit={handleUrlSubmit}\n        title={urlInputType === 'create' ? 'Insert Link' : 'Edit Link'}\n        placeholder=\"https://example.com\"\n        initialValue={currentLinkUrl}\n        description={urlInputType === 'create' ? 'Enter the URL for the link' : 'Update the URL for this link'}\n      />\n\n      {/* Find Replace Modal */}\n      <FindReplaceModal\n        isOpen={isFindReplaceModalOpen}\n        onClose={() => setIsFindReplaceModalOpen(false)}\n        onFindReplace={handleFindReplace}\n      />\n\n      {/* Notification Modal */}\n      <NotificationModal\n        isOpen={isNotificationModalOpen}\n        onClose={() => setIsNotificationModalOpen(false)}\n        title={notificationData.title}\n        message={notificationData.message}\n        type={notificationData.type}\n      />\n\n      {/* Link Preview Popup */}\n      <LinkPreviewPopup\n        isOpen={isLinkPreviewOpen}\n        linkUrl={linkPreviewData.url}\n        linkText={linkPreviewData.text}\n        position={linkPreviewData.position}\n        onEdit={handleLinkPreviewEdit}\n        onRemove={handleLinkPreviewRemove}\n        onGoToLink={handleLinkPreviewGoTo}\n        onClose={handleLinkPreviewClose}\n      />\n\n      {/* Image Manager */}\n      {selectedImage && (\n        <ImageManager\n          imageElement={selectedImage}\n          onUpdate={handleImageUpdate}\n          onRemove={handleImageRemove}\n        />\n      )}\n    </div>\n  );\n};","import React, { useMemo, useCallback, memo } from 'react';\nimport { ToolbarProps, ToolbarButton, ToolbarButtonType } from '../types';\n\n// Default toolbar buttons (used when no configuration is provided)\nconst defaultToolbarButtons: ToolbarButton[] = [\n  // Basic text formatting\n  { command: 'bold', icon: 'B', title: 'Bold' },\n  { command: 'italic', icon: 'I', title: 'Italic' },\n  { command: 'underline', icon: 'U', title: 'Underline' },\n  \n  // Heading formatting\n  { command: 'formatBlock', value: 'H1', icon: 'H1', title: 'Heading 1' },\n  { command: 'formatBlock', value: 'H2', icon: 'H2', title: 'Heading 2' },\n  { command: 'formatBlock', value: 'H3', icon: 'H3', title: 'Heading 3' },\n  \n  // List formatting\n  { command: 'insertUnorderedList', icon: '•', title: 'Bullet List' },\n  { command: 'insertOrderedList', icon: '1.', title: 'Numbered List' },\n  \n  // Text alignment\n  { command: 'justifyLeft', icon: '⬅', title: 'Align Left' },\n  { command: 'justifyCenter', icon: '⬌', title: 'Align Center' },\n  { command: 'justifyRight', icon: '➡', title: 'Align Right' },\n  \n  // Link management\n  { command: 'createLink', icon: '🔗', title: 'Insert Link' },\n  { command: 'editLink', icon: '✏️🔗', title: 'Edit Link' },\n  { command: 'unlink', icon: '🔗✕', title: 'Remove Link' },\n  \n  // Media insertion\n  { command: 'insertImage', icon: '🖼️', title: 'Insert Image' },\n  { command: 'uploadFile', icon: '📎', title: 'Upload File' },\n  \n  // History management\n  { command: 'undo', icon: '↶', title: 'Undo' },\n  { command: 'redo', icon: '↷', title: 'Redo' },\n  \n  // Format clearing\n  { command: 'removeFormat', icon: '✕', title: 'Clear Formatting' }\n];\n\n// Mapping from ToolbarButtonType to ToolbarButton configuration\nconst buttonTypeToConfig: Record<ToolbarButtonType, ToolbarButton> = {\n  // Basic formatting\n  bold: { command: 'bold', icon: 'B', title: 'Bold' },\n  italic: { command: 'italic', icon: 'I', title: 'Italic' },\n  underline: { command: 'underline', icon: 'U', title: 'Underline' },\n  strikethrough: { command: 'strikethrough', icon: 'S̶', title: 'Strikethrough' },\n  subscript: { command: 'subscript', icon: 'X₂', title: 'Subscript' },\n  superscript: { command: 'superscript', icon: 'X²', title: 'Superscript' },\n  \n  // Headings\n  h1: { command: 'formatBlock', value: 'H1', icon: 'H1', title: 'Heading 1' },\n  h2: { command: 'formatBlock', value: 'H2', icon: 'H2', title: 'Heading 2' },\n  h3: { command: 'formatBlock', value: 'H3', icon: 'H3', title: 'Heading 3' },\n  h4: { command: 'formatBlock', value: 'H4', icon: 'H4', title: 'Heading 4' },\n  h5: { command: 'formatBlock', value: 'H5', icon: 'H5', title: 'Heading 5' },\n  h6: { command: 'formatBlock', value: 'H6', icon: 'H6', title: 'Heading 6' },\n  \n  // Lists\n  bulletList: { command: 'insertUnorderedList', icon: '•', title: 'Bullet List' },\n  numberedList: { command: 'insertOrderedList', icon: '1.', title: 'Numbered List' },\n  indent: { command: 'indent', icon: '⇥', title: 'Increase Indent' },\n  outdent: { command: 'outdent', icon: '⇤', title: 'Decrease Indent' },\n  \n  // Alignment\n  alignLeft: { command: 'justifyLeft', icon: '⬅', title: 'Align Left' },\n  alignCenter: { command: 'justifyCenter', icon: '⬌', title: 'Align Center' },\n  alignRight: { command: 'justifyRight', icon: '➡', title: 'Align Right' },\n  alignJustify: { command: 'justifyFull', icon: '⬌', title: 'Justify' },\n  \n  // Media\n  image: { command: 'insertImage', icon: '🖼️', title: 'Insert Image' },\n  file: { command: 'uploadFile', icon: '📎', title: 'Upload File' },\n  table: { command: 'insertTable', icon: '⊞', title: 'Insert Table' },\n  \n  // Links\n  link: { command: 'createLink', icon: '🔗', title: 'Insert Link' },\n  unlink: { command: 'unlink', icon: '🔗✕', title: 'Remove Link' },\n  \n  // Advanced formatting (simplified for basic toolbar)\n  fontColor: { command: 'fontColor', icon: 'A', title: 'Text Color' },\n  backgroundColor: { command: 'backgroundColor', icon: '🎨', title: 'Background Color' },\n  fontSize: { command: 'fontSize', icon: '🔤', title: 'Font Size' },\n  fontFamily: { command: 'fontName', icon: 'Aa', title: 'Font Family' },\n  specialChar: { command: 'insertSpecialChar', icon: 'Ω', title: 'Special Characters' },\n  horizontalRule: { command: 'insertHorizontalRule', icon: '―', title: 'Horizontal Rule' },\n  \n  // Tools\n  findReplace: { command: 'findReplace', icon: '🔍', title: 'Find & Replace' },\n  sourceCode: { command: 'sourceCode', icon: '</>', title: 'Source Code' },\n  fullscreen: { command: 'fullscreen', icon: '⛶', title: 'Fullscreen' },\n  print: { command: 'print', icon: '🖨️', title: 'Print' },\n  undo: { command: 'undo', icon: '↶', title: 'Undo' },\n  redo: { command: 'redo', icon: '↷', title: 'Redo' },\n  removeFormat: { command: 'removeFormat', icon: '🧹', title: 'Clear Formatting' }\n};\n\n/**\n * Memoized toolbar button component for performance optimization\n */\nconst MemoizedBasicToolbarButton = memo<{\n  button: ToolbarButton;\n  isActive: boolean;\n  isDisabled: boolean;\n  ariaLabel: string;\n  buttonId: string;\n  onButtonClick: (button: ToolbarButton) => void;\n  onKeyDown: (event: React.KeyboardEvent, button: ToolbarButton) => void;\n}>(({\n  button,\n  isActive,\n  isDisabled,\n  ariaLabel,\n  buttonId,\n  onButtonClick,\n  onKeyDown\n}) => (\n  <button\n    key={buttonId}\n    id={buttonId}\n    className={`toolbar-button ${isActive ? 'active' : ''}`}\n    title={button.title}\n    aria-label={ariaLabel}\n    aria-pressed={isActive}\n    disabled={isDisabled}\n    tabIndex={isDisabled ? -1 : 0}\n    onClick={() => onButtonClick(button)}\n    onKeyDown={(event) => onKeyDown(event, button)}\n    onMouseDown={(event) => {\n      // Prevent focus loss from editor when clicking toolbar buttons\n      event.preventDefault();\n    }}\n  >\n    <span aria-hidden=\"true\">{button.icon}</span>\n  </button>\n));\n\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  onCommand,\n  activeFormats,\n  canUndo,\n  canRedo,\n  toolbarConfig\n}) => {\n  // Process toolbar configuration to determine which buttons to show\n  const toolbarButtons = useMemo(() => {\n    if (toolbarConfig) {\n      // Use the resolved configuration to create buttons\n      const buttons: ToolbarButton[] = [];\n      const enabledButtons = toolbarConfig.enabledButtons; // Cache the Set reference\n      \n      // Flatten all buttons from all groups in the resolved config\n      for (const group of toolbarConfig.groups) {\n        for (const buttonType of group.buttons) {\n          if (enabledButtons.has(buttonType)) {\n            const buttonConfig = buttonTypeToConfig[buttonType];\n            if (buttonConfig) {\n              buttons.push(buttonConfig);\n            }\n          }\n        }\n      }\n      \n      return buttons;\n    }\n    \n    // Use default buttons when no configuration is provided (backward compatibility)\n    return defaultToolbarButtons;\n  }, [toolbarConfig]);\n  const handleButtonClick = useCallback((button: ToolbarButton) => {\n    onCommand(button.command, button.value);\n  }, [onCommand]);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent, button: ToolbarButton) => {\n    // Handle keyboard activation (Enter or Space)\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleButtonClick(button);\n    }\n  }, [handleButtonClick]);\n\n  const isButtonActive = useCallback((command: string, value?: string): boolean => {\n    // Map toolbar commands to format keys used by command system\n    const formatMap: Record<string, string> = {\n      'bold': 'BOLD',\n      'italic': 'ITALIC',\n      'underline': 'UNDERLINE',\n      'strikethrough': 'STRIKETHROUGH',\n      'subscript': 'SUBSCRIPT',\n      'superscript': 'SUPERSCRIPT',\n      'insertUnorderedList': 'INSERT_UNORDERED_LIST',\n      'insertOrderedList': 'INSERT_ORDERED_LIST',\n      'justifyLeft': 'JUSTIFY_LEFT',\n      'justifyCenter': 'JUSTIFY_CENTER',\n      'justifyRight': 'JUSTIFY_RIGHT',\n      'justifyFull': 'JUSTIFY_FULL',\n      'createLink': 'CREATE_LINK',\n      'editLink': 'EDIT_LINK',\n      'unlink': 'UNLINK'\n    };\n    \n    // Handle formatBlock commands (headings)\n    if (command === 'formatBlock' && value) {\n      const formatKey = `FORMAT_${value}`;\n      return activeFormats.has(formatKey);\n    }\n    \n    const formatKey = formatMap[command];\n    return formatKey ? activeFormats.has(formatKey) : false;\n  }, [activeFormats]);\n\n  const isButtonDisabled = useCallback((command: string): boolean => {\n    if (command === 'undo') return !canUndo;\n    if (command === 'redo') return !canRedo;\n    return false;\n  }, [canUndo, canRedo]);\n\n  const getButtonAriaLabel = (button: ToolbarButton): string => {\n    const isActive = isButtonActive(button.command, button.value);\n    const isDisabled = isButtonDisabled(button.command);\n    \n    let label = button.title;\n    \n    // Add keyboard shortcut information to aria-label\n    const shortcuts: Record<string, string> = {\n      'bold': 'Ctrl+B',\n      'italic': 'Ctrl+I',\n      'underline': 'Ctrl+U',\n      'createLink': 'Ctrl+K',\n      'undo': 'Ctrl+Z',\n      'redo': 'Ctrl+Y',\n      'removeFormat': 'Ctrl+\\\\'\n    };\n    \n    // Add heading shortcuts\n    if (button.command === 'formatBlock' && button.value) {\n      const headingNum = button.value.replace('H', '');\n      shortcuts[`${button.command}-${button.value}`] = `Ctrl+${headingNum}`;\n    }\n    \n    // Add alignment shortcuts\n    if (button.command === 'justifyLeft') shortcuts[button.command] = 'Ctrl+L';\n    if (button.command === 'justifyCenter') shortcuts[button.command] = 'Ctrl+E';\n    if (button.command === 'justifyRight') shortcuts[button.command] = 'Ctrl+R';\n    if (button.command === 'insertOrderedList') shortcuts[button.command] = 'Ctrl+Shift+L';\n    \n    const shortcutKey = button.value ? `${button.command}-${button.value}` : button.command;\n    const shortcut = shortcuts[shortcutKey];\n    \n    if (shortcut) {\n      label += `, keyboard shortcut ${shortcut}`;\n    }\n    \n    if (isDisabled) {\n      label += ', disabled';\n    } else if (isActive) {\n      label += ', currently active';\n    }\n    \n    return label;\n  };\n\n  const getButtonId = (button: ToolbarButton, index: number): string => {\n    // Create unique ID for each button\n    const baseId = button.value ? `${button.command}-${button.value}` : button.command;\n    return `toolbar-${baseId}-${index}`;\n  };\n\n  return (\n    <div \n      className=\"toolbar\" \n      role=\"toolbar\" \n      aria-label=\"Text formatting toolbar\"\n    >\n      {toolbarButtons.map((button, index) => {\n        const buttonId = getButtonId(button, index);\n        const isActive = isButtonActive(button.command, button.value);\n        const isDisabled = isButtonDisabled(button.command);\n        const ariaLabel = getButtonAriaLabel(button);\n        \n        return (\n          <MemoizedBasicToolbarButton\n            key={buttonId}\n            button={button}\n            isActive={isActive}\n            isDisabled={isDisabled}\n            ariaLabel={ariaLabel}\n            buttonId={buttonId}\n            onButtonClick={handleButtonClick}\n            onKeyDown={handleKeyDown}\n          />\n        );\n      })}\n    </div>\n  );\n};","import React from 'react';\n\n// Main WYSIWYG Editor Props\nexport interface WYSIWYGEditorProps {\n  initialContent?: string;\n  placeholder?: string;\n  onChange?: (content: string) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  toolbarConfig?: ToolbarConfig;\n  showConfigDropdown?: boolean;\n  configOptions?: Record<string, { name: string; description?: string; config?: ToolbarConfig }>;\n  selectedConfigKey?: string;\n  onConfigChange?: (configKey: string) => void;\n  height?: string | number; // Height of the editor (e.g., '400px', 400, 'auto')\n}\n\n// Toolbar Component Props\nexport interface ToolbarProps {\n  onCommand: (command: string, value?: string) => void;\n  activeFormats: Set<string>;\n  canUndo: boolean;\n  canRedo: boolean;\n  toolbarConfig?: ResolvedToolbarConfig;\n  showConfigDropdown?: boolean;\n  configOptions?: Record<string, { name: string; description?: string; config?: ToolbarConfig }>;\n  selectedConfigKey?: string;\n  onConfigChange?: (configKey: string) => void;\n}\n\n// Toolbar Button Configuration\nexport interface ToolbarButton {\n  command: string;\n  value?: string;\n  icon: string;\n  title: string;\n}\n\n// EditableArea Component Props\nexport interface EditableAreaProps {\n  content: string;\n  placeholder: string;\n  onContentChange: (content: string) => void;\n  onFocus: () => void;\n  onBlur: () => void;\n  editorRef: React.RefObject<HTMLDivElement>;\n  onSelectionChange?: (selectionState: SelectionState) => void;\n  onLinkClick?: (event: MouseEvent, linkElement: HTMLAnchorElement) => void;\n  height?: string | number; // Height of the editable area\n}\n\n// Selection State Management\nexport interface SelectionState {\n  range: Range | null;\n  isCollapsed: boolean;\n  activeFormats: Set<string>;\n  currentBlockFormat: string;\n}\n\n// Editor Command Configuration\nexport interface EditorCommand {\n  type: 'execCommand' | 'custom';\n  command: string;\n  value?: string;\n  requiresSelection?: boolean;\n}\n\n// Command Constants\nexport const COMMANDS = {\n  BOLD: { type: 'execCommand' as const, command: 'bold' },\n  ITALIC: { type: 'execCommand' as const, command: 'italic' },\n  UNDERLINE: { type: 'execCommand' as const, command: 'underline' },\n  CREATE_LINK: { type: 'execCommand' as const, command: 'createLink', requiresSelection: true },\n  FORMAT_H1: { type: 'execCommand' as const, command: 'formatBlock', value: 'H1' },\n  FORMAT_H2: { type: 'execCommand' as const, command: 'formatBlock', value: 'H2' },\n  FORMAT_H3: { type: 'execCommand' as const, command: 'formatBlock', value: 'H3' },\n  INSERT_UNORDERED_LIST: { type: 'execCommand' as const, command: 'insertUnorderedList' },\n  INSERT_ORDERED_LIST: { type: 'execCommand' as const, command: 'insertOrderedList' },\n  JUSTIFY_LEFT: { type: 'execCommand' as const, command: 'justifyLeft' },\n  JUSTIFY_CENTER: { type: 'execCommand' as const, command: 'justifyCenter' },\n  JUSTIFY_RIGHT: { type: 'execCommand' as const, command: 'justifyRight' },\n  UNDO: { type: 'execCommand' as const, command: 'undo' },\n  REDO: { type: 'execCommand' as const, command: 'redo' },\n  REMOVE_FORMAT: { type: 'execCommand' as const, command: 'removeFormat' }\n};\n\n// Content Sanitization Configuration\nexport interface SanitizationConfig {\n  allowedTags: string[];\n  allowedAttributes: Record<string, string[]>;\n}\n\nexport const DEFAULT_SANITIZATION_CONFIG: SanitizationConfig = {\n  allowedTags: ['p', 'br', 'strong', 'em', 'u', 'h1', 'h2', 'h3', 'ul', 'ol', 'li', 'a'],\n  allowedAttributes: {\n    'a': ['href', 'title'],\n    '*': ['style'] // Limited style attributes only\n  }\n};\n\n// Toolbar Configuration Types\nexport type ToolbarCategory = \n  | 'formatting' \n  | 'structure' \n  | 'lists' \n  | 'alignment' \n  | 'media' \n  | 'links' \n  | 'advanced';\n\nexport type ToolbarButtonType = \n  | 'bold' | 'italic' | 'underline' | 'strikethrough'\n  | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  | 'bulletList' | 'numberedList' | 'indent' | 'outdent'\n  | 'alignLeft' | 'alignCenter' | 'alignRight' | 'alignJustify'\n  | 'image' | 'file' | 'table'\n  | 'link' | 'unlink'\n  | 'fontColor' | 'backgroundColor' | 'fontSize' | 'fontFamily'\n  | 'subscript' | 'superscript' | 'specialChar' | 'horizontalRule'\n  | 'findReplace' | 'sourceCode' | 'fullscreen' | 'print'\n  | 'undo' | 'redo' | 'removeFormat';\n\nexport interface ToolbarGroup {\n  name: string;\n  buttons: ToolbarButtonType[];\n}\n\nexport interface ToolbarConfig {\n  preset?: 'minimal' | 'standard' | 'full';\n  include?: {\n    categories?: ToolbarCategory[];\n    buttons?: ToolbarButtonType[];\n    groups?: ToolbarGroup[];\n  };\n  exclude?: {\n    categories?: ToolbarCategory[];\n    buttons?: ToolbarButtonType[];\n  };\n  order?: (ToolbarButtonType | ToolbarGroup)[];\n}\n\nexport interface ResolvedToolbarConfig {\n  groups: ToolbarGroup[];\n  enabledButtons: Set<ToolbarButtonType>;\n}"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","React","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","error","format","_len2","args","_key2","printWarning","level","ReactDebugCurrentFrame","stack","argsWithFormat","item","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_MODULE_REFERENCE","isValidElementType","type","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","context","provider","outerName","lazyComponent","payload","init","assign","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","disableLogs","props","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","name","source","ownerFn","x","match","reentry","componentFrameCache","PossiblyWeakMap","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","previousDispatcher","Fake","sample","sampleLines","controlLines","s","_frame","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","prototype","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","checkPropTypes","typeSpecs","values","location","componentName","has","typeSpecName","error$1","err","ex","isArrayImpl","isArray","typeName","value","hasToStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","ReactCurrentOwner","RESERVED_PROPS","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","config","getter","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","key","ref","jsxDEV","maybeKey","propName","defaultProps","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","validateExplicitKey","currentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","iterator","step","validatePropTypes","propTypes","_name","validateFragmentProps","fragment","keys","didWarnAboutKeySpread","jsxWithValidation","isStaticChildren","validType","sourceInfo","typeString","children","beforeExample","afterExample","jsxWithValidationStatic","jsxWithValidationDynamic","jsx","jsxs","reactJsxRuntime_development","jsxRuntimeModule","require$$1","toolbarGroups","colorPalette","MemoizedToolbarButton","memo","button","groupName","index","isActive","isDisabled","openDropdown","openColorPicker","onButtonClick","onDropdownSelect","onColorSelect","setOpenColorPicker","dropdownRefs","buttonId","el","_a","option","color","buttonTypeToConfig","AdvancedToolbar","onCommand","activeFormats","canUndo","canRedo","toolbarConfig","showConfigDropdown","configOptions","selectedConfigKey","onConfigChange","setOpenDropdown","useState","useRef","effectiveToolbarGroups","useMemo","group","buttonType","handleButtonClick","useCallback","handleDropdownSelect","command","handleColorSelect","isButtonActive","formatMap","formatKey","isButtonDisabled","useEffect","handleClickOutside","event","target","timeoutId","renderButton","getCurrentSelection","selection","range","getActiveFormats","currentBlockFormat","getCurrentBlockFormat","restoreSelection","selectionState","saveSelection","formatBlock","tagName","isSelectionInEditor","editorElement","focusEditor","focusEditorWithSelection","DEFAULT_SANITIZATION_CONFIG","ContentSanitizer","__publicField","html","tempDiv","cleaned","sanitized","textContent","textNode","allowedAttrs","attributes","attr","attrName","sanitizedHref","sanitizedStyle","url","trimmedUrl","urlObj","urlWithProtocol","style","dangerousPatterns","pattern","allowedStyleProperties","styleDeclarations","decl","sanitizedDeclarations","declaration","property","normalized","contentSanitizer","EditableArea","content","placeholder","onContentChange","onFocus","onBlur","editorRef","onSelectionChange","onLinkClick","height","isFocused","setIsFocused","lastSelection","setLastSelection","handleSelectionChange","currentSelection","restoreFocus","handleInput","newContent","processedContent","processContent","rawContent","processed","handleFocus","_event","handleBlur","handlePaste","clipboardData","pastedContent","plainText","sanitizedContent","insertContentAtCursor","handleClick","linkElement","handleKeyDown","handleEnterInList","currentElement","listItem","list","_b","exitList","newParagraph","shouldShowPlaceholder","centerAspectCrop","mediaWidth","mediaHeight","aspect","centerCrop","makeAspectCrop","ImageUploadCropModal","isOpen","onClose","onImageInsert","currentStep","setCurrentStep","setSelectedFile","imageUrl","setImageUrl","crop","setCrop","completedCrop","setCompletedCrop","croppedImageUrl","setCroppedImageUrl","setAspect","isProcessing","setIsProcessing","isDragOver","setIsDragOver","setError","fileInputRef","imgRef","canvasRef","maxSize","acceptedTypes","resetModal","handleClose","validateFile","file","handleFileSelect","validationError","handleFileInputChange","handleDragOver","handleDragLeave","handleDrop","files","handleBrowseClick","onImageLoad","width","handleAspectChange","newAspect","getCroppedImg","image","canvas","ctx","scaleX","scaleY","resolve","blob","handleCrop","croppedUrl","handleSaveToEditor","handleBackToCrop","formatFileSize","bytes","sizes","Fragment","ReactCrop","_","percentCrop","FileUploadModal","onFileSelect","accept","title","description","acceptedType","baseType","getAcceptedTypesDisplay","ImageManager","imageElement","onUpdate","onRemove","isVisible","setIsVisible","position","setPosition","imageSize","setImageSize","alignment","setAlignment","_isResizing","_setIsResizing","managerRef","rect","editorRect","computedStyle","display","marginLeft","marginRight","handleAlignment","newAlignment","handleResize","newWidth","aspectRatio","newHeight","handleFloat","floatDirection","handleAltText","currentAlt","newAlt","handleRemove","handleImageClick","handleDocumentClick","TableInsertModal","onInsert","rows","setRows","cols","setCols","hasHeaders","setHasHeaders","previewRows","previewCols","handleInsert","rowIndex","colIndex","specialCharCategories","SpecialCharModal","activeCategory","setActiveCategory","searchTerm","setSearchTerm","handleCharClick","char","filteredChars","category","UrlInputModal","onSubmit","initialValue","setUrl","handleSubmit","FindReplaceModal","onFindReplace","findText","setFindText","replaceText","setReplaceText","NotificationModal","message","autoClose","autoCloseDelay","timer","typeStyles","LinkPreviewPopup","linkUrl","_linkText","onEdit","onGoToLink","COMMANDS","_CommandExecutor","commandKey","_savedSelection","commandValue","startElement","endElement","startBlock","endBlock","htmlElement","textAlign","normalizedUrl","link","newUrl","walker","currentLink","options","img","container","beforeText","afterText","_c","beforeP","afterP","imgP","parent","float","input","reader","dataUrl","fileUrl","blobUrl","fileName","fileType","fileIcon","tableConfig","table","tbody","row","j","cell","firstCell","isSourceMode","sourceContent","htmlContent","editorContainer","isFullscreen","printWindow","currentSpellCheck","CommandExecutor","commandExecutor","configCache","MAX_CACHE_SIZE","_ToolbarConfigResolver","categories","buttons","groups","cat","btn","processedConfig","cacheKey","cachedResult","includedButtons","buttonSet","result","preset","normalizedPreset","presetButtons","availablePresets","include","normalizedCategory","categoryButtons","availableCategories","normalizedButton","availableButtons","safeConfig","firstKey","exclude","buttonsToExclude","order","includeGroups","usedButtons","validButtons","remainingButtons","matchingButtons","ToolbarConfigResolver","WYSIWYGEditor","initialContent","onChange","setContent","isEditorFocused","setIsEditorFocused","setActiveFormats","setCanUndo","setCanRedo","isImageUploadCropModalOpen","setIsImageUploadCropModalOpen","isFileUploadModalOpen","setIsFileUploadModalOpen","selectedImage","setSelectedImage","isTableModalOpen","setIsTableModalOpen","isSpecialCharModalOpen","setIsSpecialCharModalOpen","isUrlInputModalOpen","setIsUrlInputModalOpen","urlInputType","setUrlInputType","currentLinkUrl","setCurrentLinkUrl","isFindReplaceModalOpen","setIsFindReplaceModalOpen","isNotificationModalOpen","setIsNotificationModalOpen","notificationData","setNotificationData","savedSelection","setSavedSelection","isLinkPreviewOpen","setIsLinkPreviewOpen","linkPreviewData","setLinkPreviewData","announcementRef","resolvedToolbarConfig","memoizedToolbarConfig","updateFormatStates","formats","announceToScreenReader","getFormatName","formatNames","handleImageDragStart","handleImageDragEnd","setupImageManagement","images","handleImageInsert","handleImageUpdate","handleImageRemove","handleFileUpload","getFileIcon","handleTableInsert","handleSpecialCharInsert","handleUrlSubmit","showNotification","handleFindReplace","currentContent","updatedContent","matches","handleLinkClick","handleLinkPreviewEdit","handleLinkPreviewRemove","handleLinkPreviewGoTo","handleLinkPreviewClose","executeCommand","_fromKeyboard","savedRange","findLinkFromNode","endLink","allLinks","formatName","action","ctrlKey","metaKey","shiftKey","shortcut","handleContentChange","_selectionState","ensureLinksHaveProperAttributes","anchorElement","htmlData","draggedImg","existingImg","defaultToolbarButtons","MemoizedBasicToolbarButton","ariaLabel","onKeyDown","Toolbar","toolbarButtons","enabledButtons","buttonConfig","getButtonAriaLabel","label","shortcuts","headingNum","shortcutKey","getButtonId"],"mappings":"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","x_google_ignoreList":[0,1,2]}